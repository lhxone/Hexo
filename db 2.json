{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/cactus/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/cactus/source/css/rtl.styl","path":"css/rtl.styl","modified":0,"renderable":1},{"_id":"themes/cactus/source/images/favicon-192x192.png","path":"images/favicon-192x192.png","modified":0,"renderable":1},{"_id":"themes/cactus/source/images/apple-touch-icon.png","path":"images/apple-touch-icon.png","modified":0,"renderable":1},{"_id":"themes/cactus/source/images/favicon.ico","path":"images/favicon.ico","modified":0,"renderable":1},{"_id":"themes/cactus/source/images/logo.png","path":"images/logo.png","modified":0,"renderable":1},{"_id":"themes/cactus/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/cactus/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/clipboard/clipboard.min.js","path":"lib/clipboard/clipboard.min.js","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/jquery/jquery.min.js","path":"lib/jquery/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-Bold.ttf","path":"lib/meslo-LG/MesloLGL-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-BoldItalic.ttf","path":"lib/meslo-LG/MesloLGL-BoldItalic.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-Italic.ttf","path":"lib/meslo-LG/MesloLGL-Italic.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-Regular.ttf","path":"lib/meslo-LG/MesloLGL-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-Bold.ttf","path":"lib/meslo-LG/MesloLGM-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-BoldItalic.ttf","path":"lib/meslo-LG/MesloLGM-BoldItalic.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-Italic.ttf","path":"lib/meslo-LG/MesloLGM-Italic.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-Bold.ttf","path":"lib/meslo-LG/MesloLGS-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-Regular.ttf","path":"lib/meslo-LG/MesloLGM-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-BoldItalic.ttf","path":"lib/meslo-LG/MesloLGS-BoldItalic.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-Italic.ttf","path":"lib/meslo-LG/MesloLGS-Italic.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-Regular.ttf","path":"lib/meslo-LG/MesloLGS-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.eot","path":"lib/vazir-font/Vazir-Black.eot","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.ttf","path":"lib/vazir-font/Vazir-Black.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.woff","path":"lib/vazir-font/Vazir-Black.woff","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.woff2","path":"lib/vazir-font/Vazir-Black.woff2","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.eot","path":"lib/vazir-font/Vazir-Bold.eot","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.ttf","path":"lib/vazir-font/Vazir-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.woff","path":"lib/vazir-font/Vazir-Bold.woff","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.woff2","path":"lib/vazir-font/Vazir-Bold.woff2","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.eot","path":"lib/vazir-font/Vazir-Light.eot","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.ttf","path":"lib/vazir-font/Vazir-Light.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.woff","path":"lib/vazir-font/Vazir-Light.woff","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.woff2","path":"lib/vazir-font/Vazir-Light.woff2","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.eot","path":"lib/vazir-font/Vazir-Medium.eot","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.ttf","path":"lib/vazir-font/Vazir-Medium.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.woff","path":"lib/vazir-font/Vazir-Medium.woff","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.woff2","path":"lib/vazir-font/Vazir-Medium.woff2","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.ttf","path":"lib/vazir-font/Vazir-Thin.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.woff","path":"lib/vazir-font/Vazir-Thin.woff","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.woff2","path":"lib/vazir-font/Vazir-Thin.woff2","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir.eot","path":"lib/vazir-font/Vazir.eot","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir.ttf","path":"lib/vazir-font/Vazir.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir.woff","path":"lib/vazir-font/Vazir.woff","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.eot","path":"lib/vazir-font/Vazir-Thin.eot","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir.woff2","path":"lib/vazir-font/Vazir.woff2","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/font-face.css","path":"lib/vazir-font/font-face.css","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.eot","path":"lib/font-awesome/webfonts/fa-brands-400.eot","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.svg","path":"lib/font-awesome/webfonts/fa-brands-400.svg","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.ttf","path":"lib/font-awesome/webfonts/fa-brands-400.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.woff","path":"lib/font-awesome/webfonts/fa-brands-400.woff","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.eot","path":"lib/font-awesome/webfonts/fa-regular-400.eot","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.svg","path":"lib/font-awesome/webfonts/fa-regular-400.svg","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.ttf","path":"lib/font-awesome/webfonts/fa-regular-400.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.woff","path":"lib/font-awesome/webfonts/fa-regular-400.woff","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.eot","path":"lib/font-awesome/webfonts/fa-solid-900.eot","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.svg","path":"lib/font-awesome/webfonts/fa-solid-900.svg","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.ttf","path":"lib/font-awesome/webfonts/fa-solid-900.ttf","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.woff","path":"lib/font-awesome/webfonts/fa-solid-900.woff","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/justified-gallery/css/justifiedGallery.min.css","path":"lib/justified-gallery/css/justifiedGallery.min.css","modified":0,"renderable":1},{"_id":"themes/cactus/source/lib/justified-gallery/js/jquery.justifiedGallery.min.js","path":"lib/justified-gallery/js/jquery.justifiedGallery.min.js","modified":0,"renderable":1},{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/img/IMG_1624.JPG","path":"img/IMG_1624.JPG","modified":0,"renderable":0},{"_id":"source/img/IMG_1625.JPG","path":"img/IMG_1625.JPG","modified":0,"renderable":0},{"_id":"source/static/images/Zx.jpg","path":"static/images/Zx.jpg","modified":0,"renderable":0},{"_id":"source/static/images/zz.jpg","path":"static/images/zz.jpg","modified":0,"renderable":0}],"Cache":[{"_id":"source/CNAME","hash":"c3f2215e37e5e054d70099ff3483c028b5c120c4","modified":1615634999000},{"_id":"source/.DS_Store","hash":"f65d91746fc353d6e8245e638bddf79715898358","modified":1619524673164},{"_id":"source/_posts/C语言extern与static.md","hash":"eaaaf7955da4812168ff996e85d3377bb277a073","modified":1618311009000},{"_id":"source/_posts/Java矩形类.md","hash":"ddd0f8bf48037e9fe9c7f556bc4e5fd931eb8fc8","modified":1619083549536},{"_id":"source/_posts/Java三角形类.md","hash":"ff4b199c3676ddb5501e3b5a1e7361a5a2e9650e","modified":1618284567000},{"_id":"source/_posts/Java—abstract类与继承.md","hash":"de69d134901fa23e3a68911d4d6f3547f4e197f6","modified":1618284555000},{"_id":"source/_posts/JavaDemo.md","hash":"241e8ef25f9177fb5a3113c54475ed5c708a7f3b","modified":1618284562000},{"_id":"source/_posts/Java指北.md","hash":"8758fe7ffafc494ce089f837a112abddbffe597e","modified":1618284572000},{"_id":"source/_posts/Java银行系统.md","hash":"7e7e609d835109740abd324220610185ce05058a","modified":1618284525000},{"_id":"source/_posts/Mac虚拟机安装指北-适用于Big-Sur及Catalina.md","hash":"44c3f5584fc084ecb0f93cc5df22071156beea01","modified":1618284587000},{"_id":"source/_posts/Java矩阵操作.md","hash":"caa69459b9e975ceeea937ad7c32af9ae1439e14","modified":1618284579000},{"_id":"source/_posts/Matlab实验1-2.md","hash":"60f7d0c76ebd2960511f94c877cd5e5c3ae1bbaf","modified":1618284618000},{"_id":"source/_posts/Matlab实验1-1.md","hash":"c36daebc3e8c2efd8e20a57ef372a2849f23e02c","modified":1618284597000},{"_id":"source/_posts/OS结构设计P-24-P-33.md","hash":"625169ea2521d76834ed3d3aa5cfffb0dc2e1e58","modified":1618284653000},{"_id":"source/_posts/Video-Demo.md","hash":"1d2fb95fe07105e3d7d3bb2d0c7d1bd02c53d7c3","modified":1618284660000},{"_id":"source/_posts/Matlab实验2-2.md","hash":"25c815660afe280f26dc71f77d7b6996fef83b02","modified":1618284638000},{"_id":"source/_posts/Matlab实验2-3.md","hash":"3011b0a9981aa9740125cc9597825b753a3ae6d7","modified":1618284645000},{"_id":"source/_posts/二叉树-Binary-Tree.md","hash":"50975092b6789be4ad2e328becb199d2c5da076b","modified":1618318400000},{"_id":"source/_posts/分时操作系统与实时操作系统的比较.md","hash":"1d8a4f05d7f155d80a566ae9c7f1fa5dde6ddb52","modified":1618284678000},{"_id":"source/_posts/数组与矩阵.md","hash":"c4de11149ba17d6fb2f69e10526459a14c3b6cb4","modified":1618318424000},{"_id":"source/_posts/Matlab实验3-1.md","hash":"884f0a46710ce22610ca763fd94b39d71b6d8f4d","modified":1619365004926},{"_id":"source/_posts/操作系统第二章作业.md","hash":"81ac30390c93d91db4f41e192b022ae1e0f503c0","modified":1618885678000},{"_id":"source/_posts/栈与队列.md","hash":"a2d14c69ffc6d6c9635f53b49070a4032500340c","modified":1618318423000},{"_id":"source/_posts/百鸡问题.md","hash":"3b5bc8d8e851005b91ee03efff984f36d599faf1","modified":1618284704000},{"_id":"source/_posts/第四节-操作系统的特征.md","hash":"613e8a338cf1c4cf48351591cc43aa91b11387ab","modified":1618284710000},{"_id":"source/_posts/泰勒级数展开求解e的x次方.md","hash":"edd46b7c5685da4655f79f5e76f594adc955df8a","modified":1618284699000},{"_id":"source/about/index.md","hash":"b6c5c16c08853cfb9fe855f40af3784cbbb99049","modified":1615708460000},{"_id":"source/_posts/顺序表与链表.md","hash":"5563f388ab384f0b3400bb1bcfc1b6e152badd07","modified":1618318446000},{"_id":"source/categories/index.md","hash":"3cf4c4bca5872e996cea3c6321cfd6875c79e407","modified":1617705498000},{"_id":"source/img/.DS_Store","hash":"00a384cd3ceb90f530babcd4048a480f9ad5c171","modified":1619524678263},{"_id":"source/tags/index.md","hash":"6a773abbf6d2bd339ce7a005b5a2c0a4bc7b6b7a","modified":1617705510000},{"_id":"source/_posts/Matlab实验2-1.md","hash":"45ad1cef252831b5f6df22eb9586200ad845f53f","modified":1618284631000},{"_id":"source/_posts/C-学生成绩.md","hash":"b4bf28bcb0231d994f4f4b7283f60a3296bde6fd","modified":1618407931000},{"_id":"source/_posts/Matlab实验1-3.md","hash":"4b85a91744e74dabc176c58acc2e8f9a0c90e40d","modified":1618284624000},{"_id":"source/img/IMG_1624.JPG","hash":"9b31561c95b8b2555737ff145b04f97979f5c588","modified":1619521951000},{"_id":"source/img/IMG_1625.JPG","hash":"9fc234dcc55240637db4ed9afc6e3bc568bdf850","modified":1619521930000},{"_id":"source/static/images/zz.jpg","hash":"7aec3f89bdcb1c971254a4551f73af21560b2170","modified":1615203603000},{"_id":"themes/cactus/.gitignore","hash":"c5345a2c5fa6c136dbe2020a405e541b4755a259","modified":1615646951000},{"_id":"themes/cactus/.stylintrc","hash":"eb5f48e83657928cb0cbee031373b2cd36ca0083","modified":1615646951000},{"_id":"themes/cactus/.jshintrc","hash":"2548bd6ce44422edc7e6f9f68061ab47f26c4f57","modified":1615646951000},{"_id":"themes/cactus/LICENSE","hash":"346ece39a983b0e7858c11f785cd846cef9eb875","modified":1615646951000},{"_id":"themes/cactus/gulpfile.js","hash":"0e55606323a45873506c08be6528478c08373e1e","modified":1615646951000},{"_id":"themes/cactus/_config.yml","hash":"ac16a6ec83f79b7ec1f8fbf9ce48f218293e82c1","modified":1617590754000},{"_id":"themes/cactus/README.md","hash":"b3d528ede1ed7a41bb8e0238d5a14100f00e3af4","modified":1615646951000},{"_id":"themes/cactus/package.json","hash":"a6060fadd36114d8cb74e7ff4c7d073901b5edcd","modified":1615646951000},{"_id":"themes/cactus/layout/index.ejs","hash":"fe52cbcbf81ad0933f3704c5c8628dbab83ab54b","modified":1615733826000},{"_id":"themes/cactus/layout/layout.ejs","hash":"1fb0c0646fb52bebc3b62ba75bb2066dd0d723f2","modified":1615708371000},{"_id":"themes/cactus/layout/archive.ejs","hash":"53de8817e37be01b3ba8fa5ca31b9cafa2f3c011","modified":1615646951000},{"_id":"themes/cactus/layout/post.ejs","hash":"f9149f294e6142437c58784c41f1d082a61c8b82","modified":1615646951000},{"_id":"themes/cactus/languages/de.yml","hash":"43b2f4e078b042aaae0377a4235216a51ed82e0d","modified":1615646951000},{"_id":"themes/cactus/languages/ca.yml","hash":"b79dd2c21dc6697c635e92db1f661a4b8d5d2305","modified":1615646951000},{"_id":"themes/cactus/layout/page.ejs","hash":"c5465d5315a7544aa466b01fd8cfb62917a8bb1d","modified":1615646951000},{"_id":"themes/cactus/languages/en.yml","hash":"703548ad90034d4e5207a27eb50f726dc27e4c0c","modified":1615646951000},{"_id":"themes/cactus/languages/es.yml","hash":"2b1fc8b0d636123e9ee39017fa20053bd1913a5a","modified":1615646951000},{"_id":"themes/cactus/languages/default.yml","hash":"703548ad90034d4e5207a27eb50f726dc27e4c0c","modified":1615646951000},{"_id":"themes/cactus/languages/fa.yml","hash":"63f32e50953af1c4bd0308a4fca5862b5287c2cb","modified":1615646951000},{"_id":"themes/cactus/languages/kr.yml","hash":"651fb83991c91b13b53ed55740e5402cf0f1c5e8","modified":1615646951000},{"_id":"themes/cactus/languages/it.yml","hash":"62800bcae1f2d2454f87f4bcf4d7593848424f61","modified":1615646951000},{"_id":"themes/cactus/languages/fr.yml","hash":"5c07406998f19d219a5a7b65c0d88b6b023f85b2","modified":1615646951000},{"_id":"themes/cactus/languages/ru.yml","hash":"81b57fcd1977ef534f4bf303dbc1b4710cc7f057","modified":1615646951000},{"_id":"themes/cactus/languages/pt-br.yml","hash":"4859aba788a050c2d5d0b997693b0c8c24b349f7","modified":1615646951000},{"_id":"themes/cactus/languages/pl.yml","hash":"8a2d6dc874d86c38d42c2c861c39590647b5d536","modified":1615646951000},{"_id":"themes/cactus/languages/nl.yml","hash":"ac0573352ad2c737a7686bcca498b985e7bd6447","modified":1615646951000},{"_id":"themes/cactus/languages/zh-TW.yml","hash":"2f4e050c9b35a67f4a7278cec3a949533c2ac16a","modified":1615646951000},{"_id":"themes/cactus/scripts/merge-configs.js","hash":"2048c3415d96b17b9d84aa44bc0c25f1210525f8","modified":1615646951000},{"_id":"themes/cactus/languages/zh-CN.yml","hash":"8f81faaad9a0615b09dbc23868484a55ec958f6f","modified":1615646951000},{"_id":"themes/cactus/languages/vi.yml","hash":"f84893c3ec3e45875c90069e14b17ed3016ed973","modified":1615646951000},{"_id":"themes/cactus/scripts/meta.js","hash":"fa6055a39851c9953d033e70c1614547b94dce60","modified":1615646951000},{"_id":"themes/cactus/scripts/thumbnail.js","hash":"df8829fd8c3119650037eba5ec11bdce06acff9d","modified":1615646951000},{"_id":"themes/cactus/scripts/page_title.js","hash":"fa662dbdb82779af1b95e35ed7ccdf4866a53dee","modified":1615646951000},{"_id":"themes/cactus/languages/tr.yml","hash":"2702914007e6bade9d6861078c0e179ac05bf48c","modified":1615646951000},{"_id":"themes/cactus/layout/_partial/head.ejs","hash":"76c1e4afad8d07aa06d17ea863b29f8d5d456caa","modified":1615733840000},{"_id":"themes/cactus/layout/_partial/comments.ejs","hash":"4cf8d0059e5f8bc8ae1dd1a426293583fd398052","modified":1615646951000},{"_id":"themes/cactus/layout/_partial/pagination.ejs","hash":"23bf862b3b8a3cd831850504d9b5a24d21b005e7","modified":1615646951000},{"_id":"themes/cactus/layout/_partial/scripts.ejs","hash":"71de4b9eeebd2b9784abfb4aaedbdc5239345765","modified":1615707535000},{"_id":"themes/cactus/layout/_partial/footer.ejs","hash":"44a4fb683ed8f0d879f94aab9c3af57f5c364310","modified":1615706134000},{"_id":"themes/cactus/layout/_partial/header.ejs","hash":"6a9767407e895c09b841adc4e49f11c65235f725","modified":1616575948000},{"_id":"themes/cactus/source/css/_extend.styl","hash":"b6a4e5905a7515dda66919167531a5ab2b3d1fe2","modified":1615646951000},{"_id":"themes/cactus/layout/_partial/styles.ejs","hash":"be1b54388eb02176dd4722285dda19e3dce2e62e","modified":1615646951000},{"_id":"themes/cactus/source/css/_fonts.styl","hash":"354809b5a64e8a47a66c66fd1a28ac597c1460a6","modified":1615646951000},{"_id":"themes/cactus/source/css/_util.styl","hash":"2bfeb2e2605dd5235693b00c71a212646d2e0410","modified":1615646951000},{"_id":"themes/cactus/layout/_partial/search.ejs","hash":"8b4bf9cf5db0ce762a31fc3baae0f2fc004bece4","modified":1615646951000},{"_id":"themes/cactus/source/css/style.styl","hash":"18b22cfdc7457d81db7694aef5850cc36ff87a77","modified":1615646951000},{"_id":"themes/cactus/source/css/_variables.styl","hash":"69d9c5e95edcaee5ccd8218262b989ce721cce79","modified":1615646951000},{"_id":"themes/cactus/source/css/rtl.styl","hash":"ff8700e1626feeb53d905a2df2777bda7d1eca50","modified":1615646951000},{"_id":"themes/cactus/source/images/favicon-192x192.png","hash":"96e6fcbbb13a5914a6131391e210eb7dfd13d692","modified":1615646951000},{"_id":"themes/cactus/source/images/apple-touch-icon.png","hash":"57e2def34682655f41a0be2d083f16765ba7858b","modified":1615646951000},{"_id":"themes/cactus/source/images/favicon.ico","hash":"189f9842bcb79a6f8f9e8445bc8bbd773443826b","modified":1615646951000},{"_id":"themes/cactus/source/js/search.js","hash":"90860ff07187cf1cf21224b05e23b5e8fcf6efef","modified":1615646951000},{"_id":"themes/cactus/source/js/main.js","hash":"e147bd9473e398166d940a0ba104bde166091cfa","modified":1615708337000},{"_id":"themes/cactus/layout/_partial/post/actions_desktop.ejs","hash":"38aadd1ed890303dde582b722486138afee09b0a","modified":1615646951000},{"_id":"themes/cactus/layout/_partial/post/category.ejs","hash":"b5bfa049f17868fb09d9d2a7e1d5279fa0381d37","modified":1615646951000},{"_id":"themes/cactus/source/css/_mixins.styl","hash":"1a9e309523df9685e8d088dcff0a809c58e2c392","modified":1615646951000},{"_id":"themes/cactus/layout/_partial/post/actions_mobile.ejs","hash":"79b234ff3c264e66b2e71c819228e62bf92b48e4","modified":1615646951000},{"_id":"themes/cactus/layout/_partial/post/date.ejs","hash":"6f2d1aa9562df343b797d25705f1945323c465fb","modified":1615646951000},{"_id":"themes/cactus/layout/_partial/post/gallery.ejs","hash":"9aecd8908e8a684f33dc20c02497c0f1774137c7","modified":1615646951000},{"_id":"themes/cactus/layout/_partial/post/tag.ejs","hash":"e08fae30da060f49c087f6c121868b08eb55c795","modified":1615646951000},{"_id":"themes/cactus/layout/_partial/post/share.ejs","hash":"1a294382bd14d979525b8ed934d807bc7d083e4d","modified":1615646951000},{"_id":"themes/cactus/layout/_partial/post/title.ejs","hash":"a060f1c6e3718494a6b1d0e1981ea0bf4e549828","modified":1615646951000},{"_id":"themes/cactus/source/css/_colors/dark.styl","hash":"9c9655b42b85f754b8a573a1d4634c23c680e1bf","modified":1615646951000},{"_id":"themes/cactus/source/css/_colors/classic.styl","hash":"0f0ec41a4165814ce69688425d5ac4d701b7cc70","modified":1615646951000},{"_id":"themes/cactus/source/css/_colors/light.styl","hash":"d09f781cb02394850737b3a9efc6693307d5bf09","modified":1615646951000},{"_id":"themes/cactus/source/css/_colors/white.styl","hash":"2b25ad24573bded8b42f9d80112eab9fadbed1a5","modified":1615646951000},{"_id":"themes/cactus/source/css/_partial/archive.styl","hash":"ef8fc52337c4c7b010cad7c427cb78009b30f9d8","modified":1615646951000},{"_id":"themes/cactus/source/css/_partial/categories.styl","hash":"a43f00e61b3507f130b8a3f8108a4eeca147c2a0","modified":1615646951000},{"_id":"themes/cactus/source/css/_partial/comments.styl","hash":"1e90f1fb9d4c155df518cacb5a537e9de9c042c1","modified":1615646951000},{"_id":"themes/cactus/source/css/_partial/header.styl","hash":"7f18929e7f4ad6d20da374e8b9f85ce587220a87","modified":1615646951000},{"_id":"themes/cactus/source/css/_partial/footer.styl","hash":"14dda7f155bb21e6cd33ca3d8daa5b489b4707b3","modified":1615646951000},{"_id":"themes/cactus/source/css/_partial/index.styl","hash":"59c99f4ea3a73bf47ce030df166c5e33d5de31fb","modified":1615646951000},{"_id":"themes/cactus/source/css/_partial/search.styl","hash":"159be002780c62a77f46947cf854a7342fba24f4","modified":1615646951000},{"_id":"themes/cactus/source/css/_partial/pagination.styl","hash":"950bf517bbe7adb9a9aa4eb5ddec74ffc7598787","modified":1615646951000},{"_id":"themes/cactus/source/css/_partial/tags.styl","hash":"d571d5c7c960300d29c5f0ec3fe1140322ecd6b3","modified":1615646951000},{"_id":"themes/cactus/source/css/_partial/tooltip.styl","hash":"2daff581ec3efaec840cbfdee512195919c32629","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/agate.styl","hash":"53027913ed8d4f75ac3e49e76aad824f0df62da3","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/androidstudio.styl","hash":"2af0861725f97f0ee2ded67c3d2d4548c62b2d16","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/arduino-light.styl","hash":"15e8572585cd708221c513dea4bdd89d8fe56c10","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/arta.styl","hash":"b3e81e3e694ceb8deed178adb8b91013c5120e30","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/ascetic.styl","hash":"32cff3bef6fac3760fe78f203096477052a90552","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/atelier-cave-dark.styl","hash":"ce63dd8548688d88254405eedfa75b1d7c82449e","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/atelier-cave-light.styl","hash":"a5be0744a7ecf4a08f600ade4cfd555afc67bc15","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/atelier-dune-dark.styl","hash":"c196ff0ee064af0e507823694ae39020addfc280","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/atelier-estuary-dark.styl","hash":"0bb16a4eff93688f40787abc2f9e56e7d5cc93e7","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/atelier-dune-light.styl","hash":"931435fbc6f974e8ce9e32722680035d248a9dc1","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/atelier-estuary-light.styl","hash":"344276ca9b27e51d4c907f76afe5d13cf8e60bdf","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/atelier-forest-dark.styl","hash":"effbc5d75fa87203c847039869c22031b40d5b7d","modified":1615646951000},{"_id":"themes/cactus/source/css/_partial/article.styl","hash":"5a0f2af12f1f8cff441052513c33168e465fc50d","modified":1615863818000},{"_id":"themes/cactus/source/css/_highlight/atelier-forest-light.styl","hash":"95228d9f2102fad425536aac44b80b2cba1f5950","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/atelier-heath-dark.styl","hash":"9a2e9a1d0a01bbdf158560c3ed1c134e098b2c68","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/atelier-heath-light.styl","hash":"8c8c2e445abef85273be966d59770e9ced6aac21","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/atelier-lakeside-light.styl","hash":"2c54cb9bdb259ae3b5b29f63ac2469ed34b08578","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/atelier-lakeside-dark.styl","hash":"10ee3882fca7b97a37bd309d2d35fce9868647bb","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/atelier-plateau-light.styl","hash":"d1a05fdd1ededc9063d181ab25bad55a164aeb4a","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/atelier-plateau-dark.styl","hash":"84c80e6f67f62fce958d25817c277d2360272617","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/atelier-savanna-dark.styl","hash":"e32c1c70def8060fce5e790979a126da650ac642","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/atelier-seaside-dark.styl","hash":"2edf385215bbe1985b1a10106525d362667d28c2","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/atelier-seaside-light.styl","hash":"0597342da6e2d0c5bdcc7d42dabb07322b1a4177","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/atelier-savanna-light.styl","hash":"f8244c93711c7cb59dd79d2df966806b30d171ea","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/atelier-sulphurpool-light.styl","hash":"efa52713efc468abeeb2b9299704371583b857de","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/atelier-sulphurpool-dark.styl","hash":"538a14321193cd8abf2ddc484306631e54149ffb","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/brown-paper.styl","hash":"c2326ba20a5020a66ca7895258d18833327d4334","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/codepen-embed.styl","hash":"8b7b34484f76a6c2c3b1a9e49abb9b382f439ae8","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/dark.styl","hash":"f5e6e75958de59e87fc6be3a1668e870e20bc836","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/color-brewer.styl","hash":"2a439d6214430e2f45dd4939b4dfe1fe1a20aa0f","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/foundation.styl","hash":"bf8ddc94b4ad995b8b8805b5a4cf95004553fdac","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/darkula.styl","hash":"9717efa9194837ba3fb4d762997d33075dcf8bfa","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/docco.styl","hash":"b1c176378bb275f2e8caa759f36294e42d614bf1","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/far.styl","hash":"aaac3028f5e33123cd123a583cddc9290c45ec8e","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/github.styl","hash":"3336aeba324c6d34a6fd41fef9b47bc598f7064c","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/github-gist.styl","hash":"48211a03d33e7f7ada0b261162bea06676155a71","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/grayscale.styl","hash":"bf37d8b8d1e602126c51526f0cc28807440228ed","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/googlecode.styl","hash":"bda816beee7b439814b514e6869dc678822be1bc","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/highlightjs.styl","hash":"0e198b7a59191c7a39b641a4ddd22c948edb9358","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/gruvbox-dark.styl","hash":"76b744c14fd5600bea64731c05df97c2df75523f","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/hybrid.styl","hash":"b8eb5c69d12f2ee5ebc50265ae271699d7f1a8d3","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/hopscotch.styl","hash":"1378a6bc67a32c0cbff72ab771268b53f9aa586d","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/index.styl","hash":"002d5596f6379cc87dbd43d9145bc764aa666be1","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/idea.styl","hash":"a02967cb51c16a34e0ee895d33ded2b823d35b21","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/ir-black.styl","hash":"53e5d74326a4527b92272bbd6946d4fec92720e8","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/kimbie.dark.styl","hash":"45dbb168f22d739d0109745d2decd66b5f94e786","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/kimbie.light.styl","hash":"61f8baed25be05288c8604d5070afbcd9f183f49","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/kimbie.styl","hash":"51b889ca7c6fe178cfbbe28d875a6ea427184441","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/magula.styl","hash":"16d323f989b1420a0f72ef989242ece9bf17a456","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/mono-blue.styl","hash":"4c89a6ae29de67c0700585af82a60607e85df928","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/monokai-sublime.styl","hash":"c385b11345894be7e6ce3c5f08663e199933b8e4","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/obsidian.styl","hash":"199e28326be8590883f0813ebbd54fcfaa4750fd","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/paraiso-dark.styl","hash":"f1537bd868579fa018ecdbfd2eb922dcf3ba2cac","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/monokai.styl","hash":"f87be027848ea6bee623a08ad1e17b2f5b7937ee","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/pojoaque.styl","hash":"4e7b6b046b8575ac749f6aec4e953a62ada27a36","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/paraiso-light.styl","hash":"d224d1df0eb3395d9eea1344cee945c228af2911","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/railscasts.styl","hash":"b6674db9210e0c4444e4835fff2d1361f3ebd64c","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/pojoaque.jpg","hash":"c5fe6533b88b21f8d90d3d03954c6b29baa67791","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/rainbow.styl","hash":"c0cf97aae3e10fdcd10414547a711c9effbc39b8","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/solarized-dark.styl","hash":"90c9da5aa594383697e5b18892a7f95beb053f55","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/solarized-light.styl","hash":"aa0dd3fd25c464183b59c5575c9bee8756b397f2","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/school-book.styl","hash":"d43560fe519a931ce6da7d57416d7aa148441b83","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/sunburst.styl","hash":"af3eec0fd56151e55bbd49c31b151f36717611d8","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/tomorrow-night-blue.styl","hash":"f24c17d0ab815dcfaab3438cb9fe2ab4839f5e0d","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/tomorrow-night-eighties.styl","hash":"28d751075ebabf7d0327a36f725076fe82fdf626","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/tomorrow-night.styl","hash":"16ba09b2db501e4e3e2e7d62595d9bf935bf27c4","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/tomorrow-night-bright.styl","hash":"7674fecb6d27350727dc0d2dc93bc018382ebbd0","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/tomorrow.styl","hash":"15779cf6846725c7c35fc56cac39047d7e0aec1c","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/vs.styl","hash":"959a746f4b37aacb5d1d6ff1d57e0c045289d75d","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/paraiso.styl","hash":"75f181eece6b71d033ea0c8d6cf00ae7efb9e29b","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/zenburn.styl","hash":"68ff9332ccc03f9389b15b713415cde016f8088f","modified":1615646951000},{"_id":"themes/cactus/source/lib/clipboard/clipboard.min.js","hash":"ee60ca5ba9401456105ef703a98092369b579c80","modified":1615646951000},{"_id":"themes/cactus/source/css/_highlight/xcode.styl","hash":"5e8532ae8366dcf6a4ef5e4813dc3d42ab3d0a50","modified":1615646951000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.woff","hash":"9e8d954c46eaad8b8234fa906e9a268ee354dced","modified":1615646951000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.woff","hash":"9376516725e502f4375e06cc4fa7d940e2c93251","modified":1615646951000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.woff2","hash":"f1c5d7523d21c2bf820d827c9d5df4184c3866dc","modified":1615646951000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.woff2","hash":"8d4810991aa94f958aff20a9cd381caf338e3061","modified":1615646951000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.woff","hash":"cba77d3d16f7565f9ea79bd7657f4e00c7fe851f","modified":1615646951000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.woff2","hash":"e520d5f6bf7ea3c1e4f2aef2abbbc6a6f9b697cb","modified":1615646951000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.woff2","hash":"976b7aa7c2c2c049c548a25b5914cfbda74b0453","modified":1615646951000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.woff","hash":"2e8e3c873e6d98acc3c10aa84997104b276e1e68","modified":1615646951000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.woff","hash":"f231111b3c778b7a5898ea88c0f150c0e72be468","modified":1615646951000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.woff2","hash":"baa42f95b41411b9aeaa6c7594e5ccee10d42ac4","modified":1615646951000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir.woff2","hash":"dc3c0ed67c9abb062b562e8553776f614d2946c2","modified":1615646951000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir.woff","hash":"c798391d624b9bb44497a87ffc4f7eb52042dceb","modified":1615646951000},{"_id":"themes/cactus/source/css/_partial/post/actions_mobile.styl","hash":"0d2966c1d870392476864af8ee3ba312ba30cb82","modified":1615646951000},{"_id":"themes/cactus/source/css/_partial/post/actions_desktop.styl","hash":"ae3d9090bf4d934d443c0a431cb09d009743155a","modified":1615646951000},{"_id":"themes/cactus/source/lib/vazir-font/font-face.css","hash":"2a95709b15ee45fc2328051038ceedddf83235bb","modified":1615646951000},{"_id":"themes/cactus/source/lib/font-awesome/css/all.min.css","hash":"703603273f5d5d52eb456d6385e1a68294fbd568","modified":1615646951000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.eot","hash":"3ad44eb5c276d1435408f253ca78da729a1aca90","modified":1615646951000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.ttf","hash":"114f35e6d9053caca2ef6d1e34fea3f87a59245b","modified":1615646951000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"830f8653e5f4a5331ac0b47c5701f65fe9f1bb32","modified":1615646951000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.woff","hash":"f3f0ea4847825806062a9b7a0f629671eb6b6408","modified":1615646951000},{"_id":"themes/cactus/source/lib/justified-gallery/css/justifiedGallery.min.css","hash":"92bb6e468a1db7fbd99ccb960e15e28572254263","modified":1615646951000},{"_id":"themes/cactus/source/lib/justified-gallery/js/jquery.justifiedGallery.min.js","hash":"82ab395176c927ffbb2f7c95132ee0a06cd5d64a","modified":1615646951000},{"_id":"themes/cactus/source/lib/jquery/jquery.min.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1615646951000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.ttf","hash":"658c1da4f2a0124f6340058daa6873a86e6ba4fc","modified":1615646951000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.eot","hash":"603acd29416644e4b4fb8646abeada1865ba6869","modified":1615646951000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.ttf","hash":"23ee4a19421de9a0ca9dddc5435a8efe5bf28d87","modified":1615646951000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.eot","hash":"9ef82b07f3adad7d644c9c3a6d35a0c727bd64e8","modified":1615646951000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.eot","hash":"32f51bf715663f5ca419e138617fc05f7055aef5","modified":1615646951000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.ttf","hash":"31cdbcc7215d01c9dd2beb8a28f8b7a7de75b9f4","modified":1615646951000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.eot","hash":"17be9f699c30f0384004b46e991db8ac38a9992e","modified":1615646951000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.ttf","hash":"b2372b67b9519fb4fa8e05de6c0ddae56845ff79","modified":1615646951000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.ttf","hash":"d53fcc2e2d6c9c77613afcd34058be1b75bb0fef","modified":1615646951000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir.ttf","hash":"c7a3f2f4d56c4c4ec69d395baf39b55198da0254","modified":1615646951000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir.eot","hash":"bd3a7cb9eb70d36b4cfba8c5a05d234aefeefe3c","modified":1615646951000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.eot","hash":"2c0ebb336dd012da8d575cae0ee4d048b65fe6e1","modified":1615646951000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"f356aa2e4d9b7245985d312d3bfba180f774e3b7","modified":1615646951000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.woff","hash":"91daac2bfba5e6a1a15ce44c53eab524d01c7fb0","modified":1615646951000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"b2c74520c3f506efbfefca867918e5ae28bd5222","modified":1615646951000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.woff","hash":"61f40daca6978e6e7ab761e748c2dd9d236c7586","modified":1615646951000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.ttf","hash":"f34ee061900ecd1ed3d3fd9f8f47f4e84c6d56bf","modified":1615646951000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.eot","hash":"d4987ee41e0e4142d561f76b8ea8e034c4d5d9d2","modified":1615646951000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.svg","hash":"1622937e49766e21eacf4ac7065b711f0fe580e1","modified":1615646951000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.ttf","hash":"91b40a8f284159d9fff81dc522670ef68d562682","modified":1615646951000},{"_id":"themes/cactus/source/images/logo.png","hash":"0e3029251dfda26adee2761f71377297e8c26871","modified":1615646951000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.eot","hash":"be6b63d528286b1be2328d871c9bae95d8d57174","modified":1615646951000},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-BoldItalic.ttf","hash":"b7d24ab1e4fad720f31a2b0cca1904ce1740d846","modified":1615646951000},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-Italic.ttf","hash":"9a23c6898b0943bd3d96c04df9a0f66e919451d8","modified":1615646951000},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-Italic.ttf","hash":"93ebc5098cf57a32b7b8d297681f31692c09bdfa","modified":1615646951000},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-BoldItalic.ttf","hash":"b542b9591fbf33925d93f0695b6e123a9f0cfd43","modified":1615646951000},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-BoldItalic.ttf","hash":"926035f0156cccf1b0ca507347f39bf9c510f51e","modified":1615646951000},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-Italic.ttf","hash":"9d757cc9f928fc83b2133283dd639c12b11d94ad","modified":1615646951000},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-Bold.ttf","hash":"34f7db59f1d023294e69976aa20b7d52b86165a4","modified":1615646951000},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-Bold.ttf","hash":"58be4b7760e9a84daa81929d046f9a15c4fd1c1a","modified":1615646951000},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-Bold.ttf","hash":"f9918fb93d6ab6850f5d38069a999c311af78816","modified":1615646951000},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-Regular.ttf","hash":"20ce1fc7ae1254558ca044ae48283faaa58897e5","modified":1615646951000},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-Regular.ttf","hash":"6c090d6bff3928fbf8a5f4104e58ed7f421aea7c","modified":1615646951000},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-Regular.ttf","hash":"de559f8d70d5b1ab2810597bfd0b1b9506f3ef01","modified":1615646951000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.svg","hash":"29e6c7e5a4d63d2c9563cd208456cb4f8a357868","modified":1615646951000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.svg","hash":"3a090431fdec61a25ed69b9e6f35a6656bde1595","modified":1615646951000},{"_id":"source/static/images/Zx.jpg","hash":"617f1dd8e12aad25d57d3d32e9487fab20444894","modified":1615195546000},{"_id":"public/atom.xml","hash":"0b398dc7a046cbfdb3ce89b1be191b210a21d07f","modified":1620728541233},{"_id":"public/search.json","hash":"88239fb19fb894f982b0249d54306ddc8ac5510f","modified":1620728541233},{"_id":"public/about/index.html","hash":"6c81d49e71b3ea6cf5e8e851d6d2e6d6b56934d8","modified":1620728541233},{"_id":"public/categories/index.html","hash":"91118df8964a5e45e39c975775662773483a0b0b","modified":1620728541233},{"_id":"public/tags/index.html","hash":"221ce3fa36623bfa4b087f754ee751a9b8eba9ae","modified":1620728541233},{"_id":"public/archives/index.html","hash":"18186129911c05f86b775a361db077481882d125","modified":1620728541233},{"_id":"public/archives/page/2/index.html","hash":"af1ab4810318155c07b2815936967e586a79d43a","modified":1620728541233},{"_id":"public/archives/page/3/index.html","hash":"5fcc37e79628b893660567a19bc6466b46947070","modified":1620728541233},{"_id":"public/archives/2020/index.html","hash":"fef8de95c8562c093dc29a151a00a74db193c0d8","modified":1620728541233},{"_id":"public/archives/2020/10/index.html","hash":"bac6615b29f144748f311b938e04096fb6c6e79c","modified":1620728541233},{"_id":"public/archives/2021/index.html","hash":"db035addb9328d836b02ee207bb1d30d2c8b41b0","modified":1620728541233},{"_id":"public/archives/2021/page/2/index.html","hash":"097059803cb81c2c0a6cb54a10ea97efd7ad727a","modified":1620728541233},{"_id":"public/archives/2021/page/3/index.html","hash":"771d4be9a8ead361b896deabf1854c22f65a5221","modified":1620728541233},{"_id":"public/archives/2021/03/index.html","hash":"b7e72821e1acff00708f9ecf1bdd33b13d26019f","modified":1620728541233},{"_id":"public/archives/2021/03/page/2/index.html","hash":"764026110c7b74e0dc993b87a19d0463f3bc7ccc","modified":1620728541233},{"_id":"public/archives/2021/04/index.html","hash":"5e5e48170228a55505d436b9abe6b6ea3016d4bd","modified":1620728541233},{"_id":"public/index.html","hash":"22c3455e083d8f27c4ef295af729f4268d93c247","modified":1620728541233},{"_id":"public/page/2/index.html","hash":"9ee81a516dd2d69ef970ad00a812354c8505c541","modified":1620728541233},{"_id":"public/page/3/index.html","hash":"2b391c02c37e7887a50614dfce9f13e03819ec0e","modified":1620728541233},{"_id":"public/tags/Java/index.html","hash":"daa61c52b16d310612a1be1fc3c28369596cf83e","modified":1620728541233},{"_id":"public/tags/demo/index.html","hash":"57c65ca97968079c34ff4f311ed798d1f001c1fb","modified":1620728541233},{"_id":"public/tags/C/index.html","hash":"15df7dbde826f4f040801da77e0db54d60023297","modified":1620728541233},{"_id":"public/tags/虚拟机/index.html","hash":"c5b087beece9bfb2cf815952f37fc43e81bda736","modified":1620728541233},{"_id":"public/tags/Matlab/index.html","hash":"0600db2620993a1af2182df0f1b37b9382def38d","modified":1620728541233},{"_id":"public/tags/操作系统/index.html","hash":"cc490ebb44a14560804f972a7295130d64506e31","modified":1620728541233},{"_id":"public/tags/数据结构/index.html","hash":"08e52422931c5afd05c1811bc655c2b5f827725a","modified":1620728541233},{"_id":"public/2021/04/22/Matlab实验3-1/index.html","hash":"965862a727f9145e5b4ceee9d94c23a935615ff3","modified":1620728541233},{"_id":"public/2021/04/22/Java矩形类/index.html","hash":"92ece8e69a011978e1f4e8ff6e0875134107ae7f","modified":1620728541233},{"_id":"public/2021/04/13/C-学生成绩/index.html","hash":"e7afd9608fd9d785366f59548788e52384162538","modified":1620728541233},{"_id":"public/2021/04/13/C语言extern与static/index.html","hash":"d510a2039edc77937244d4bfe69b0968206d6756","modified":1620728541233},{"_id":"public/2021/04/13/操作系统第二章作业/index.html","hash":"f70855e1d5fea05b0f82e9a5111609fc0446808a","modified":1620728541233},{"_id":"public/2021/04/10/Java银行系统/index.html","hash":"86b2c9287c7ee8f25a97ec8d28c8938806cce23f","modified":1620728541233},{"_id":"public/2021/04/06/Matlab实验2-3/index.html","hash":"fae24f7b3a2429052a175fb8a334ae9ff94c3692","modified":1620728541233},{"_id":"public/2021/04/05/Matlab实验2-2/index.html","hash":"53cd6c42f8ec63f60b7f561932bb285ec050a1ba","modified":1620728541233},{"_id":"public/2021/04/01/Java三角形类/index.html","hash":"60c22c914ea30e603dd7b679e210565fe9ed17b3","modified":1620728541233},{"_id":"public/2021/04/01/Matlab实验2-1/index.html","hash":"4d0fd6b15e48239a0603e72c3cb71f62e606837b","modified":1620728541233},{"_id":"public/2021/03/31/Java—abstract类与继承/index.html","hash":"f6ab1f127058c4e8ba8fdf00a396b90647863c87","modified":1620728541233},{"_id":"public/2021/03/25/泰勒级数展开求解e的x次方/index.html","hash":"523ce541815991932851fefa500f7e07b07404d5","modified":1620728541233},{"_id":"public/2021/03/18/Java矩阵操作/index.html","hash":"be97567b689359f2aaea9805038be7a9172048a9","modified":1620728541233},{"_id":"public/2021/03/16/百鸡问题/index.html","hash":"424ef24e8b6c9ae7691cef9d3d8fa11978fbffed","modified":1620728541233},{"_id":"public/2021/03/16/OS结构设计P-24-P-33/index.html","hash":"4e6584c226e191a8860b52927d76f18e8712f8f8","modified":1620728541233},{"_id":"public/2021/03/16/第四节-操作系统的特征/index.html","hash":"d29e32a2bfe9a19c78b58b42355499964775aeed","modified":1620728541233},{"_id":"public/2021/03/15/Video-Demo/index.html","hash":"b993baa01238f19d1906a5b0a8d50c4962882257","modified":1620728541233},{"_id":"public/2021/03/14/Mac虚拟机安装指北-适用于Big-Sur及Catalina/index.html","hash":"1b0dac2b1a4d39df63801fd0456046c5ebddf231","modified":1620728541233},{"_id":"public/2021/03/12/分时操作系统与实时操作系统的比较/index.html","hash":"261fe62cc2923dd57fe304bede48484ccbec0645","modified":1620728541233},{"_id":"public/2021/03/11/Java指北/index.html","hash":"4427e78661178bce21dbd231886d4c4dfe174e41","modified":1620728541233},{"_id":"public/2021/03/10/JavaDemo/index.html","hash":"07f622fdc6eb51ae4d9fe72dca3e626215fef7ea","modified":1620728541233},{"_id":"public/2021/03/07/Matlab实验1-3/index.html","hash":"903d03b4d4d4b548ed36272b7cfda1f96f7943cb","modified":1620728541233},{"_id":"public/2021/03/04/Matlab实验1-2/index.html","hash":"06a1e9d938a415208bd9e0bb829e64ca4967211f","modified":1620728541233},{"_id":"public/2021/03/03/Matlab实验1-1/index.html","hash":"2021bee45eb27495faad062f57095cbd2295a9b6","modified":1620728541233},{"_id":"public/2020/10/23/二叉树-Binary-Tree/index.html","hash":"3a9bdf78d30aa093eaf515979def052079b1b09e","modified":1620728541233},{"_id":"public/2020/10/13/数组与矩阵/index.html","hash":"6f883a9c1681276c56f8eacb52cace7df74a2096","modified":1620728541233},{"_id":"public/2020/10/06/栈与队列/index.html","hash":"d43a8f1f939f0039ac5b1086896b863e69d801c0","modified":1620728541233},{"_id":"public/2020/10/02/顺序表与链表/index.html","hash":"43d78354563be699c1db31fabeade3e0264bbafc","modified":1620728541233},{"_id":"public/images/favicon.ico","hash":"189f9842bcb79a6f8f9e8445bc8bbd773443826b","modified":1620728541233},{"_id":"public/images/apple-touch-icon.png","hash":"57e2def34682655f41a0be2d083f16765ba7858b","modified":1620728541233},{"_id":"public/lib/vazir-font/Vazir-Black.woff","hash":"9e8d954c46eaad8b8234fa906e9a268ee354dced","modified":1620728541233},{"_id":"public/lib/vazir-font/Vazir-Black.woff2","hash":"f1c5d7523d21c2bf820d827c9d5df4184c3866dc","modified":1620728541233},{"_id":"public/lib/vazir-font/Vazir-Bold.woff","hash":"9376516725e502f4375e06cc4fa7d940e2c93251","modified":1620728541233},{"_id":"public/lib/vazir-font/Vazir-Light.woff","hash":"cba77d3d16f7565f9ea79bd7657f4e00c7fe851f","modified":1620728541233},{"_id":"public/lib/vazir-font/Vazir-Light.woff2","hash":"e520d5f6bf7ea3c1e4f2aef2abbbc6a6f9b697cb","modified":1620728541233},{"_id":"public/lib/vazir-font/Vazir-Medium.woff","hash":"2e8e3c873e6d98acc3c10aa84997104b276e1e68","modified":1620728541233},{"_id":"public/lib/vazir-font/Vazir-Medium.woff2","hash":"976b7aa7c2c2c049c548a25b5914cfbda74b0453","modified":1620728541233},{"_id":"public/lib/vazir-font/Vazir-Thin.woff","hash":"f231111b3c778b7a5898ea88c0f150c0e72be468","modified":1620728541233},{"_id":"public/lib/vazir-font/Vazir-Thin.woff2","hash":"baa42f95b41411b9aeaa6c7594e5ccee10d42ac4","modified":1620728541233},{"_id":"public/lib/vazir-font/Vazir.woff","hash":"c798391d624b9bb44497a87ffc4f7eb52042dceb","modified":1620728541233},{"_id":"public/lib/vazir-font/Vazir.woff2","hash":"dc3c0ed67c9abb062b562e8553776f614d2946c2","modified":1620728541233},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.eot","hash":"3ad44eb5c276d1435408f253ca78da729a1aca90","modified":1620728541233},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.ttf","hash":"114f35e6d9053caca2ef6d1e34fea3f87a59245b","modified":1620728541233},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"830f8653e5f4a5331ac0b47c5701f65fe9f1bb32","modified":1620728541233},{"_id":"public/lib/vazir-font/Vazir-Bold.woff2","hash":"8d4810991aa94f958aff20a9cd381caf338e3061","modified":1620728541233},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff","hash":"f3f0ea4847825806062a9b7a0f629671eb6b6408","modified":1620728541233},{"_id":"public/CNAME","hash":"c3f2215e37e5e054d70099ff3483c028b5c120c4","modified":1620728541233},{"_id":"public/images/favicon-192x192.png","hash":"96e6fcbbb13a5914a6131391e210eb7dfd13d692","modified":1620728541233},{"_id":"public/lib/vazir-font/Vazir-Black.eot","hash":"603acd29416644e4b4fb8646abeada1865ba6869","modified":1620728541233},{"_id":"public/lib/vazir-font/Vazir-Black.ttf","hash":"23ee4a19421de9a0ca9dddc5435a8efe5bf28d87","modified":1620728541233},{"_id":"public/lib/vazir-font/Vazir-Bold.ttf","hash":"658c1da4f2a0124f6340058daa6873a86e6ba4fc","modified":1620728541233},{"_id":"public/lib/vazir-font/Vazir-Bold.eot","hash":"9ef82b07f3adad7d644c9c3a6d35a0c727bd64e8","modified":1620728541233},{"_id":"public/lib/vazir-font/Vazir-Light.eot","hash":"32f51bf715663f5ca419e138617fc05f7055aef5","modified":1620728541233},{"_id":"public/lib/vazir-font/Vazir-Light.ttf","hash":"b2372b67b9519fb4fa8e05de6c0ddae56845ff79","modified":1620728541233},{"_id":"public/lib/vazir-font/Vazir-Medium.eot","hash":"17be9f699c30f0384004b46e991db8ac38a9992e","modified":1620728541233},{"_id":"public/lib/vazir-font/Vazir-Medium.ttf","hash":"31cdbcc7215d01c9dd2beb8a28f8b7a7de75b9f4","modified":1620728541233},{"_id":"public/lib/vazir-font/Vazir-Thin.ttf","hash":"d53fcc2e2d6c9c77613afcd34058be1b75bb0fef","modified":1620728541233},{"_id":"public/lib/vazir-font/Vazir.eot","hash":"bd3a7cb9eb70d36b4cfba8c5a05d234aefeefe3c","modified":1620728541233},{"_id":"public/lib/vazir-font/Vazir.ttf","hash":"c7a3f2f4d56c4c4ec69d395baf39b55198da0254","modified":1620728541233},{"_id":"public/lib/vazir-font/Vazir-Thin.eot","hash":"2c0ebb336dd012da8d575cae0ee4d048b65fe6e1","modified":1620728541233},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff","hash":"91daac2bfba5e6a1a15ce44c53eab524d01c7fb0","modified":1620728541233},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"f356aa2e4d9b7245985d312d3bfba180f774e3b7","modified":1620728541233},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff","hash":"61f40daca6978e6e7ab761e748c2dd9d236c7586","modified":1620728541233},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"b2c74520c3f506efbfefca867918e5ae28bd5222","modified":1620728541233},{"_id":"public/img/IMG_1624.JPG","hash":"9b31561c95b8b2555737ff145b04f97979f5c588","modified":1620728541233},{"_id":"public/live2dw/assets/koharu.model.json","hash":"ceccdefd776b7c9475a29cff0842796e4f58b7e9","modified":1620728541233},{"_id":"public/live2dw/assets/koharu.physics.json","hash":"2fbf886979212357ba293bd35884f2cb5b26b6a6","modified":1620728541233},{"_id":"public/live2dw/assets/mtn/02.mtn","hash":"efc99efdff39c93372cff0f6d62c4e748e1a5593","modified":1620728541233},{"_id":"public/live2dw/assets/mtn/03.mtn","hash":"a72b697a92a7cff40d15774b143b465b34cee5e6","modified":1620728541233},{"_id":"public/live2dw/assets/mtn/01.mtn","hash":"61d7d590d9feb71b32fd6bd142b59410d75bc1fa","modified":1620728541233},{"_id":"public/live2dw/assets/mtn/05.mtn","hash":"637e00442da4042cd4b0ed2cc62ffb1559881814","modified":1620728541233},{"_id":"public/live2dw/assets/mtn/04.mtn","hash":"32c888667455a3ff6f1b04f910c1a5cc4de30af0","modified":1620728541233},{"_id":"public/live2dw/assets/mtn/08.mtn","hash":"9b95ef8548b979d1fca557c74f8d66fb15b34578","modified":1620728541233},{"_id":"public/live2dw/assets/mtn/09.mtn","hash":"ecf1283b72e1c4b7e3a97343cd97726813f18790","modified":1620728541233},{"_id":"public/live2dw/assets/mtn/06.mtn","hash":"df10cc1d333c96da1296a4853c1ddbd44d8a11f3","modified":1620728541233},{"_id":"public/live2dw/assets/mtn/07.mtn","hash":"d8c9410135c81604eba665b59808089808e0851a","modified":1620728541233},{"_id":"public/live2dw/assets/mtn/idle.mtn","hash":"058d4628ab04bf42c279501ba4fa37116d384e41","modified":1620728541233},{"_id":"public/live2dw/lib/L2Dwidget.min.js","hash":"5f1a807437cc723bcadc3791d37add5ceed566a2","modified":1620728541233},{"_id":"public/img/IMG_1625.JPG","hash":"9fc234dcc55240637db4ed9afc6e3bc568bdf850","modified":1620728541233},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.eot","hash":"d4987ee41e0e4142d561f76b8ea8e034c4d5d9d2","modified":1620728541233},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.ttf","hash":"f34ee061900ecd1ed3d3fd9f8f47f4e84c6d56bf","modified":1620728541233},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.svg","hash":"1622937e49766e21eacf4ac7065b711f0fe580e1","modified":1620728541233},{"_id":"public/css/rtl.css","hash":"9589fac02a34fd9084f805f801889028756bbb65","modified":1620728541233},{"_id":"public/js/main.js","hash":"e147bd9473e398166d940a0ba104bde166091cfa","modified":1620728541233},{"_id":"public/js/search.js","hash":"90860ff07187cf1cf21224b05e23b5e8fcf6efef","modified":1620728541233},{"_id":"public/lib/clipboard/clipboard.min.js","hash":"ee60ca5ba9401456105ef703a98092369b579c80","modified":1620728541233},{"_id":"public/lib/vazir-font/font-face.css","hash":"2a95709b15ee45fc2328051038ceedddf83235bb","modified":1620728541233},{"_id":"public/lib/justified-gallery/css/justifiedGallery.min.css","hash":"92bb6e468a1db7fbd99ccb960e15e28572254263","modified":1620728541233},{"_id":"public/css/style.css","hash":"2e4be19d98b0cec5f3fbdf213fdc170ffb4e2de2","modified":1620728541233},{"_id":"public/images/logo.png","hash":"0e3029251dfda26adee2761f71377297e8c26871","modified":1620728541233},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.ttf","hash":"91b40a8f284159d9fff81dc522670ef68d562682","modified":1620728541233},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.eot","hash":"be6b63d528286b1be2328d871c9bae95d8d57174","modified":1620728541233},{"_id":"public/live2dw/lib/L2Dwidget.min.js.map","hash":"3290fe2df45f065b51a1cd7b24ec325cbf9bb5ce","modified":1620728541233},{"_id":"public/lib/justified-gallery/js/jquery.justifiedGallery.min.js","hash":"82ab395176c927ffbb2f7c95132ee0a06cd5d64a","modified":1620728541233},{"_id":"public/static/images/zz.jpg","hash":"7aec3f89bdcb1c971254a4551f73af21560b2170","modified":1620728541233},{"_id":"public/lib/meslo-LG/MesloLGM-BoldItalic.ttf","hash":"b542b9591fbf33925d93f0695b6e123a9f0cfd43","modified":1620728541233},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js","hash":"35bb5b588b6de25c9be2dd51d3fd331feafac02d","modified":1620728541233},{"_id":"public/lib/font-awesome/css/all.min.css","hash":"703603273f5d5d52eb456d6385e1a68294fbd568","modified":1620728541233},{"_id":"public/lib/meslo-LG/MesloLGL-Italic.ttf","hash":"9a23c6898b0943bd3d96c04df9a0f66e919451d8","modified":1620728541233},{"_id":"public/lib/meslo-LG/MesloLGM-Italic.ttf","hash":"93ebc5098cf57a32b7b8d297681f31692c09bdfa","modified":1620728541233},{"_id":"public/lib/meslo-LG/MesloLGS-BoldItalic.ttf","hash":"926035f0156cccf1b0ca507347f39bf9c510f51e","modified":1620728541233},{"_id":"public/lib/meslo-LG/MesloLGS-Italic.ttf","hash":"9d757cc9f928fc83b2133283dd639c12b11d94ad","modified":1620728541233},{"_id":"public/live2dw/assets/moc/koharu.moc","hash":"5eec3fba21444dd6f774b913510b5955e2c0605b","modified":1620728541233},{"_id":"public/live2dw/assets/moc/koharu.2048/texture_00.png","hash":"0879b61b745084781722636bba9f278f31ce5fc1","modified":1620728541233},{"_id":"public/lib/meslo-LG/MesloLGM-Bold.ttf","hash":"58be4b7760e9a84daa81929d046f9a15c4fd1c1a","modified":1620728541233},{"_id":"public/lib/meslo-LG/MesloLGM-Regular.ttf","hash":"20ce1fc7ae1254558ca044ae48283faaa58897e5","modified":1620728541233},{"_id":"public/lib/jquery/jquery.min.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1620728541233},{"_id":"public/lib/meslo-LG/MesloLGL-BoldItalic.ttf","hash":"b7d24ab1e4fad720f31a2b0cca1904ce1740d846","modified":1620728541233},{"_id":"public/lib/meslo-LG/MesloLGL-Bold.ttf","hash":"34f7db59f1d023294e69976aa20b7d52b86165a4","modified":1620728541233},{"_id":"public/lib/meslo-LG/MesloLGL-Regular.ttf","hash":"6c090d6bff3928fbf8a5f4104e58ed7f421aea7c","modified":1620728541233},{"_id":"public/lib/meslo-LG/MesloLGS-Bold.ttf","hash":"f9918fb93d6ab6850f5d38069a999c311af78816","modified":1620728541233},{"_id":"public/lib/meslo-LG/MesloLGS-Regular.ttf","hash":"de559f8d70d5b1ab2810597bfd0b1b9506f3ef01","modified":1620728541233},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js.map","hash":"35e71cc2a130199efb167b9a06939576602f0d75","modified":1620728541233},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.svg","hash":"29e6c7e5a4d63d2c9563cd208456cb4f8a357868","modified":1620728541233},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.svg","hash":"3a090431fdec61a25ed69b9e6f35a6656bde1595","modified":1620728541233},{"_id":"public/static/images/Zx.jpg","hash":"617f1dd8e12aad25d57d3d32e9487fab20444894","modified":1620728541233}],"Category":[],"Data":[],"Page":[{"title":"关于我","date":"2021-03-13T14:49:58.000Z","_content":"\n>## 这里是刘浩鑫Lhxone的博客，\n\n\n>## 欢迎来到我掉头发的地方，\n\n>## 娇贵的打工人\n\n# 🍺","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2021-03-13 22:49:58\n---\n\n>## 这里是刘浩鑫Lhxone的博客，\n\n\n>## 欢迎来到我掉头发的地方，\n\n>## 娇贵的打工人\n\n# 🍺","updated":"2021-03-14T07:54:20.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"ckojvxeqq0000boe20rnk9gnj","content":"<blockquote>\n<h2 id=\"这里是刘浩鑫Lhxone的博客，\"><a href=\"#这里是刘浩鑫Lhxone的博客，\" class=\"headerlink\" title=\"这里是刘浩鑫Lhxone的博客，\"></a>这里是刘浩鑫Lhxone的博客，</h2></blockquote>\n<blockquote>\n<h2 id=\"欢迎来到我掉头发的地方，\"><a href=\"#欢迎来到我掉头发的地方，\" class=\"headerlink\" title=\"欢迎来到我掉头发的地方，\"></a>欢迎来到我掉头发的地方，</h2></blockquote>\n<blockquote>\n<h2 id=\"娇贵的打工人\"><a href=\"#娇贵的打工人\" class=\"headerlink\" title=\"娇贵的打工人\"></a>娇贵的打工人</h2></blockquote>\n<h1 id=\"🍺\"><a href=\"#🍺\" class=\"headerlink\" title=\"🍺\"></a>🍺</h1><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","site":{"data":{}},"excerpt":"这里是刘浩鑫Lhxone的博客，\n欢迎来到我掉头发的地方，\n娇贵的打工人\n🍺","more":"<blockquote>\n<h2 id=\"这里是刘浩鑫Lhxone的博客，\"><a href=\"#这里是刘浩鑫Lhxone的博客，\" class=\"headerlink\" title=\"这里是刘浩鑫Lhxone的博客，\"></a>这里是刘浩鑫Lhxone的博客，</h2></blockquote>\n<blockquote>\n<h2 id=\"欢迎来到我掉头发的地方，\"><a href=\"#欢迎来到我掉头发的地方，\" class=\"headerlink\" title=\"欢迎来到我掉头发的地方，\"></a>欢迎来到我掉头发的地方，</h2></blockquote>\n<blockquote>\n<h2 id=\"娇贵的打工人\"><a href=\"#娇贵的打工人\" class=\"headerlink\" title=\"娇贵的打工人\"></a>娇贵的打工人</h2></blockquote>\n<h1 id=\"🍺\"><a href=\"#🍺\" class=\"headerlink\" title=\"🍺\"></a>🍺</h1>"},{"title":"categories","date":"2021-04-06T10:24:24.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2021-04-06 18:24:24\ntype: \"categories\"\n---\n","updated":"2021-04-06T10:38:18.000Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ckojvxeqv0002boe2bifu8k30","content":"<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2021-04-06T10:24:41.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2021-04-06 18:24:41\ntype: \"tags\"\n---\n","updated":"2021-04-06T10:38:30.000Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ckojvxeqy0005boe2bzsx57hj","content":"<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"JavaDemo","date":"2021-03-10T12:35:19.000Z","_content":"\n### Java Demo\n\n\n1. 一个Java的Demo，用以显示一个表格\n\n```Java\nimport java.awt.*;\nimport javax.swing.*;\npublic class TableDemoMVC extends JFrame{\n    TableDemoMVC(){\n        init();\n    }\n    protected void init(){\n        Container ct;\n        final String[] columnNames={\"姓名\",\"职位\",\"电话\",\"月薪\",\"婚否\"};\n\n        final Object[][] data={\n                {\"王东\",\"总经理\",\"0191123823\",new Integer(5000),new Boolean(false)},\n                {\"李宏\",\"秘书\",\"0191123824\",new Integer(3500),new Boolean(true)},\n                {\"李瑞\",\"开发\",\"0191123825\",new Integer(4500),new Boolean(false)},\n                {\"赵新\",\"保卫\",\"0191123826\",new Integer(2000),new Boolean(true)},\n                {\"陈理\",\"销售\",\"0191123827\",new Integer(4000),new Boolean(false)},\n        };\n\n        JTable table=new JTable(data,columnNames);\n        this.setSize(new Dimension(500,230));\n        JScrollPane jp=new JScrollPane(table);\n        ct=getContentPane();\n        ct.add(jp);\n    }\n    public static void main(String[] args) throws ClassNotFoundException,\n            InstantiationException,\n            IllegalAccessException,\n            UnsupportedLookAndFeelException{\n        try {\n\n            UIManager.setLookAndFeel(\"javax.swing.plaf.metal.MetalLookAndFeel\");\n        }\n        catch (Exception e) {\n            System.out.println(\"Look and Feel not set\");\n        }\n        TableDemoMVC frame=new TableDemoMVC();\n        frame.setVisible(true);\n    }\n}\n```\n\n<!-- more -->\n\n2. 一个Java的Demo，用以显示一带有背景的窗口\n\n```Java\nimport java.awt.*;\nimport java.awt.event.*;\nimport java.util.Scanner;\nimport javax.swing.JFrame;\n\npublic class Main extends JFrame {\n    public Main() {\n        setSize(1000, 650);\n        setDefaultCloseOperation(EXIT_ON_CLOSE);\n        setLocationRelativeTo(null);\n    }\n    public void paint(Graphics g) {\n        g.setColor(Color.white);\n        Image img = Toolkit.getDefaultToolkit().getImage(\"test.jpg\");   //用你的图片加以替换\n        g.drawImage(img, 0, 0, this.getWidth(), this.getHeight(), Color.LIGHT_GRAY, this);\n        g.fillRoundRect(120, 120, 300, 100, 40, 40);\n        g.setColor(Color.CYAN);\n        g.drawRoundRect(100, 100, 300, 100, 40, 40);\n        g.setFont(new Font(\"Helvetica\", Font.PLAIN, 30));\n        g.setColor(Color.CYAN);\n        g.drawString(\"Hello world!\", 150, 150);\n    }\n\n    public static void main(String[] args) {\n        Frame f = new Main();\n        Button b = new Button(\"一个按钮\");\n        Label l = new Label(\"标签\");\n        b.setBounds(100, 250, 100, 30);\n        b.setFont(new Font(\"仿宋\", Font.PLAIN, 10));\n        l.setBounds(100, 200, 60, 30);\n        f.add(l);\n        f.add(b);\n        f.setSize(1000, 650);\n        f.setResizable(false);\n        f.setLayout(null);\n        f.setVisible(true);\n        b.addActionListener(new ActionListener() {\n            int count = 0;\n\n            public void actionPerformed(ActionEvent e) {\n                Toolkit.getDefaultToolkit().beep();\n                int cnt = ((count++) % 2);\n                switch (cnt) {\n                    case 0:\n                        l.setBackground(Color.white);\n                        l.setForeground(Color.BLACK);\n                        break;\n                    case 1:\n                        l.setBackground(Color.BLACK);\n                        l.setForeground(Color.white);\n                        break;\n                }\n            }\n        });\n    }\n}\n```","source":"_posts/JavaDemo.md","raw":"---\ntitle: JavaDemo\ndate: 2021-03-10 20:35:19\ntags: \n- Java\n- demo\n---\n\n### Java Demo\n\n\n1. 一个Java的Demo，用以显示一个表格\n\n```Java\nimport java.awt.*;\nimport javax.swing.*;\npublic class TableDemoMVC extends JFrame{\n    TableDemoMVC(){\n        init();\n    }\n    protected void init(){\n        Container ct;\n        final String[] columnNames={\"姓名\",\"职位\",\"电话\",\"月薪\",\"婚否\"};\n\n        final Object[][] data={\n                {\"王东\",\"总经理\",\"0191123823\",new Integer(5000),new Boolean(false)},\n                {\"李宏\",\"秘书\",\"0191123824\",new Integer(3500),new Boolean(true)},\n                {\"李瑞\",\"开发\",\"0191123825\",new Integer(4500),new Boolean(false)},\n                {\"赵新\",\"保卫\",\"0191123826\",new Integer(2000),new Boolean(true)},\n                {\"陈理\",\"销售\",\"0191123827\",new Integer(4000),new Boolean(false)},\n        };\n\n        JTable table=new JTable(data,columnNames);\n        this.setSize(new Dimension(500,230));\n        JScrollPane jp=new JScrollPane(table);\n        ct=getContentPane();\n        ct.add(jp);\n    }\n    public static void main(String[] args) throws ClassNotFoundException,\n            InstantiationException,\n            IllegalAccessException,\n            UnsupportedLookAndFeelException{\n        try {\n\n            UIManager.setLookAndFeel(\"javax.swing.plaf.metal.MetalLookAndFeel\");\n        }\n        catch (Exception e) {\n            System.out.println(\"Look and Feel not set\");\n        }\n        TableDemoMVC frame=new TableDemoMVC();\n        frame.setVisible(true);\n    }\n}\n```\n\n<!-- more -->\n\n2. 一个Java的Demo，用以显示一带有背景的窗口\n\n```Java\nimport java.awt.*;\nimport java.awt.event.*;\nimport java.util.Scanner;\nimport javax.swing.JFrame;\n\npublic class Main extends JFrame {\n    public Main() {\n        setSize(1000, 650);\n        setDefaultCloseOperation(EXIT_ON_CLOSE);\n        setLocationRelativeTo(null);\n    }\n    public void paint(Graphics g) {\n        g.setColor(Color.white);\n        Image img = Toolkit.getDefaultToolkit().getImage(\"test.jpg\");   //用你的图片加以替换\n        g.drawImage(img, 0, 0, this.getWidth(), this.getHeight(), Color.LIGHT_GRAY, this);\n        g.fillRoundRect(120, 120, 300, 100, 40, 40);\n        g.setColor(Color.CYAN);\n        g.drawRoundRect(100, 100, 300, 100, 40, 40);\n        g.setFont(new Font(\"Helvetica\", Font.PLAIN, 30));\n        g.setColor(Color.CYAN);\n        g.drawString(\"Hello world!\", 150, 150);\n    }\n\n    public static void main(String[] args) {\n        Frame f = new Main();\n        Button b = new Button(\"一个按钮\");\n        Label l = new Label(\"标签\");\n        b.setBounds(100, 250, 100, 30);\n        b.setFont(new Font(\"仿宋\", Font.PLAIN, 10));\n        l.setBounds(100, 200, 60, 30);\n        f.add(l);\n        f.add(b);\n        f.setSize(1000, 650);\n        f.setResizable(false);\n        f.setLayout(null);\n        f.setVisible(true);\n        b.addActionListener(new ActionListener() {\n            int count = 0;\n\n            public void actionPerformed(ActionEvent e) {\n                Toolkit.getDefaultToolkit().beep();\n                int cnt = ((count++) % 2);\n                switch (cnt) {\n                    case 0:\n                        l.setBackground(Color.white);\n                        l.setForeground(Color.BLACK);\n                        break;\n                    case 1:\n                        l.setBackground(Color.BLACK);\n                        l.setForeground(Color.white);\n                        break;\n                }\n            }\n        });\n    }\n}\n```","slug":"JavaDemo","published":1,"updated":"2021-04-13T03:29:22.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckojvxeqs0001boe23gj46xmd","content":"<h3 id=\"Java-Demo\"><a href=\"#Java-Demo\" class=\"headerlink\" title=\"Java Demo\"></a>Java Demo</h3><ol>\n<li>一个Java的Demo，用以显示一个表格</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.awt.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.*;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TableDemoMVC</span> <span class=\"keyword\">extends</span> <span class=\"title\">JFrame</span></span>&#123;</span><br><span class=\"line\">    TableDemoMVC()&#123;</span><br><span class=\"line\">        init();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        Container ct;</span><br><span class=\"line\">        <span class=\"keyword\">final</span> String[] columnNames=&#123;<span class=\"string\">&quot;姓名&quot;</span>,<span class=\"string\">&quot;职位&quot;</span>,<span class=\"string\">&quot;电话&quot;</span>,<span class=\"string\">&quot;月薪&quot;</span>,<span class=\"string\">&quot;婚否&quot;</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">final</span> Object[][] data=&#123;</span><br><span class=\"line\">                &#123;<span class=\"string\">&quot;王东&quot;</span>,<span class=\"string\">&quot;总经理&quot;</span>,<span class=\"string\">&quot;0191123823&quot;</span>,<span class=\"keyword\">new</span> Integer(<span class=\"number\">5000</span>),<span class=\"keyword\">new</span> Boolean(<span class=\"keyword\">false</span>)&#125;,</span><br><span class=\"line\">                &#123;<span class=\"string\">&quot;李宏&quot;</span>,<span class=\"string\">&quot;秘书&quot;</span>,<span class=\"string\">&quot;0191123824&quot;</span>,<span class=\"keyword\">new</span> Integer(<span class=\"number\">3500</span>),<span class=\"keyword\">new</span> Boolean(<span class=\"keyword\">true</span>)&#125;,</span><br><span class=\"line\">                &#123;<span class=\"string\">&quot;李瑞&quot;</span>,<span class=\"string\">&quot;开发&quot;</span>,<span class=\"string\">&quot;0191123825&quot;</span>,<span class=\"keyword\">new</span> Integer(<span class=\"number\">4500</span>),<span class=\"keyword\">new</span> Boolean(<span class=\"keyword\">false</span>)&#125;,</span><br><span class=\"line\">                &#123;<span class=\"string\">&quot;赵新&quot;</span>,<span class=\"string\">&quot;保卫&quot;</span>,<span class=\"string\">&quot;0191123826&quot;</span>,<span class=\"keyword\">new</span> Integer(<span class=\"number\">2000</span>),<span class=\"keyword\">new</span> Boolean(<span class=\"keyword\">true</span>)&#125;,</span><br><span class=\"line\">                &#123;<span class=\"string\">&quot;陈理&quot;</span>,<span class=\"string\">&quot;销售&quot;</span>,<span class=\"string\">&quot;0191123827&quot;</span>,<span class=\"keyword\">new</span> Integer(<span class=\"number\">4000</span>),<span class=\"keyword\">new</span> Boolean(<span class=\"keyword\">false</span>)&#125;,</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">        JTable table=<span class=\"keyword\">new</span> JTable(data,columnNames);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.setSize(<span class=\"keyword\">new</span> Dimension(<span class=\"number\">500</span>,<span class=\"number\">230</span>));</span><br><span class=\"line\">        JScrollPane jp=<span class=\"keyword\">new</span> JScrollPane(table);</span><br><span class=\"line\">        ct=getContentPane();</span><br><span class=\"line\">        ct.add(jp);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> ClassNotFoundException,</span></span><br><span class=\"line\"><span class=\"function\">            InstantiationException,</span></span><br><span class=\"line\"><span class=\"function\">            IllegalAccessException,</span></span><br><span class=\"line\"><span class=\"function\">            UnsupportedLookAndFeelException</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            UIManager.setLookAndFeel(<span class=\"string\">&quot;javax.swing.plaf.metal.MetalLookAndFeel&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;Look and Feel not set&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        TableDemoMVC frame=<span class=\"keyword\">new</span> TableDemoMVC();</span><br><span class=\"line\">        frame.setVisible(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<span id=\"more\"></span>\n\n<ol start=\"2\">\n<li>一个Java的Demo，用以显示一带有背景的窗口</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.awt.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JFrame;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> <span class=\"keyword\">extends</span> <span class=\"title\">JFrame</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        setSize(<span class=\"number\">1000</span>, <span class=\"number\">650</span>);</span><br><span class=\"line\">        setDefaultCloseOperation(EXIT_ON_CLOSE);</span><br><span class=\"line\">        setLocationRelativeTo(<span class=\"keyword\">null</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">paint</span><span class=\"params\">(Graphics g)</span> </span>&#123;</span><br><span class=\"line\">        g.setColor(Color.white);</span><br><span class=\"line\">        Image img = Toolkit.getDefaultToolkit().getImage(<span class=\"string\">&quot;test.jpg&quot;</span>);   <span class=\"comment\">//用你的图片加以替换</span></span><br><span class=\"line\">        g.drawImage(img, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"keyword\">this</span>.getWidth(), <span class=\"keyword\">this</span>.getHeight(), Color.LIGHT_GRAY, <span class=\"keyword\">this</span>);</span><br><span class=\"line\">        g.fillRoundRect(<span class=\"number\">120</span>, <span class=\"number\">120</span>, <span class=\"number\">300</span>, <span class=\"number\">100</span>, <span class=\"number\">40</span>, <span class=\"number\">40</span>);</span><br><span class=\"line\">        g.setColor(Color.CYAN);</span><br><span class=\"line\">        g.drawRoundRect(<span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">300</span>, <span class=\"number\">100</span>, <span class=\"number\">40</span>, <span class=\"number\">40</span>);</span><br><span class=\"line\">        g.setFont(<span class=\"keyword\">new</span> Font(<span class=\"string\">&quot;Helvetica&quot;</span>, Font.PLAIN, <span class=\"number\">30</span>));</span><br><span class=\"line\">        g.setColor(Color.CYAN);</span><br><span class=\"line\">        g.drawString(<span class=\"string\">&quot;Hello world!&quot;</span>, <span class=\"number\">150</span>, <span class=\"number\">150</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Frame f = <span class=\"keyword\">new</span> Main();</span><br><span class=\"line\">        Button b = <span class=\"keyword\">new</span> Button(<span class=\"string\">&quot;一个按钮&quot;</span>);</span><br><span class=\"line\">        Label l = <span class=\"keyword\">new</span> Label(<span class=\"string\">&quot;标签&quot;</span>);</span><br><span class=\"line\">        b.setBounds(<span class=\"number\">100</span>, <span class=\"number\">250</span>, <span class=\"number\">100</span>, <span class=\"number\">30</span>);</span><br><span class=\"line\">        b.setFont(<span class=\"keyword\">new</span> Font(<span class=\"string\">&quot;仿宋&quot;</span>, Font.PLAIN, <span class=\"number\">10</span>));</span><br><span class=\"line\">        l.setBounds(<span class=\"number\">100</span>, <span class=\"number\">200</span>, <span class=\"number\">60</span>, <span class=\"number\">30</span>);</span><br><span class=\"line\">        f.add(l);</span><br><span class=\"line\">        f.add(b);</span><br><span class=\"line\">        f.setSize(<span class=\"number\">1000</span>, <span class=\"number\">650</span>);</span><br><span class=\"line\">        f.setResizable(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">        f.setLayout(<span class=\"keyword\">null</span>);</span><br><span class=\"line\">        f.setVisible(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">        b.addActionListener(<span class=\"keyword\">new</span> ActionListener() &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">actionPerformed</span><span class=\"params\">(ActionEvent e)</span> </span>&#123;</span><br><span class=\"line\">                Toolkit.getDefaultToolkit().beep();</span><br><span class=\"line\">                <span class=\"keyword\">int</span> cnt = ((count++) % <span class=\"number\">2</span>);</span><br><span class=\"line\">                <span class=\"keyword\">switch</span> (cnt) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"number\">0</span>:</span><br><span class=\"line\">                        l.setBackground(Color.white);</span><br><span class=\"line\">                        l.setForeground(Color.BLACK);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">                        l.setBackground(Color.BLACK);</span><br><span class=\"line\">                        l.setForeground(Color.white);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","site":{"data":{}},"excerpt":"Java Demo\n 1. 一个Java的Demo，用以显示一个表格\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n\n\nimport java.awt.*;\nimport javax.swing.*;\npublic class TableDemoMVC extends JFrame{\n    TableDemoMVC(){\n        init();\n    }\n    protected void init(){\n  ","more":"<ol start=\"2\">\n<li>一个Java的Demo，用以显示一带有背景的窗口</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.awt.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JFrame;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> <span class=\"keyword\">extends</span> <span class=\"title\">JFrame</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        setSize(<span class=\"number\">1000</span>, <span class=\"number\">650</span>);</span><br><span class=\"line\">        setDefaultCloseOperation(EXIT_ON_CLOSE);</span><br><span class=\"line\">        setLocationRelativeTo(<span class=\"keyword\">null</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">paint</span><span class=\"params\">(Graphics g)</span> </span>&#123;</span><br><span class=\"line\">        g.setColor(Color.white);</span><br><span class=\"line\">        Image img = Toolkit.getDefaultToolkit().getImage(<span class=\"string\">&quot;test.jpg&quot;</span>);   <span class=\"comment\">//用你的图片加以替换</span></span><br><span class=\"line\">        g.drawImage(img, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"keyword\">this</span>.getWidth(), <span class=\"keyword\">this</span>.getHeight(), Color.LIGHT_GRAY, <span class=\"keyword\">this</span>);</span><br><span class=\"line\">        g.fillRoundRect(<span class=\"number\">120</span>, <span class=\"number\">120</span>, <span class=\"number\">300</span>, <span class=\"number\">100</span>, <span class=\"number\">40</span>, <span class=\"number\">40</span>);</span><br><span class=\"line\">        g.setColor(Color.CYAN);</span><br><span class=\"line\">        g.drawRoundRect(<span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">300</span>, <span class=\"number\">100</span>, <span class=\"number\">40</span>, <span class=\"number\">40</span>);</span><br><span class=\"line\">        g.setFont(<span class=\"keyword\">new</span> Font(<span class=\"string\">&quot;Helvetica&quot;</span>, Font.PLAIN, <span class=\"number\">30</span>));</span><br><span class=\"line\">        g.setColor(Color.CYAN);</span><br><span class=\"line\">        g.drawString(<span class=\"string\">&quot;Hello world!&quot;</span>, <span class=\"number\">150</span>, <span class=\"number\">150</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Frame f = <span class=\"keyword\">new</span> Main();</span><br><span class=\"line\">        Button b = <span class=\"keyword\">new</span> Button(<span class=\"string\">&quot;一个按钮&quot;</span>);</span><br><span class=\"line\">        Label l = <span class=\"keyword\">new</span> Label(<span class=\"string\">&quot;标签&quot;</span>);</span><br><span class=\"line\">        b.setBounds(<span class=\"number\">100</span>, <span class=\"number\">250</span>, <span class=\"number\">100</span>, <span class=\"number\">30</span>);</span><br><span class=\"line\">        b.setFont(<span class=\"keyword\">new</span> Font(<span class=\"string\">&quot;仿宋&quot;</span>, Font.PLAIN, <span class=\"number\">10</span>));</span><br><span class=\"line\">        l.setBounds(<span class=\"number\">100</span>, <span class=\"number\">200</span>, <span class=\"number\">60</span>, <span class=\"number\">30</span>);</span><br><span class=\"line\">        f.add(l);</span><br><span class=\"line\">        f.add(b);</span><br><span class=\"line\">        f.setSize(<span class=\"number\">1000</span>, <span class=\"number\">650</span>);</span><br><span class=\"line\">        f.setResizable(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">        f.setLayout(<span class=\"keyword\">null</span>);</span><br><span class=\"line\">        f.setVisible(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">        b.addActionListener(<span class=\"keyword\">new</span> ActionListener() &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">actionPerformed</span><span class=\"params\">(ActionEvent e)</span> </span>&#123;</span><br><span class=\"line\">                Toolkit.getDefaultToolkit().beep();</span><br><span class=\"line\">                <span class=\"keyword\">int</span> cnt = ((count++) % <span class=\"number\">2</span>);</span><br><span class=\"line\">                <span class=\"keyword\">switch</span> (cnt) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"number\">0</span>:</span><br><span class=\"line\">                        l.setBackground(Color.white);</span><br><span class=\"line\">                        l.setForeground(Color.BLACK);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">                        l.setBackground(Color.BLACK);</span><br><span class=\"line\">                        l.setForeground(Color.white);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Java—abstract类与继承","date":"2021-03-31T03:06:01.000Z","_content":"\n## 抽象类\n\n\n- ```abstract```类不能使用```new```建立对象，只能作为父类\n- 抽象方法中没有方法体，包含抽象方法的类一定要为抽象类\n- ```abstract```方法必须在子类中重写\n\n<!-- more -->\n\n```Java\nabstract class shape {\n    protected String name;\n    double s, v;\n\n    public abstract String getName();\n}\n\nclass ball extends shape {\n    private double r;\n\n    public String getName() {\n        return ball.super.name;\n    }\n\n    ball(double r, String name) {\n        this.r = r;\n        this.name = name;\n        s = 4 * Math.PI * Math.pow(r, 2);\n        v = 4 * Math.PI * Math.pow(r, 3) / 3;\n    }\n\n    public double getVolume() {\n        return v;\n    }\n}\n\npublic class Main {\n    public static void main(String[] args) {\n        ball c = new ball(2, \"MyBall\");\n        System.out.println(c.getName() + \"\\t\" + c.getVolume());\n    }\n}\n```\n\n## 多态\n\n```Java\npublic class Test {\n    public static void main(String[] args) {\n      show(new Cat());  // 以 Cat 对象调用 show 方法\n      show(new Dog());  // 以 Dog 对象调用 show 方法\n                \n      Animal a = new Cat();  // 向上转型  \n      a.eat();               // 调用的是 Cat 的 eat\n      Cat c = (Cat)a;        // 向下转型  \n      c.work();        // 调用的是 Cat 的 work\n  }  \n            \n    public static void show(Animal a)  {\n      a.eat();  \n        // 类型判断\n        if (a instanceof Cat)  {  // 猫做的事情 \n            Cat c = (Cat)a;  \n            c.work();  \n        } else if (a instanceof Dog) { // 狗做的事情 \n            Dog c = (Dog)a;  \n            c.work();  \n        }  \n    }  \n}\n \nabstract class Animal {  \n    abstract void eat();  \n}  \n  \nclass Cat extends Animal {  \n    public void eat() {  \n        System.out.println(\"吃鱼\");  \n    }  \n    public void work() {  \n        System.out.println(\"抓老鼠\");  \n    }  \n}  \n  \nclass Dog extends Animal {  \n    public void eat() {  \n        System.out.println(\"吃骨头\");  \n    }  \n    public void work() {  \n        System.out.println(\"看家\");  \n    }  \n}\n```","source":"_posts/Java—abstract类与继承.md","raw":"---\ntitle: Java—abstract类与继承\ndate: 2021-03-31 11:06:01\ntags: Java\n---\n\n## 抽象类\n\n\n- ```abstract```类不能使用```new```建立对象，只能作为父类\n- 抽象方法中没有方法体，包含抽象方法的类一定要为抽象类\n- ```abstract```方法必须在子类中重写\n\n<!-- more -->\n\n```Java\nabstract class shape {\n    protected String name;\n    double s, v;\n\n    public abstract String getName();\n}\n\nclass ball extends shape {\n    private double r;\n\n    public String getName() {\n        return ball.super.name;\n    }\n\n    ball(double r, String name) {\n        this.r = r;\n        this.name = name;\n        s = 4 * Math.PI * Math.pow(r, 2);\n        v = 4 * Math.PI * Math.pow(r, 3) / 3;\n    }\n\n    public double getVolume() {\n        return v;\n    }\n}\n\npublic class Main {\n    public static void main(String[] args) {\n        ball c = new ball(2, \"MyBall\");\n        System.out.println(c.getName() + \"\\t\" + c.getVolume());\n    }\n}\n```\n\n## 多态\n\n```Java\npublic class Test {\n    public static void main(String[] args) {\n      show(new Cat());  // 以 Cat 对象调用 show 方法\n      show(new Dog());  // 以 Dog 对象调用 show 方法\n                \n      Animal a = new Cat();  // 向上转型  \n      a.eat();               // 调用的是 Cat 的 eat\n      Cat c = (Cat)a;        // 向下转型  \n      c.work();        // 调用的是 Cat 的 work\n  }  \n            \n    public static void show(Animal a)  {\n      a.eat();  \n        // 类型判断\n        if (a instanceof Cat)  {  // 猫做的事情 \n            Cat c = (Cat)a;  \n            c.work();  \n        } else if (a instanceof Dog) { // 狗做的事情 \n            Dog c = (Dog)a;  \n            c.work();  \n        }  \n    }  \n}\n \nabstract class Animal {  \n    abstract void eat();  \n}  \n  \nclass Cat extends Animal {  \n    public void eat() {  \n        System.out.println(\"吃鱼\");  \n    }  \n    public void work() {  \n        System.out.println(\"抓老鼠\");  \n    }  \n}  \n  \nclass Dog extends Animal {  \n    public void eat() {  \n        System.out.println(\"吃骨头\");  \n    }  \n    public void work() {  \n        System.out.println(\"看家\");  \n    }  \n}\n```","slug":"Java—abstract类与继承","published":1,"updated":"2021-04-13T03:29:15.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckojvxeqw0003boe253dpdsag","content":"<h2 id=\"抽象类\"><a href=\"#抽象类\" class=\"headerlink\" title=\"抽象类\"></a>抽象类</h2><ul>\n<li><code>abstract</code>类不能使用<code>new</code>建立对象，只能作为父类</li>\n<li>抽象方法中没有方法体，包含抽象方法的类一定要为抽象类</li>\n<li><code>abstract</code>方法必须在子类中重写</li>\n</ul>\n<span id=\"more\"></span>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">shape</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">double</span> s, v;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> String <span class=\"title\">getName</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ball</span> <span class=\"keyword\">extends</span> <span class=\"title\">shape</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">double</span> r;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ball.<span class=\"keyword\">super</span>.name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    ball(<span class=\"keyword\">double</span> r, String name) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.r = r;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">        s = <span class=\"number\">4</span> * Math.PI * Math.pow(r, <span class=\"number\">2</span>);</span><br><span class=\"line\">        v = <span class=\"number\">4</span> * Math.PI * Math.pow(r, <span class=\"number\">3</span>) / <span class=\"number\">3</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">double</span> <span class=\"title\">getVolume</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> v;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        ball c = <span class=\"keyword\">new</span> ball(<span class=\"number\">2</span>, <span class=\"string\">&quot;MyBall&quot;</span>);</span><br><span class=\"line\">        System.out.println(c.getName() + <span class=\"string\">&quot;\\t&quot;</span> + c.getVolume());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"多态\"><a href=\"#多态\" class=\"headerlink\" title=\"多态\"></a>多态</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">      show(<span class=\"keyword\">new</span> Cat());  <span class=\"comment\">// 以 Cat 对象调用 show 方法</span></span><br><span class=\"line\">      show(<span class=\"keyword\">new</span> Dog());  <span class=\"comment\">// 以 Dog 对象调用 show 方法</span></span><br><span class=\"line\">                </span><br><span class=\"line\">      Animal a = <span class=\"keyword\">new</span> Cat();  <span class=\"comment\">// 向上转型  </span></span><br><span class=\"line\">      a.eat();               <span class=\"comment\">// 调用的是 Cat 的 eat</span></span><br><span class=\"line\">      Cat c = (Cat)a;        <span class=\"comment\">// 向下转型  </span></span><br><span class=\"line\">      c.work();        <span class=\"comment\">// 调用的是 Cat 的 work</span></span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">            </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">show</span><span class=\"params\">(Animal a)</span>  </span>&#123;</span><br><span class=\"line\">      a.eat();  </span><br><span class=\"line\">        <span class=\"comment\">// 类型判断</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (a <span class=\"keyword\">instanceof</span> Cat)  &#123;  <span class=\"comment\">// 猫做的事情 </span></span><br><span class=\"line\">            Cat c = (Cat)a;  </span><br><span class=\"line\">            c.work();  </span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (a <span class=\"keyword\">instanceof</span> Dog) &#123; <span class=\"comment\">// 狗做的事情 </span></span><br><span class=\"line\">            Dog c = (Dog)a;  </span><br><span class=\"line\">            c.work();  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Animal</span> </span>&#123;  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">eat</span><span class=\"params\">()</span></span>;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Cat</span> <span class=\"keyword\">extends</span> <span class=\"title\">Animal</span> </span>&#123;  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">eat</span><span class=\"params\">()</span> </span>&#123;  </span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;吃鱼&quot;</span>);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">work</span><span class=\"params\">()</span> </span>&#123;  </span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;抓老鼠&quot;</span>);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Dog</span> <span class=\"keyword\">extends</span> <span class=\"title\">Animal</span> </span>&#123;  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">eat</span><span class=\"params\">()</span> </span>&#123;  </span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;吃骨头&quot;</span>);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">work</span><span class=\"params\">()</span> </span>&#123;  </span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;看家&quot;</span>);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","site":{"data":{}},"excerpt":"抽象类\n * abstract类不能使用new建立对象，只能作为父类\n * 抽象方法中没有方法体，包含抽象方法的类一定要为抽象类\n * abstract方法必须在子类中重写\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n\n\nabstract class shape {\n    protected String name;\n    double s, v;\n\n    public abstract String getName();\n}\n\nclass ball ext","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">shape</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">double</span> s, v;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> String <span class=\"title\">getName</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ball</span> <span class=\"keyword\">extends</span> <span class=\"title\">shape</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">double</span> r;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ball.<span class=\"keyword\">super</span>.name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    ball(<span class=\"keyword\">double</span> r, String name) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.r = r;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">        s = <span class=\"number\">4</span> * Math.PI * Math.pow(r, <span class=\"number\">2</span>);</span><br><span class=\"line\">        v = <span class=\"number\">4</span> * Math.PI * Math.pow(r, <span class=\"number\">3</span>) / <span class=\"number\">3</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">double</span> <span class=\"title\">getVolume</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> v;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        ball c = <span class=\"keyword\">new</span> ball(<span class=\"number\">2</span>, <span class=\"string\">&quot;MyBall&quot;</span>);</span><br><span class=\"line\">        System.out.println(c.getName() + <span class=\"string\">&quot;\\t&quot;</span> + c.getVolume());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"多态\"><a href=\"#多态\" class=\"headerlink\" title=\"多态\"></a>多态</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">      show(<span class=\"keyword\">new</span> Cat());  <span class=\"comment\">// 以 Cat 对象调用 show 方法</span></span><br><span class=\"line\">      show(<span class=\"keyword\">new</span> Dog());  <span class=\"comment\">// 以 Dog 对象调用 show 方法</span></span><br><span class=\"line\">                </span><br><span class=\"line\">      Animal a = <span class=\"keyword\">new</span> Cat();  <span class=\"comment\">// 向上转型  </span></span><br><span class=\"line\">      a.eat();               <span class=\"comment\">// 调用的是 Cat 的 eat</span></span><br><span class=\"line\">      Cat c = (Cat)a;        <span class=\"comment\">// 向下转型  </span></span><br><span class=\"line\">      c.work();        <span class=\"comment\">// 调用的是 Cat 的 work</span></span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">            </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">show</span><span class=\"params\">(Animal a)</span>  </span>&#123;</span><br><span class=\"line\">      a.eat();  </span><br><span class=\"line\">        <span class=\"comment\">// 类型判断</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (a <span class=\"keyword\">instanceof</span> Cat)  &#123;  <span class=\"comment\">// 猫做的事情 </span></span><br><span class=\"line\">            Cat c = (Cat)a;  </span><br><span class=\"line\">            c.work();  </span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (a <span class=\"keyword\">instanceof</span> Dog) &#123; <span class=\"comment\">// 狗做的事情 </span></span><br><span class=\"line\">            Dog c = (Dog)a;  </span><br><span class=\"line\">            c.work();  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Animal</span> </span>&#123;  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">eat</span><span class=\"params\">()</span></span>;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Cat</span> <span class=\"keyword\">extends</span> <span class=\"title\">Animal</span> </span>&#123;  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">eat</span><span class=\"params\">()</span> </span>&#123;  </span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;吃鱼&quot;</span>);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">work</span><span class=\"params\">()</span> </span>&#123;  </span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;抓老鼠&quot;</span>);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Dog</span> <span class=\"keyword\">extends</span> <span class=\"title\">Animal</span> </span>&#123;  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">eat</span><span class=\"params\">()</span> </span>&#123;  </span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;吃骨头&quot;</span>);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">work</span><span class=\"params\">()</span> </span>&#123;  </span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;看家&quot;</span>);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"C语言extern与static","date":"2021-04-13T10:04:38.000Z","_content":"\n\n## static\n\n### 示例\n\n```cpp\n#include <iostream>\n\nusing namespace std;\n\nvoid out() {\n    static int n = 0;\n    n++;\n    cout << \"n=\" << n << endl;\n}\n\nint main() {\n    out();      //第一次调用out()\n    out();      //第二次调用out()\n    out();      //第三次调用out()\n}\n```\n<!-- more -->\n### 运行结果\n\n```\nn=1\nn=2\nn=3\n\nProcess finished with exit code 0\n```\n\n### 解释\n\n第一次out()被调用，申请一个空间用来存放n，执行一次初始化。第一次调用结束后，存储空间并未被释放，即生命周期延长了。第二/三次调用，不再申请新的存储空间，而是继续使用第一次的存储空间，但是不执行```n = 0;```的赋值，n的值仍然为原来的值。\n\n## extern\n\n> 注：定义要为变量分配内存空间；而声明不需要为变量分配内存空间。extern是声明，而非定义，即通知编译器，此处只是该变量（或函数，但是函数一般不使用extern）的声明，不会分配内存，而真正的定义在别处。\n\n#### 定义时，extern可以省略。\n#### 定义时，extern可以省略。\n#### 定义时，extern可以省略。\n\n\n### 示例\n\nextern一般用于自定义的*.h文件中\n\n```cpp\nextern int a; // 声明一个全局变量 a\nint a; // 定义一个全局变量 a\nextern int a =0 ; // 定义一个全局变量 a 并给初值。\nint a =0;    // 定义一个全局变量 a, 并给初值，\n//第三和第四是一样的\n```\n\n\n```cpp\n//demo.cpp\n#include <iostream>\n#include \"demo.h\"\n\nusing namespace std;\n\nint main() {\n    cout<<b;\n}\n```\n\n```cpp\n//demo.h\nextern int a;\nint b = 1;\nextern int c = 2;\nint d = 3;\n```\n输出a时，编译报错；输出b,c,d时，可以正常输出，但提示c被声名为extern,即此处为\n\n```\n[Warning] 'c' initialized and declared 'extern'\n```\n\n### 解释\n\n声明：仅仅表示有一个叫张三的人，他是个医生，他在哪不知道，咱们找不到他\n\n定义：在地球上给一个叫张三的医生分配了地理资源，让他在这一片地理区域内活动，这样就可以知道他在哪，咱们也可以找到他\n\n假如我们有两个文件A和B，在A里，我们完成了对张三的定义，如果我们在B中想再请A中定义的张三为我们工作，那我们就加个extern。```extern 张三;```这样，程序就知道这个张三的定义在别的文件里，然后程序找到A文件，发现张三的定义，我们就可以找到张三，请他出山来为我们工作了\n","source":"_posts/C语言extern与static.md","raw":"---\ntitle: C语言extern与static\ndate: 2021-04-13 18:04:38\ntags: C++\n---\n\n\n## static\n\n### 示例\n\n```cpp\n#include <iostream>\n\nusing namespace std;\n\nvoid out() {\n    static int n = 0;\n    n++;\n    cout << \"n=\" << n << endl;\n}\n\nint main() {\n    out();      //第一次调用out()\n    out();      //第二次调用out()\n    out();      //第三次调用out()\n}\n```\n<!-- more -->\n### 运行结果\n\n```\nn=1\nn=2\nn=3\n\nProcess finished with exit code 0\n```\n\n### 解释\n\n第一次out()被调用，申请一个空间用来存放n，执行一次初始化。第一次调用结束后，存储空间并未被释放，即生命周期延长了。第二/三次调用，不再申请新的存储空间，而是继续使用第一次的存储空间，但是不执行```n = 0;```的赋值，n的值仍然为原来的值。\n\n## extern\n\n> 注：定义要为变量分配内存空间；而声明不需要为变量分配内存空间。extern是声明，而非定义，即通知编译器，此处只是该变量（或函数，但是函数一般不使用extern）的声明，不会分配内存，而真正的定义在别处。\n\n#### 定义时，extern可以省略。\n#### 定义时，extern可以省略。\n#### 定义时，extern可以省略。\n\n\n### 示例\n\nextern一般用于自定义的*.h文件中\n\n```cpp\nextern int a; // 声明一个全局变量 a\nint a; // 定义一个全局变量 a\nextern int a =0 ; // 定义一个全局变量 a 并给初值。\nint a =0;    // 定义一个全局变量 a, 并给初值，\n//第三和第四是一样的\n```\n\n\n```cpp\n//demo.cpp\n#include <iostream>\n#include \"demo.h\"\n\nusing namespace std;\n\nint main() {\n    cout<<b;\n}\n```\n\n```cpp\n//demo.h\nextern int a;\nint b = 1;\nextern int c = 2;\nint d = 3;\n```\n输出a时，编译报错；输出b,c,d时，可以正常输出，但提示c被声名为extern,即此处为\n\n```\n[Warning] 'c' initialized and declared 'extern'\n```\n\n### 解释\n\n声明：仅仅表示有一个叫张三的人，他是个医生，他在哪不知道，咱们找不到他\n\n定义：在地球上给一个叫张三的医生分配了地理资源，让他在这一片地理区域内活动，这样就可以知道他在哪，咱们也可以找到他\n\n假如我们有两个文件A和B，在A里，我们完成了对张三的定义，如果我们在B中想再请A中定义的张三为我们工作，那我们就加个extern。```extern 张三;```这样，程序就知道这个张三的定义在别的文件里，然后程序找到A文件，发现张三的定义，我们就可以找到张三，请他出山来为我们工作了\n","slug":"C语言extern与static","published":1,"updated":"2021-04-13T10:50:09.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckojvxeqz0006boe21mwh0ky5","content":"<h2 id=\"static\"><a href=\"#static\" class=\"headerlink\" title=\"static\"></a>static</h2><h3 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">out</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> n = <span class=\"number\">0</span>;</span><br><span class=\"line\">    n++;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;n=&quot;</span> &lt;&lt; n &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    out();      <span class=\"comment\">//第一次调用out()</span></span><br><span class=\"line\">    out();      <span class=\"comment\">//第二次调用out()</span></span><br><span class=\"line\">    out();      <span class=\"comment\">//第三次调用out()</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n<h3 id=\"运行结果\"><a href=\"#运行结果\" class=\"headerlink\" title=\"运行结果\"></a>运行结果</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">n&#x3D;1</span><br><span class=\"line\">n&#x3D;2</span><br><span class=\"line\">n&#x3D;3</span><br><span class=\"line\"></span><br><span class=\"line\">Process finished with exit code 0</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"解释\"><a href=\"#解释\" class=\"headerlink\" title=\"解释\"></a>解释</h3><p>第一次out()被调用，申请一个空间用来存放n，执行一次初始化。第一次调用结束后，存储空间并未被释放，即生命周期延长了。第二/三次调用，不再申请新的存储空间，而是继续使用第一次的存储空间，但是不执行<code>n = 0;</code>的赋值，n的值仍然为原来的值。</p>\n<h2 id=\"extern\"><a href=\"#extern\" class=\"headerlink\" title=\"extern\"></a>extern</h2><blockquote>\n<p>注：定义要为变量分配内存空间；而声明不需要为变量分配内存空间。extern是声明，而非定义，即通知编译器，此处只是该变量（或函数，但是函数一般不使用extern）的声明，不会分配内存，而真正的定义在别处。</p>\n</blockquote>\n<h4 id=\"定义时，extern可以省略。\"><a href=\"#定义时，extern可以省略。\" class=\"headerlink\" title=\"定义时，extern可以省略。\"></a>定义时，extern可以省略。</h4><h4 id=\"定义时，extern可以省略。-1\"><a href=\"#定义时，extern可以省略。-1\" class=\"headerlink\" title=\"定义时，extern可以省略。\"></a>定义时，extern可以省略。</h4><h4 id=\"定义时，extern可以省略。-2\"><a href=\"#定义时，extern可以省略。-2\" class=\"headerlink\" title=\"定义时，extern可以省略。\"></a>定义时，extern可以省略。</h4><h3 id=\"示例-1\"><a href=\"#示例-1\" class=\"headerlink\" title=\"示例\"></a>示例</h3><p>extern一般用于自定义的*.h文件中</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">extern</span> <span class=\"keyword\">int</span> a; <span class=\"comment\">// 声明一个全局变量 a</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> a; <span class=\"comment\">// 定义一个全局变量 a</span></span><br><span class=\"line\"><span class=\"keyword\">extern</span> <span class=\"keyword\">int</span> a =<span class=\"number\">0</span> ; <span class=\"comment\">// 定义一个全局变量 a 并给初值。</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> a =<span class=\"number\">0</span>;    <span class=\"comment\">// 定义一个全局变量 a, 并给初值，</span></span><br><span class=\"line\"><span class=\"comment\">//第三和第四是一样的</span></span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//demo.cpp</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&quot;demo.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;b;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//demo.h</span></span><br><span class=\"line\"><span class=\"keyword\">extern</span> <span class=\"keyword\">int</span> a;</span><br><span class=\"line\"><span class=\"keyword\">int</span> b = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">extern</span> <span class=\"keyword\">int</span> c = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> d = <span class=\"number\">3</span>;</span><br></pre></td></tr></table></figure>\n<p>输出a时，编译报错；输出b,c,d时，可以正常输出，但提示c被声名为extern,即此处为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Warning] &#39;c&#39; initialized and declared &#39;extern&#39;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"解释-1\"><a href=\"#解释-1\" class=\"headerlink\" title=\"解释\"></a>解释</h3><p>声明：仅仅表示有一个叫张三的人，他是个医生，他在哪不知道，咱们找不到他</p>\n<p>定义：在地球上给一个叫张三的医生分配了地理资源，让他在这一片地理区域内活动，这样就可以知道他在哪，咱们也可以找到他</p>\n<p>假如我们有两个文件A和B，在A里，我们完成了对张三的定义，如果我们在B中想再请A中定义的张三为我们工作，那我们就加个extern。<code>extern 张三;</code>这样，程序就知道这个张三的定义在别的文件里，然后程序找到A文件，发现张三的定义，我们就可以找到张三，请他出山来为我们工作了</p>\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","site":{"data":{}},"excerpt":"static\n示例\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n#include <iostream>\n\nusing namespace std;\n\nvoid out() {\n    static int n = 0;\n    n++;\n    cout << \"n=\" << n << endl;\n}\n\nint main() {\n    out();      //第一次调用out()\n    out();      //第二次调用out()\n    out();      //第三次调用out()\n}\n\n\n运行结果\n1\n2\n3\n4\n5\n\n\nn=1\nn=2\nn=","more":"<h3 id=\"运行结果\"><a href=\"#运行结果\" class=\"headerlink\" title=\"运行结果\"></a>运行结果</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">n&#x3D;1</span><br><span class=\"line\">n&#x3D;2</span><br><span class=\"line\">n&#x3D;3</span><br><span class=\"line\"></span><br><span class=\"line\">Process finished with exit code 0</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"解释\"><a href=\"#解释\" class=\"headerlink\" title=\"解释\"></a>解释</h3><p>第一次out()被调用，申请一个空间用来存放n，执行一次初始化。第一次调用结束后，存储空间并未被释放，即生命周期延长了。第二/三次调用，不再申请新的存储空间，而是继续使用第一次的存储空间，但是不执行<code>n = 0;</code>的赋值，n的值仍然为原来的值。</p>\n<h2 id=\"extern\"><a href=\"#extern\" class=\"headerlink\" title=\"extern\"></a>extern</h2><blockquote>\n<p>注：定义要为变量分配内存空间；而声明不需要为变量分配内存空间。extern是声明，而非定义，即通知编译器，此处只是该变量（或函数，但是函数一般不使用extern）的声明，不会分配内存，而真正的定义在别处。</p>\n</blockquote>\n<h4 id=\"定义时，extern可以省略。\"><a href=\"#定义时，extern可以省略。\" class=\"headerlink\" title=\"定义时，extern可以省略。\"></a>定义时，extern可以省略。</h4><h4 id=\"定义时，extern可以省略。-1\"><a href=\"#定义时，extern可以省略。-1\" class=\"headerlink\" title=\"定义时，extern可以省略。\"></a>定义时，extern可以省略。</h4><h4 id=\"定义时，extern可以省略。-2\"><a href=\"#定义时，extern可以省略。-2\" class=\"headerlink\" title=\"定义时，extern可以省略。\"></a>定义时，extern可以省略。</h4><h3 id=\"示例-1\"><a href=\"#示例-1\" class=\"headerlink\" title=\"示例\"></a>示例</h3><p>extern一般用于自定义的*.h文件中</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">extern</span> <span class=\"keyword\">int</span> a; <span class=\"comment\">// 声明一个全局变量 a</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> a; <span class=\"comment\">// 定义一个全局变量 a</span></span><br><span class=\"line\"><span class=\"keyword\">extern</span> <span class=\"keyword\">int</span> a =<span class=\"number\">0</span> ; <span class=\"comment\">// 定义一个全局变量 a 并给初值。</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> a =<span class=\"number\">0</span>;    <span class=\"comment\">// 定义一个全局变量 a, 并给初值，</span></span><br><span class=\"line\"><span class=\"comment\">//第三和第四是一样的</span></span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//demo.cpp</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&quot;demo.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;b;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//demo.h</span></span><br><span class=\"line\"><span class=\"keyword\">extern</span> <span class=\"keyword\">int</span> a;</span><br><span class=\"line\"><span class=\"keyword\">int</span> b = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">extern</span> <span class=\"keyword\">int</span> c = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> d = <span class=\"number\">3</span>;</span><br></pre></td></tr></table></figure>\n<p>输出a时，编译报错；输出b,c,d时，可以正常输出，但提示c被声名为extern,即此处为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Warning] &#39;c&#39; initialized and declared &#39;extern&#39;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"解释-1\"><a href=\"#解释-1\" class=\"headerlink\" title=\"解释\"></a>解释</h3><p>声明：仅仅表示有一个叫张三的人，他是个医生，他在哪不知道，咱们找不到他</p>\n<p>定义：在地球上给一个叫张三的医生分配了地理资源，让他在这一片地理区域内活动，这样就可以知道他在哪，咱们也可以找到他</p>\n<p>假如我们有两个文件A和B，在A里，我们完成了对张三的定义，如果我们在B中想再请A中定义的张三为我们工作，那我们就加个extern。<code>extern 张三;</code>这样，程序就知道这个张三的定义在别的文件里，然后程序找到A文件，发现张三的定义，我们就可以找到张三，请他出山来为我们工作了</p>"},{"title":"Java指北","date":"2021-03-11T08:53:26.000Z","_content":"\n### Java指北\n\n1. Java的工作方式\n   * 安装JDK\n   * 确认```java```与```javac```添加到环境变量中\n   * 新建```name.java```，并使用文本编辑器进行编辑(推荐使用NotePad++或者是SublimeText)\n   * 在命令行中使用```javac```对name.java进行编译，并使用```java```命令运行生成的name.class(注意路径是否正确)\n   <center><table><tr><td bgcolor=yellow>编译前记得先保存</td></tr></table></center>\n<!-- more -->\n2. 注意的事情\n   * 文件名与主类名相同，比如```demo.java```对应的主类应为```public class java{}```\n   * 在主类中，应该有```main```方法作为程序开始的入口，若没有```main```方法，可以通过编译但无法运行\n   * ```main```方法中必须有```String```类型的字符串数组,数组名无所谓，但习惯上使用```String[] args```\n   * ```String```与```System```等关键字大小写敏感\n   * ```String[] array;```与```String array[];```都是可以的\n   * ```boolean```与```int```本身不支持强制转换，因此结果为非```boolean```的表达式放入```if```或者是```while```中会报错\n   * Java中的运算符```%```为取余，即结果与左操作符具有相同的符号，这一点与```C++```相同，举个栗子\n   ```Java\n   System.out.println(-4%-3);\n   System.out.println(4%-3);\n   System.out.println(-4%3);\n   ```\n   >运行结果\n   ```text\n   -1\n   1\n   -1\n   ```\n   取模的运算结果在不同的环境下具有不同的意义，举一个```Matlab```的栗子\n   ```M\n   >> mod(-4,-3)\n\n    ans =\n\n        -1\n\n   >> mod(-4,3) \n\n    ans =\n\n         2\n\n   >> mod(4,-3)\n\n    ans =\n\n        -2\n\n   ```\n\n3. 一些小技巧\n   * Java提供了一种主要用于数组的增强型```for```循环\n   ```java\n    public class demo {\n        public static void main(String args[]){\n           int [] numbers = {10, 20, 30, 40, 50};\n     \n           for(int x : numbers ){\n              System.out.print( x );\n              System.out.print(\",\");\n           }\n           System.out.print(\"\\n\");\n           String [] names ={\"James\", \"Larry\", \"Tom\", \"Lacy\"};\n           for( String name : names ) {\n              System.out.print( name );\n              System.out.print(\",\");\n            }\n        }\n    }\n   ``` \n   >运行结果为\n   ```text\n    10,20,30,40,50,\n    James,Larry,Tom,Lacy,\n   ```\n\n\n---\n<center>持续更新中🍺</center>","source":"_posts/Java指北.md","raw":"---\ntitle: Java指北\ndate: 2021-03-11 16:53:26\ntags: Java\n---\n\n### Java指北\n\n1. Java的工作方式\n   * 安装JDK\n   * 确认```java```与```javac```添加到环境变量中\n   * 新建```name.java```，并使用文本编辑器进行编辑(推荐使用NotePad++或者是SublimeText)\n   * 在命令行中使用```javac```对name.java进行编译，并使用```java```命令运行生成的name.class(注意路径是否正确)\n   <center><table><tr><td bgcolor=yellow>编译前记得先保存</td></tr></table></center>\n<!-- more -->\n2. 注意的事情\n   * 文件名与主类名相同，比如```demo.java```对应的主类应为```public class java{}```\n   * 在主类中，应该有```main```方法作为程序开始的入口，若没有```main```方法，可以通过编译但无法运行\n   * ```main```方法中必须有```String```类型的字符串数组,数组名无所谓，但习惯上使用```String[] args```\n   * ```String```与```System```等关键字大小写敏感\n   * ```String[] array;```与```String array[];```都是可以的\n   * ```boolean```与```int```本身不支持强制转换，因此结果为非```boolean```的表达式放入```if```或者是```while```中会报错\n   * Java中的运算符```%```为取余，即结果与左操作符具有相同的符号，这一点与```C++```相同，举个栗子\n   ```Java\n   System.out.println(-4%-3);\n   System.out.println(4%-3);\n   System.out.println(-4%3);\n   ```\n   >运行结果\n   ```text\n   -1\n   1\n   -1\n   ```\n   取模的运算结果在不同的环境下具有不同的意义，举一个```Matlab```的栗子\n   ```M\n   >> mod(-4,-3)\n\n    ans =\n\n        -1\n\n   >> mod(-4,3) \n\n    ans =\n\n         2\n\n   >> mod(4,-3)\n\n    ans =\n\n        -2\n\n   ```\n\n3. 一些小技巧\n   * Java提供了一种主要用于数组的增强型```for```循环\n   ```java\n    public class demo {\n        public static void main(String args[]){\n           int [] numbers = {10, 20, 30, 40, 50};\n     \n           for(int x : numbers ){\n              System.out.print( x );\n              System.out.print(\",\");\n           }\n           System.out.print(\"\\n\");\n           String [] names ={\"James\", \"Larry\", \"Tom\", \"Lacy\"};\n           for( String name : names ) {\n              System.out.print( name );\n              System.out.print(\",\");\n            }\n        }\n    }\n   ``` \n   >运行结果为\n   ```text\n    10,20,30,40,50,\n    James,Larry,Tom,Lacy,\n   ```\n\n\n---\n<center>持续更新中🍺</center>","slug":"Java指北","published":1,"updated":"2021-04-13T03:29:32.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckojvxer00007boe24bu80bd4","content":"<h3 id=\"Java指北\"><a href=\"#Java指北\" class=\"headerlink\" title=\"Java指北\"></a>Java指北</h3><ol>\n<li><p>Java的工作方式</p>\n<ul>\n<li>安装JDK</li>\n<li>确认<code>java</code>与<code>javac</code>添加到环境变量中</li>\n<li>新建<code>name.java</code>，并使用文本编辑器进行编辑(推荐使用NotePad++或者是SublimeText)</li>\n<li>在命令行中使用<code>javac</code>对name.java进行编译，并使用<code>java</code>命令运行生成的name.class(注意路径是否正确)<center><table><tr><td bgcolor=yellow>编译前记得先保存</td></tr></table></center>\n<span id=\"more\"></span></li>\n</ul>\n</li>\n<li><p>注意的事情</p>\n<ul>\n<li>文件名与主类名相同，比如<code>demo.java</code>对应的主类应为<code>public class java&#123;&#125;</code></li>\n<li>在主类中，应该有<code>main</code>方法作为程序开始的入口，若没有<code>main</code>方法，可以通过编译但无法运行</li>\n<li><code>main</code>方法中必须有<code>String</code>类型的字符串数组,数组名无所谓，但习惯上使用<code>String[] args</code></li>\n<li><code>String</code>与<code>System</code>等关键字大小写敏感</li>\n<li><code>String[] array;</code>与<code>String array[];</code>都是可以的</li>\n<li><code>boolean</code>与<code>int</code>本身不支持强制转换，因此结果为非<code>boolean</code>的表达式放入<code>if</code>或者是<code>while</code>中会报错</li>\n<li>Java中的运算符<code>%</code>为取余，即结果与左操作符具有相同的符号，这一点与<code>C++</code>相同，举个栗子<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">System.out.println(-<span class=\"number\">4</span>%-<span class=\"number\">3</span>);</span><br><span class=\"line\">System.out.println(<span class=\"number\">4</span>%-<span class=\"number\">3</span>);</span><br><span class=\"line\">System.out.println(-<span class=\"number\">4</span>%<span class=\"number\">3</span>);</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>运行结果</p>\n</blockquote>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-1</span><br><span class=\"line\">1</span><br><span class=\"line\">-1</span><br></pre></td></tr></table></figure>\n取模的运算结果在不同的环境下具有不同的意义，举一个<code>Matlab</code>的栗子<figure class=\"highlight m\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt; mod(-<span class=\"number\">4</span>,-<span class=\"number\">3</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"> ans <span class=\"built_in\">=</span></span><br><span class=\"line\"></span><br><span class=\"line\">     -<span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">&gt;&gt; mod(-<span class=\"number\">4</span>,<span class=\"number\">3</span>) </span><br><span class=\"line\"></span><br><span class=\"line\"> ans <span class=\"built_in\">=</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\">&gt;&gt; mod(<span class=\"number\">4</span>,-<span class=\"number\">3</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"> ans <span class=\"built_in\">=</span></span><br><span class=\"line\"></span><br><span class=\"line\">     -<span class=\"number\">2</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>一些小技巧</p>\n<ul>\n<li>Java提供了一种主要用于数组的增强型<code>for</code>循环<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">demo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span></span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">int</span> [] numbers = &#123;<span class=\"number\">10</span>, <span class=\"number\">20</span>, <span class=\"number\">30</span>, <span class=\"number\">40</span>, <span class=\"number\">50</span>&#125;;</span><br><span class=\"line\"> </span><br><span class=\"line\">       <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> x : numbers )&#123;</span><br><span class=\"line\">          System.out.print( x );</span><br><span class=\"line\">          System.out.print(<span class=\"string\">&quot;,&quot;</span>);</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       System.out.print(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">       String [] names =&#123;<span class=\"string\">&quot;James&quot;</span>, <span class=\"string\">&quot;Larry&quot;</span>, <span class=\"string\">&quot;Tom&quot;</span>, <span class=\"string\">&quot;Lacy&quot;</span>&#125;;</span><br><span class=\"line\">       <span class=\"keyword\">for</span>( String name : names ) &#123;</span><br><span class=\"line\">          System.out.print( name );</span><br><span class=\"line\">          System.out.print(<span class=\"string\">&quot;,&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>运行结果为</p>\n</blockquote>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10,20,30,40,50,</span><br><span class=\"line\">James,Larry,Tom,Lacy,</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ol>\n<hr>\n<center>持续更新中🍺</center><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","site":{"data":{}},"excerpt":"Java指北\n 1. Java的工作方式\n    \n     * 安装JDK\n     * 确认java与javac添加到环境变量中\n     * 新建name.java，并使用文本编辑器进行编辑(推荐使用NotePad++或者是SublimeText)\n     * 在命令行中使用javac对name.java进行编译，并使用java命令运行生成的name.class(注意路径是否正确)编译前记得先保存\n    \n    \n 2. 注意的事情\n    \n     * 文件名与主类名相同，比如demo.java对应的主类应为public class java{}\n     * 在主类中，应该有","more":"</li>\n</ul>\n</li>\n<li><p>注意的事情</p>\n<ul>\n<li>文件名与主类名相同，比如<code>demo.java</code>对应的主类应为<code>public class java&#123;&#125;</code></li>\n<li>在主类中，应该有<code>main</code>方法作为程序开始的入口，若没有<code>main</code>方法，可以通过编译但无法运行</li>\n<li><code>main</code>方法中必须有<code>String</code>类型的字符串数组,数组名无所谓，但习惯上使用<code>String[] args</code></li>\n<li><code>String</code>与<code>System</code>等关键字大小写敏感</li>\n<li><code>String[] array;</code>与<code>String array[];</code>都是可以的</li>\n<li><code>boolean</code>与<code>int</code>本身不支持强制转换，因此结果为非<code>boolean</code>的表达式放入<code>if</code>或者是<code>while</code>中会报错</li>\n<li>Java中的运算符<code>%</code>为取余，即结果与左操作符具有相同的符号，这一点与<code>C++</code>相同，举个栗子<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">System.out.println(-<span class=\"number\">4</span>%-<span class=\"number\">3</span>);</span><br><span class=\"line\">System.out.println(<span class=\"number\">4</span>%-<span class=\"number\">3</span>);</span><br><span class=\"line\">System.out.println(-<span class=\"number\">4</span>%<span class=\"number\">3</span>);</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>运行结果</p>\n</blockquote>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-1</span><br><span class=\"line\">1</span><br><span class=\"line\">-1</span><br></pre></td></tr></table></figure>\n取模的运算结果在不同的环境下具有不同的意义，举一个<code>Matlab</code>的栗子<figure class=\"highlight m\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt; mod(-<span class=\"number\">4</span>,-<span class=\"number\">3</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"> ans <span class=\"built_in\">=</span></span><br><span class=\"line\"></span><br><span class=\"line\">     -<span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">&gt;&gt; mod(-<span class=\"number\">4</span>,<span class=\"number\">3</span>) </span><br><span class=\"line\"></span><br><span class=\"line\"> ans <span class=\"built_in\">=</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\">&gt;&gt; mod(<span class=\"number\">4</span>,-<span class=\"number\">3</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"> ans <span class=\"built_in\">=</span></span><br><span class=\"line\"></span><br><span class=\"line\">     -<span class=\"number\">2</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>一些小技巧</p>\n<ul>\n<li>Java提供了一种主要用于数组的增强型<code>for</code>循环<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">demo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span></span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">int</span> [] numbers = &#123;<span class=\"number\">10</span>, <span class=\"number\">20</span>, <span class=\"number\">30</span>, <span class=\"number\">40</span>, <span class=\"number\">50</span>&#125;;</span><br><span class=\"line\"> </span><br><span class=\"line\">       <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> x : numbers )&#123;</span><br><span class=\"line\">          System.out.print( x );</span><br><span class=\"line\">          System.out.print(<span class=\"string\">&quot;,&quot;</span>);</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       System.out.print(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">       String [] names =&#123;<span class=\"string\">&quot;James&quot;</span>, <span class=\"string\">&quot;Larry&quot;</span>, <span class=\"string\">&quot;Tom&quot;</span>, <span class=\"string\">&quot;Lacy&quot;</span>&#125;;</span><br><span class=\"line\">       <span class=\"keyword\">for</span>( String name : names ) &#123;</span><br><span class=\"line\">          System.out.print( name );</span><br><span class=\"line\">          System.out.print(<span class=\"string\">&quot;,&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>运行结果为</p>\n</blockquote>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10,20,30,40,50,</span><br><span class=\"line\">James,Larry,Tom,Lacy,</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ol>\n<hr>\n<center>持续更新中🍺</center>"},{"title":"Java三角形类","date":"2021-04-01T09:11:43.000Z","_content":"\n\n## Java三角形类\n\n### 已实现的功能：\n- 计算各角度值\n- 计算周长、面积\n- 判断是否可以构成三角形\n\n<!-- more -->\n\n```Java\nclass Triangle {\n    double[] len;\n    double[] degree;\n    private double area, cir;\n\n    Triangle(double num1, double num2, double num3) {\n        if (num1 + num2 <= num3 || num1 + num3 <= num2 || num2 + num3 <= num1) {\n            System.out.println(\"无法构成三角形\");\n            len = null;\n            return;\n        }\n\n        len = new double[3];\n        degree = new double[3];\n        len[0] = num1;\n        len[1] = num2;\n        len[2] = num3;\n        cir = len[0] + len[1] + len[2];\n        double p = cir / 2;\n        area = Math.sqrt(p * (p - len[0]) * (p - len[1]) * (p - len[2]));   //求面积\n        double a = Math.pow(len[0], 2), b = Math.pow(len[1], 2), c = Math.pow(len[2], 2);\n        degree[0] = Math.toDegrees(Math.acos((a + b - c) / (2 * len[0] * len[1])));\n        degree[1] = Math.toDegrees(Math.acos((a + c - b) / (2 * len[0] * len[2])));\n        degree[2] = Math.toDegrees(Math.acos((b + c - a) / (2 * len[1] * len[2])));\n    }\n\n    double getArea() {\n        return area;\n    }\n\n    double getCir() {\n        return cir;\n    }\n\n}\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Triangle t = new Triangle(3, 4, 5);\n        System.out.println(\"三角形的面积为：\" + t.getArea() + \",\" + \"周长为：\" + t.getCir());\n        System.out.println(\"三角度数为：\" + t.degree[0] + \",\" + t.degree[1] + \",\" + t.degree[2]);\n    }\n}\n```","source":"_posts/Java三角形类.md","raw":"---\ntitle: Java三角形类\ndate: 2021-04-01 17:11:43\ntags: Java\n---\n\n\n## Java三角形类\n\n### 已实现的功能：\n- 计算各角度值\n- 计算周长、面积\n- 判断是否可以构成三角形\n\n<!-- more -->\n\n```Java\nclass Triangle {\n    double[] len;\n    double[] degree;\n    private double area, cir;\n\n    Triangle(double num1, double num2, double num3) {\n        if (num1 + num2 <= num3 || num1 + num3 <= num2 || num2 + num3 <= num1) {\n            System.out.println(\"无法构成三角形\");\n            len = null;\n            return;\n        }\n\n        len = new double[3];\n        degree = new double[3];\n        len[0] = num1;\n        len[1] = num2;\n        len[2] = num3;\n        cir = len[0] + len[1] + len[2];\n        double p = cir / 2;\n        area = Math.sqrt(p * (p - len[0]) * (p - len[1]) * (p - len[2]));   //求面积\n        double a = Math.pow(len[0], 2), b = Math.pow(len[1], 2), c = Math.pow(len[2], 2);\n        degree[0] = Math.toDegrees(Math.acos((a + b - c) / (2 * len[0] * len[1])));\n        degree[1] = Math.toDegrees(Math.acos((a + c - b) / (2 * len[0] * len[2])));\n        degree[2] = Math.toDegrees(Math.acos((b + c - a) / (2 * len[1] * len[2])));\n    }\n\n    double getArea() {\n        return area;\n    }\n\n    double getCir() {\n        return cir;\n    }\n\n}\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Triangle t = new Triangle(3, 4, 5);\n        System.out.println(\"三角形的面积为：\" + t.getArea() + \",\" + \"周长为：\" + t.getCir());\n        System.out.println(\"三角度数为：\" + t.degree[0] + \",\" + t.degree[1] + \",\" + t.degree[2]);\n    }\n}\n```","slug":"Java三角形类","published":1,"updated":"2021-04-13T03:29:27.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckojvxer00008boe2bwr3ghn7","content":"<h2 id=\"Java三角形类\"><a href=\"#Java三角形类\" class=\"headerlink\" title=\"Java三角形类\"></a>Java三角形类</h2><h3 id=\"已实现的功能：\"><a href=\"#已实现的功能：\" class=\"headerlink\" title=\"已实现的功能：\"></a>已实现的功能：</h3><ul>\n<li>计算各角度值</li>\n<li>计算周长、面积</li>\n<li>判断是否可以构成三角形</li>\n</ul>\n<span id=\"more\"></span>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Triangle</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">double</span>[] len;</span><br><span class=\"line\">    <span class=\"keyword\">double</span>[] degree;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">double</span> area, cir;</span><br><span class=\"line\"></span><br><span class=\"line\">    Triangle(<span class=\"keyword\">double</span> num1, <span class=\"keyword\">double</span> num2, <span class=\"keyword\">double</span> num3) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (num1 + num2 &lt;= num3 || num1 + num3 &lt;= num2 || num2 + num3 &lt;= num1) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;无法构成三角形&quot;</span>);</span><br><span class=\"line\">            len = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        len = <span class=\"keyword\">new</span> <span class=\"keyword\">double</span>[<span class=\"number\">3</span>];</span><br><span class=\"line\">        degree = <span class=\"keyword\">new</span> <span class=\"keyword\">double</span>[<span class=\"number\">3</span>];</span><br><span class=\"line\">        len[<span class=\"number\">0</span>] = num1;</span><br><span class=\"line\">        len[<span class=\"number\">1</span>] = num2;</span><br><span class=\"line\">        len[<span class=\"number\">2</span>] = num3;</span><br><span class=\"line\">        cir = len[<span class=\"number\">0</span>] + len[<span class=\"number\">1</span>] + len[<span class=\"number\">2</span>];</span><br><span class=\"line\">        <span class=\"keyword\">double</span> p = cir / <span class=\"number\">2</span>;</span><br><span class=\"line\">        area = Math.sqrt(p * (p - len[<span class=\"number\">0</span>]) * (p - len[<span class=\"number\">1</span>]) * (p - len[<span class=\"number\">2</span>]));   <span class=\"comment\">//求面积</span></span><br><span class=\"line\">        <span class=\"keyword\">double</span> a = Math.pow(len[<span class=\"number\">0</span>], <span class=\"number\">2</span>), b = Math.pow(len[<span class=\"number\">1</span>], <span class=\"number\">2</span>), c = Math.pow(len[<span class=\"number\">2</span>], <span class=\"number\">2</span>);</span><br><span class=\"line\">        degree[<span class=\"number\">0</span>] = Math.toDegrees(Math.acos((a + b - c) / (<span class=\"number\">2</span> * len[<span class=\"number\">0</span>] * len[<span class=\"number\">1</span>])));</span><br><span class=\"line\">        degree[<span class=\"number\">1</span>] = Math.toDegrees(Math.acos((a + c - b) / (<span class=\"number\">2</span> * len[<span class=\"number\">0</span>] * len[<span class=\"number\">2</span>])));</span><br><span class=\"line\">        degree[<span class=\"number\">2</span>] = Math.toDegrees(Math.acos((b + c - a) / (<span class=\"number\">2</span> * len[<span class=\"number\">1</span>] * len[<span class=\"number\">2</span>])));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">double</span> <span class=\"title\">getArea</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> area;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">double</span> <span class=\"title\">getCir</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> cir;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Triangle t = <span class=\"keyword\">new</span> Triangle(<span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;三角形的面积为：&quot;</span> + t.getArea() + <span class=\"string\">&quot;,&quot;</span> + <span class=\"string\">&quot;周长为：&quot;</span> + t.getCir());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;三角度数为：&quot;</span> + t.degree[<span class=\"number\">0</span>] + <span class=\"string\">&quot;,&quot;</span> + t.degree[<span class=\"number\">1</span>] + <span class=\"string\">&quot;,&quot;</span> + t.degree[<span class=\"number\">2</span>]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","site":{"data":{}},"excerpt":"Java三角形类\n已实现的功能：\n * 计算各角度值\n * 计算周长、面积\n * 判断是否可以构成三角形\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n\n\nclass Triangle {\n    double[] len;\n    double[] degree;\n    private double area, cir;\n\n    Triangle(double num1, double n","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Triangle</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">double</span>[] len;</span><br><span class=\"line\">    <span class=\"keyword\">double</span>[] degree;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">double</span> area, cir;</span><br><span class=\"line\"></span><br><span class=\"line\">    Triangle(<span class=\"keyword\">double</span> num1, <span class=\"keyword\">double</span> num2, <span class=\"keyword\">double</span> num3) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (num1 + num2 &lt;= num3 || num1 + num3 &lt;= num2 || num2 + num3 &lt;= num1) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;无法构成三角形&quot;</span>);</span><br><span class=\"line\">            len = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        len = <span class=\"keyword\">new</span> <span class=\"keyword\">double</span>[<span class=\"number\">3</span>];</span><br><span class=\"line\">        degree = <span class=\"keyword\">new</span> <span class=\"keyword\">double</span>[<span class=\"number\">3</span>];</span><br><span class=\"line\">        len[<span class=\"number\">0</span>] = num1;</span><br><span class=\"line\">        len[<span class=\"number\">1</span>] = num2;</span><br><span class=\"line\">        len[<span class=\"number\">2</span>] = num3;</span><br><span class=\"line\">        cir = len[<span class=\"number\">0</span>] + len[<span class=\"number\">1</span>] + len[<span class=\"number\">2</span>];</span><br><span class=\"line\">        <span class=\"keyword\">double</span> p = cir / <span class=\"number\">2</span>;</span><br><span class=\"line\">        area = Math.sqrt(p * (p - len[<span class=\"number\">0</span>]) * (p - len[<span class=\"number\">1</span>]) * (p - len[<span class=\"number\">2</span>]));   <span class=\"comment\">//求面积</span></span><br><span class=\"line\">        <span class=\"keyword\">double</span> a = Math.pow(len[<span class=\"number\">0</span>], <span class=\"number\">2</span>), b = Math.pow(len[<span class=\"number\">1</span>], <span class=\"number\">2</span>), c = Math.pow(len[<span class=\"number\">2</span>], <span class=\"number\">2</span>);</span><br><span class=\"line\">        degree[<span class=\"number\">0</span>] = Math.toDegrees(Math.acos((a + b - c) / (<span class=\"number\">2</span> * len[<span class=\"number\">0</span>] * len[<span class=\"number\">1</span>])));</span><br><span class=\"line\">        degree[<span class=\"number\">1</span>] = Math.toDegrees(Math.acos((a + c - b) / (<span class=\"number\">2</span> * len[<span class=\"number\">0</span>] * len[<span class=\"number\">2</span>])));</span><br><span class=\"line\">        degree[<span class=\"number\">2</span>] = Math.toDegrees(Math.acos((b + c - a) / (<span class=\"number\">2</span> * len[<span class=\"number\">1</span>] * len[<span class=\"number\">2</span>])));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">double</span> <span class=\"title\">getArea</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> area;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">double</span> <span class=\"title\">getCir</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> cir;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Triangle t = <span class=\"keyword\">new</span> Triangle(<span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;三角形的面积为：&quot;</span> + t.getArea() + <span class=\"string\">&quot;,&quot;</span> + <span class=\"string\">&quot;周长为：&quot;</span> + t.getCir());</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;三角度数为：&quot;</span> + t.degree[<span class=\"number\">0</span>] + <span class=\"string\">&quot;,&quot;</span> + t.degree[<span class=\"number\">1</span>] + <span class=\"string\">&quot;,&quot;</span> + t.degree[<span class=\"number\">2</span>]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Java矩形类","date":"2021-04-22T09:23:06.000Z","_content":"\n\n## 项目结构\n\n```\n$ tree -C -L 3\n.\n└── top\n    └── lhxone\n        ├── Main.java\n        └── myRect\n\n```\n\n## 代码\n\n```Main.java```\n\n```Java\npackage top.lhxone;\n\nimport top.lhxone.myRect.PlainRect;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        PlainRect r=new PlainRect(10,10,10,20);\n        System.out.println(\"面积为\"+r.area());\n        if (r.isInside(25.5,13)){\n            System.out.println(\"在矩形内.\");\n        }else {\n            System.out.println(\"不在矩形内.\");\n        }\n    }\n}\n```\n\n```Rect.java```\n\n```Java\npackage top.lhxone.myRect;\n\npublic class Rect {\n    protected double width, height;\n\n    Rect(double width, double height) {\n        this.width = width;\n        this.height = height;\n    }\n\n    public Rect() {\n        this.width = 1.0;\n        this.height = 1.0;\n    }\n\n    public double area() {\n        return this.height * this.width;\n    }\n\n    public double perimeter(){\n        return 2*(this.width+this.height);\n    }\n\n}\n```\n\n```PlainRect.java```\n\n```Java\npackage top.lhxone.myRect;\n\npublic class PlainRect extends Rect {\n    double startX, startY;\n\n    PlainRect() {\n        this.startX = 1.0;\n        this.startY = 1.0;\n        super.height = 1.0;\n        super.width = 1.0;\n    }\n\n    public PlainRect(double X, double Y, double width, double height) {\n        this.startX = X;\n        this.startY = Y;\n        super.width = width;\n        super.height = height;\n    }\n\n    public boolean isInside(double x, double y) {\n        if (x < startX + width && x > startX && y < startY && y > startY - height) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n```","source":"_posts/Java矩形类.md","raw":"---\ntitle: Java矩形类\ndate: 2021-04-22 17:23:06\ntags: Java\n---\n\n\n## 项目结构\n\n```\n$ tree -C -L 3\n.\n└── top\n    └── lhxone\n        ├── Main.java\n        └── myRect\n\n```\n\n## 代码\n\n```Main.java```\n\n```Java\npackage top.lhxone;\n\nimport top.lhxone.myRect.PlainRect;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        PlainRect r=new PlainRect(10,10,10,20);\n        System.out.println(\"面积为\"+r.area());\n        if (r.isInside(25.5,13)){\n            System.out.println(\"在矩形内.\");\n        }else {\n            System.out.println(\"不在矩形内.\");\n        }\n    }\n}\n```\n\n```Rect.java```\n\n```Java\npackage top.lhxone.myRect;\n\npublic class Rect {\n    protected double width, height;\n\n    Rect(double width, double height) {\n        this.width = width;\n        this.height = height;\n    }\n\n    public Rect() {\n        this.width = 1.0;\n        this.height = 1.0;\n    }\n\n    public double area() {\n        return this.height * this.width;\n    }\n\n    public double perimeter(){\n        return 2*(this.width+this.height);\n    }\n\n}\n```\n\n```PlainRect.java```\n\n```Java\npackage top.lhxone.myRect;\n\npublic class PlainRect extends Rect {\n    double startX, startY;\n\n    PlainRect() {\n        this.startX = 1.0;\n        this.startY = 1.0;\n        super.height = 1.0;\n        super.width = 1.0;\n    }\n\n    public PlainRect(double X, double Y, double width, double height) {\n        this.startX = X;\n        this.startY = Y;\n        super.width = width;\n        super.height = height;\n    }\n\n    public boolean isInside(double x, double y) {\n        if (x < startX + width && x > startX && y < startY && y > startY - height) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n```","slug":"Java矩形类","published":1,"updated":"2021-04-22T09:25:49.536Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckojvxer1000bboe26dzk2zle","content":"<h2 id=\"项目结构\"><a href=\"#项目结构\" class=\"headerlink\" title=\"项目结构\"></a>项目结构</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ tree -C -L 3</span><br><span class=\"line\">.</span><br><span class=\"line\">└── top</span><br><span class=\"line\">    └── lhxone</span><br><span class=\"line\">        ├── Main.java</span><br><span class=\"line\">        └── myRect</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><p><code>Main.java</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> top.lhxone;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> top.lhxone.myRect.PlainRect;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        PlainRect r=<span class=\"keyword\">new</span> PlainRect(<span class=\"number\">10</span>,<span class=\"number\">10</span>,<span class=\"number\">10</span>,<span class=\"number\">20</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;面积为&quot;</span>+r.area());</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (r.isInside(<span class=\"number\">25.5</span>,<span class=\"number\">13</span>))&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;在矩形内.&quot;</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;不在矩形内.&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>Rect.java</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> top.lhxone.myRect;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Rect</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">double</span> width, height;</span><br><span class=\"line\"></span><br><span class=\"line\">    Rect(<span class=\"keyword\">double</span> width, <span class=\"keyword\">double</span> height) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.width = width;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.height = height;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Rect</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.width = <span class=\"number\">1.0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.height = <span class=\"number\">1.0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">double</span> <span class=\"title\">area</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.height * <span class=\"keyword\">this</span>.width;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">double</span> <span class=\"title\">perimeter</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">2</span>*(<span class=\"keyword\">this</span>.width+<span class=\"keyword\">this</span>.height);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>PlainRect.java</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> top.lhxone.myRect;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PlainRect</span> <span class=\"keyword\">extends</span> <span class=\"title\">Rect</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">double</span> startX, startY;</span><br><span class=\"line\"></span><br><span class=\"line\">    PlainRect() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.startX = <span class=\"number\">1.0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.startY = <span class=\"number\">1.0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.height = <span class=\"number\">1.0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.width = <span class=\"number\">1.0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">PlainRect</span><span class=\"params\">(<span class=\"keyword\">double</span> X, <span class=\"keyword\">double</span> Y, <span class=\"keyword\">double</span> width, <span class=\"keyword\">double</span> height)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.startX = X;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.startY = Y;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.width = width;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.height = height;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isInside</span><span class=\"params\">(<span class=\"keyword\">double</span> x, <span class=\"keyword\">double</span> y)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (x &lt; startX + width &amp;&amp; x &gt; startX &amp;&amp; y &lt; startY &amp;&amp; y &gt; startY - height) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","site":{"data":{}},"excerpt":"项目结构\n1\n2\n3\n4\n5\n6\n7\n\n\n$ tree -C -L 3\n.\n└── top\n    └── lhxone\n        ├── Main.java\n        └── myRect\n\n\n\n代码\nMain.java\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\npackage top.lhxone;\n\nimport top.lhxone.myRect.PlainRect;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        PlainRec","more":"<h2 id=\"项目结构\"><a href=\"#项目结构\" class=\"headerlink\" title=\"项目结构\"></a>项目结构</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ tree -C -L 3</span><br><span class=\"line\">.</span><br><span class=\"line\">└── top</span><br><span class=\"line\">    └── lhxone</span><br><span class=\"line\">        ├── Main.java</span><br><span class=\"line\">        └── myRect</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><p><code>Main.java</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> top.lhxone;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> top.lhxone.myRect.PlainRect;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        PlainRect r=<span class=\"keyword\">new</span> PlainRect(<span class=\"number\">10</span>,<span class=\"number\">10</span>,<span class=\"number\">10</span>,<span class=\"number\">20</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;面积为&quot;</span>+r.area());</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (r.isInside(<span class=\"number\">25.5</span>,<span class=\"number\">13</span>))&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;在矩形内.&quot;</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;不在矩形内.&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>Rect.java</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> top.lhxone.myRect;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Rect</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">double</span> width, height;</span><br><span class=\"line\"></span><br><span class=\"line\">    Rect(<span class=\"keyword\">double</span> width, <span class=\"keyword\">double</span> height) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.width = width;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.height = height;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Rect</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.width = <span class=\"number\">1.0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.height = <span class=\"number\">1.0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">double</span> <span class=\"title\">area</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.height * <span class=\"keyword\">this</span>.width;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">double</span> <span class=\"title\">perimeter</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">2</span>*(<span class=\"keyword\">this</span>.width+<span class=\"keyword\">this</span>.height);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>PlainRect.java</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> top.lhxone.myRect;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PlainRect</span> <span class=\"keyword\">extends</span> <span class=\"title\">Rect</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">double</span> startX, startY;</span><br><span class=\"line\"></span><br><span class=\"line\">    PlainRect() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.startX = <span class=\"number\">1.0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.startY = <span class=\"number\">1.0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.height = <span class=\"number\">1.0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.width = <span class=\"number\">1.0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">PlainRect</span><span class=\"params\">(<span class=\"keyword\">double</span> X, <span class=\"keyword\">double</span> Y, <span class=\"keyword\">double</span> width, <span class=\"keyword\">double</span> height)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.startX = X;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.startY = Y;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.width = width;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.height = height;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isInside</span><span class=\"params\">(<span class=\"keyword\">double</span> x, <span class=\"keyword\">double</span> y)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (x &lt; startX + width &amp;&amp; x &gt; startX &amp;&amp; y &lt; startY &amp;&amp; y &gt; startY - height) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Java银行系统","date":"2021-04-10T04:25:15.000Z","_content":"\n\n## Java银行系统\n\n### 实现的功能\n\n- 继承抽象类```people```，创建```customer```类\n- 使用构造函数对信息初始化\n- 重载customer的toString方法\n- 实现存款、取款、注册新卡和删除卡片等操作\n\n<!-- more -->\n\n### 代码实例\n\n\n```Java\nabstract class people {\n    protected String name;\n    protected String gender;\n    protected String uid;\n    protected int age;\n\n    people(String name, String gender, int age, String uid) {\n        this.name = name;\n        this.gender = gender;\n        this.age = age;\n        this.uid = uid;\n    }\n}\n\nclass customer extends people {\n    protected String[] CardID = new String[3];\n    protected String[] password = new String[3];\n    protected double[] remain = new double[3];\n    protected int CardNum = 0;\n\n    customer(String name, String gender, int age, String uid) {\n        super(name, gender, age, uid);\n    }\n\n    //TODO:USER Operation\n    @Override\n    public String toString() {\n        return \"客户名字为：\" + super.name + \"，身份证为：\" + super.uid + \"，卡片数量为：\" + this.CardNum;\n    }\n\n    void showUSERinfo() {\n        System.out.printf(\"客户名字为：%s，性别为：%s，身份证为：%s，卡片数量为：%d\\n\", super.name, super.gender, super.uid, this.CardNum);\n        if (CardNum != 0) {\n            System.out.println(\"--编号--CardID--Password------------Remain\");\n            for (int i = 0; i < CardNum; i++) {\n                System.out.println(\"\\t\" + i + \"\\t\" + CardID[i] + \"\\t\" + password[i] + \"\\t\\t\" + remain[i]);\n            }\n        }\n    }\n\n\n    //TODO:Card Operation\n    void NewCard(String ID, String password, int remain) {\n        if (this.CardNum < 3) {\n            this.CardID[CardNum] = ID;\n            this.password[CardNum] = password;\n            this.remain[CardNum] = remain;\n            System.out.printf(\"卡片创建成功！\\n卡号为：%s，密码为%s。\\n\", this.CardID[CardNum], this.password[CardNum]);\n            CardNum++;\n        } else {\n            System.out.println(\"卡片数量已满，无法申请新卡片！\");\n        }\n    }\n\n    void DelCard(String ID, String password) {\n        if (CardNum == 0) {\n            System.out.println(\"没有可用的卡！\");\n        } else {\n            for (int i = 0; i < CardNum; i++) {\n                if (CardID[i] == ID) {\n                    if (this.password[i] == password) {\n                        for (int j = i; j < CardNum - 1; j++) {\n                            CardID[j] = CardID[j + 1];\n                            this.password[j] = this.password[j + 1];\n                            remain[j] = remain[j + 1];\n                        }\n                        CardNum--;\n                        System.out.println(\"卡片删除成功！\");\n                    } else {\n                        System.out.println(\"密码不正确！\");\n                    }\n                    return;\n                }\n            }\n        }\n    }\n\n    void getMoney(String ID, String password, double moneyNum) {\n        for (int i = 0; i < CardNum; i++) {\n            if (CardID[i] == ID) {\n                if (this.password[i] == password) {\n                    if (moneyNum <= remain[i]) {\n                        remain[i] -= moneyNum;\n                        System.out.println(\"取款成功！已在\" + CardID[i] + \"取出\" + moneyNum + \"，账户还剩：\" + remain[i]);\n                    }\n                } else {\n                    System.out.println(\"密码不正确！\");\n                }\n                return;\n            }\n        }\n        System.out.println(\"未找到此卡片，请检查输入的卡号！\");\n    }\n\n    void saveMoney(String ID, int moneyNum) {\n        if (moneyNum <= 0) {\n            System.out.println(\"无效操作！\");\n            return;\n        }\n        for (int i = 0; i < CardNum; i++) {\n            if (CardID[i] == ID) {\n                remain[i] += moneyNum;\n                System.out.println(\"存款成功！已在\" + CardID[i] + \"存入\" + moneyNum + \"，账户还剩：\" + remain[i]);\n                return;\n            }\n        }\n        System.out.println(\"未找到此卡片，请检查输入的卡号！\");\n    }\n\n}\n\npublic class Main {\n\n    public static void main(String[] args) {\n        customer cust;\n        cust = new customer(\"张三\", \"男\", 23, \"12134\");\n        cust.NewCard(\"0001\", \"thisisapassword\", 1000);\n        cust.NewCard(\"0002\", \"anotherpassword\", 1200);\n        cust.NewCard(\"0003\", \"isthirdpassword\", 4200);\n        cust.NewCard(\"0004\", \"isatestpassword\", 3600);\n//        System.out.println(cust.toString());\n        cust.showUSERinfo();\n        cust.getMoney(\"0001\", \"thisisapassword\", 300);\n        cust.showUSERinfo();\n        cust.DelCard(\"0002\", \"anotherpassword\");\n        cust.showUSERinfo();\n        cust.saveMoney(\"0001\", 200);\n        cust.showUSERinfo();\n    }\n}\n```","source":"_posts/Java银行系统.md","raw":"---\ntitle: Java银行系统\ndate: 2021-04-10 12:25:15\ntags: Java\n---\n\n\n## Java银行系统\n\n### 实现的功能\n\n- 继承抽象类```people```，创建```customer```类\n- 使用构造函数对信息初始化\n- 重载customer的toString方法\n- 实现存款、取款、注册新卡和删除卡片等操作\n\n<!-- more -->\n\n### 代码实例\n\n\n```Java\nabstract class people {\n    protected String name;\n    protected String gender;\n    protected String uid;\n    protected int age;\n\n    people(String name, String gender, int age, String uid) {\n        this.name = name;\n        this.gender = gender;\n        this.age = age;\n        this.uid = uid;\n    }\n}\n\nclass customer extends people {\n    protected String[] CardID = new String[3];\n    protected String[] password = new String[3];\n    protected double[] remain = new double[3];\n    protected int CardNum = 0;\n\n    customer(String name, String gender, int age, String uid) {\n        super(name, gender, age, uid);\n    }\n\n    //TODO:USER Operation\n    @Override\n    public String toString() {\n        return \"客户名字为：\" + super.name + \"，身份证为：\" + super.uid + \"，卡片数量为：\" + this.CardNum;\n    }\n\n    void showUSERinfo() {\n        System.out.printf(\"客户名字为：%s，性别为：%s，身份证为：%s，卡片数量为：%d\\n\", super.name, super.gender, super.uid, this.CardNum);\n        if (CardNum != 0) {\n            System.out.println(\"--编号--CardID--Password------------Remain\");\n            for (int i = 0; i < CardNum; i++) {\n                System.out.println(\"\\t\" + i + \"\\t\" + CardID[i] + \"\\t\" + password[i] + \"\\t\\t\" + remain[i]);\n            }\n        }\n    }\n\n\n    //TODO:Card Operation\n    void NewCard(String ID, String password, int remain) {\n        if (this.CardNum < 3) {\n            this.CardID[CardNum] = ID;\n            this.password[CardNum] = password;\n            this.remain[CardNum] = remain;\n            System.out.printf(\"卡片创建成功！\\n卡号为：%s，密码为%s。\\n\", this.CardID[CardNum], this.password[CardNum]);\n            CardNum++;\n        } else {\n            System.out.println(\"卡片数量已满，无法申请新卡片！\");\n        }\n    }\n\n    void DelCard(String ID, String password) {\n        if (CardNum == 0) {\n            System.out.println(\"没有可用的卡！\");\n        } else {\n            for (int i = 0; i < CardNum; i++) {\n                if (CardID[i] == ID) {\n                    if (this.password[i] == password) {\n                        for (int j = i; j < CardNum - 1; j++) {\n                            CardID[j] = CardID[j + 1];\n                            this.password[j] = this.password[j + 1];\n                            remain[j] = remain[j + 1];\n                        }\n                        CardNum--;\n                        System.out.println(\"卡片删除成功！\");\n                    } else {\n                        System.out.println(\"密码不正确！\");\n                    }\n                    return;\n                }\n            }\n        }\n    }\n\n    void getMoney(String ID, String password, double moneyNum) {\n        for (int i = 0; i < CardNum; i++) {\n            if (CardID[i] == ID) {\n                if (this.password[i] == password) {\n                    if (moneyNum <= remain[i]) {\n                        remain[i] -= moneyNum;\n                        System.out.println(\"取款成功！已在\" + CardID[i] + \"取出\" + moneyNum + \"，账户还剩：\" + remain[i]);\n                    }\n                } else {\n                    System.out.println(\"密码不正确！\");\n                }\n                return;\n            }\n        }\n        System.out.println(\"未找到此卡片，请检查输入的卡号！\");\n    }\n\n    void saveMoney(String ID, int moneyNum) {\n        if (moneyNum <= 0) {\n            System.out.println(\"无效操作！\");\n            return;\n        }\n        for (int i = 0; i < CardNum; i++) {\n            if (CardID[i] == ID) {\n                remain[i] += moneyNum;\n                System.out.println(\"存款成功！已在\" + CardID[i] + \"存入\" + moneyNum + \"，账户还剩：\" + remain[i]);\n                return;\n            }\n        }\n        System.out.println(\"未找到此卡片，请检查输入的卡号！\");\n    }\n\n}\n\npublic class Main {\n\n    public static void main(String[] args) {\n        customer cust;\n        cust = new customer(\"张三\", \"男\", 23, \"12134\");\n        cust.NewCard(\"0001\", \"thisisapassword\", 1000);\n        cust.NewCard(\"0002\", \"anotherpassword\", 1200);\n        cust.NewCard(\"0003\", \"isthirdpassword\", 4200);\n        cust.NewCard(\"0004\", \"isatestpassword\", 3600);\n//        System.out.println(cust.toString());\n        cust.showUSERinfo();\n        cust.getMoney(\"0001\", \"thisisapassword\", 300);\n        cust.showUSERinfo();\n        cust.DelCard(\"0002\", \"anotherpassword\");\n        cust.showUSERinfo();\n        cust.saveMoney(\"0001\", 200);\n        cust.showUSERinfo();\n    }\n}\n```","slug":"Java银行系统","published":1,"updated":"2021-04-13T03:28:45.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckojvxer2000dboe29pdf17hb","content":"<h2 id=\"Java银行系统\"><a href=\"#Java银行系统\" class=\"headerlink\" title=\"Java银行系统\"></a>Java银行系统</h2><h3 id=\"实现的功能\"><a href=\"#实现的功能\" class=\"headerlink\" title=\"实现的功能\"></a>实现的功能</h3><ul>\n<li>继承抽象类<code>people</code>，创建<code>customer</code>类</li>\n<li>使用构造函数对信息初始化</li>\n<li>重载customer的toString方法</li>\n<li>实现存款、取款、注册新卡和删除卡片等操作</li>\n</ul>\n<span id=\"more\"></span>\n\n<h3 id=\"代码实例\"><a href=\"#代码实例\" class=\"headerlink\" title=\"代码实例\"></a>代码实例</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">people</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> String gender;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> String uid;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">int</span> age;</span><br><span class=\"line\"></span><br><span class=\"line\">    people(String name, String gender, <span class=\"keyword\">int</span> age, String uid) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.gender = gender;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.age = age;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.uid = uid;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">customer</span> <span class=\"keyword\">extends</span> <span class=\"title\">people</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> String[] CardID = <span class=\"keyword\">new</span> String[<span class=\"number\">3</span>];</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> String[] password = <span class=\"keyword\">new</span> String[<span class=\"number\">3</span>];</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">double</span>[] remain = <span class=\"keyword\">new</span> <span class=\"keyword\">double</span>[<span class=\"number\">3</span>];</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">int</span> CardNum = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    customer(String name, String gender, <span class=\"keyword\">int</span> age, String uid) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(name, gender, age, uid);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//<span class=\"doctag\">TODO:</span>USER Operation</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;客户名字为：&quot;</span> + <span class=\"keyword\">super</span>.name + <span class=\"string\">&quot;，身份证为：&quot;</span> + <span class=\"keyword\">super</span>.uid + <span class=\"string\">&quot;，卡片数量为：&quot;</span> + <span class=\"keyword\">this</span>.CardNum;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">showUSERinfo</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.printf(<span class=\"string\">&quot;客户名字为：%s，性别为：%s，身份证为：%s，卡片数量为：%d\\n&quot;</span>, <span class=\"keyword\">super</span>.name, <span class=\"keyword\">super</span>.gender, <span class=\"keyword\">super</span>.uid, <span class=\"keyword\">this</span>.CardNum);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (CardNum != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;--编号--CardID--Password------------Remain&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; CardNum; i++) &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;\\t&quot;</span> + i + <span class=\"string\">&quot;\\t&quot;</span> + CardID[i] + <span class=\"string\">&quot;\\t&quot;</span> + password[i] + <span class=\"string\">&quot;\\t\\t&quot;</span> + remain[i]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//<span class=\"doctag\">TODO:</span>Card Operation</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">NewCard</span><span class=\"params\">(String ID, String password, <span class=\"keyword\">int</span> remain)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.CardNum &lt; <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.CardID[CardNum] = ID;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.password[CardNum] = password;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.remain[CardNum] = remain;</span><br><span class=\"line\">            System.out.printf(<span class=\"string\">&quot;卡片创建成功！\\n卡号为：%s，密码为%s。\\n&quot;</span>, <span class=\"keyword\">this</span>.CardID[CardNum], <span class=\"keyword\">this</span>.password[CardNum]);</span><br><span class=\"line\">            CardNum++;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;卡片数量已满，无法申请新卡片！&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">DelCard</span><span class=\"params\">(String ID, String password)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (CardNum == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;没有可用的卡！&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; CardNum; i++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (CardID[i] == ID) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.password[i] == password) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = i; j &lt; CardNum - <span class=\"number\">1</span>; j++) &#123;</span><br><span class=\"line\">                            CardID[j] = CardID[j + <span class=\"number\">1</span>];</span><br><span class=\"line\">                            <span class=\"keyword\">this</span>.password[j] = <span class=\"keyword\">this</span>.password[j + <span class=\"number\">1</span>];</span><br><span class=\"line\">                            remain[j] = remain[j + <span class=\"number\">1</span>];</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                        CardNum--;</span><br><span class=\"line\">                        System.out.println(<span class=\"string\">&quot;卡片删除成功！&quot;</span>);</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        System.out.println(<span class=\"string\">&quot;密码不正确！&quot;</span>);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">getMoney</span><span class=\"params\">(String ID, String password, <span class=\"keyword\">double</span> moneyNum)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; CardNum; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (CardID[i] == ID) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.password[i] == password) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (moneyNum &lt;= remain[i]) &#123;</span><br><span class=\"line\">                        remain[i] -= moneyNum;</span><br><span class=\"line\">                        System.out.println(<span class=\"string\">&quot;取款成功！已在&quot;</span> + CardID[i] + <span class=\"string\">&quot;取出&quot;</span> + moneyNum + <span class=\"string\">&quot;，账户还剩：&quot;</span> + remain[i]);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;密码不正确！&quot;</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;未找到此卡片，请检查输入的卡号！&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">saveMoney</span><span class=\"params\">(String ID, <span class=\"keyword\">int</span> moneyNum)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (moneyNum &lt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;无效操作！&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; CardNum; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (CardID[i] == ID) &#123;</span><br><span class=\"line\">                remain[i] += moneyNum;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;存款成功！已在&quot;</span> + CardID[i] + <span class=\"string\">&quot;存入&quot;</span> + moneyNum + <span class=\"string\">&quot;，账户还剩：&quot;</span> + remain[i]);</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;未找到此卡片，请检查输入的卡号！&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        customer cust;</span><br><span class=\"line\">        cust = <span class=\"keyword\">new</span> customer(<span class=\"string\">&quot;张三&quot;</span>, <span class=\"string\">&quot;男&quot;</span>, <span class=\"number\">23</span>, <span class=\"string\">&quot;12134&quot;</span>);</span><br><span class=\"line\">        cust.NewCard(<span class=\"string\">&quot;0001&quot;</span>, <span class=\"string\">&quot;thisisapassword&quot;</span>, <span class=\"number\">1000</span>);</span><br><span class=\"line\">        cust.NewCard(<span class=\"string\">&quot;0002&quot;</span>, <span class=\"string\">&quot;anotherpassword&quot;</span>, <span class=\"number\">1200</span>);</span><br><span class=\"line\">        cust.NewCard(<span class=\"string\">&quot;0003&quot;</span>, <span class=\"string\">&quot;isthirdpassword&quot;</span>, <span class=\"number\">4200</span>);</span><br><span class=\"line\">        cust.NewCard(<span class=\"string\">&quot;0004&quot;</span>, <span class=\"string\">&quot;isatestpassword&quot;</span>, <span class=\"number\">3600</span>);</span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(cust.toString());</span></span><br><span class=\"line\">        cust.showUSERinfo();</span><br><span class=\"line\">        cust.getMoney(<span class=\"string\">&quot;0001&quot;</span>, <span class=\"string\">&quot;thisisapassword&quot;</span>, <span class=\"number\">300</span>);</span><br><span class=\"line\">        cust.showUSERinfo();</span><br><span class=\"line\">        cust.DelCard(<span class=\"string\">&quot;0002&quot;</span>, <span class=\"string\">&quot;anotherpassword&quot;</span>);</span><br><span class=\"line\">        cust.showUSERinfo();</span><br><span class=\"line\">        cust.saveMoney(<span class=\"string\">&quot;0001&quot;</span>, <span class=\"number\">200</span>);</span><br><span class=\"line\">        cust.showUSERinfo();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","site":{"data":{}},"excerpt":"Java银行系统\n实现的功能\n * 继承抽象类people，创建customer类\n * 使用构造函数对信息初始化\n * 重载customer的toString方法\n * 实现存款、取款、注册新卡和删除卡片等操作\n\n代码实例\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n6","more":"<h3 id=\"代码实例\"><a href=\"#代码实例\" class=\"headerlink\" title=\"代码实例\"></a>代码实例</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">people</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> String gender;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> String uid;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">int</span> age;</span><br><span class=\"line\"></span><br><span class=\"line\">    people(String name, String gender, <span class=\"keyword\">int</span> age, String uid) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.gender = gender;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.age = age;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.uid = uid;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">customer</span> <span class=\"keyword\">extends</span> <span class=\"title\">people</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> String[] CardID = <span class=\"keyword\">new</span> String[<span class=\"number\">3</span>];</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> String[] password = <span class=\"keyword\">new</span> String[<span class=\"number\">3</span>];</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">double</span>[] remain = <span class=\"keyword\">new</span> <span class=\"keyword\">double</span>[<span class=\"number\">3</span>];</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">int</span> CardNum = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    customer(String name, String gender, <span class=\"keyword\">int</span> age, String uid) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(name, gender, age, uid);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//<span class=\"doctag\">TODO:</span>USER Operation</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;客户名字为：&quot;</span> + <span class=\"keyword\">super</span>.name + <span class=\"string\">&quot;，身份证为：&quot;</span> + <span class=\"keyword\">super</span>.uid + <span class=\"string\">&quot;，卡片数量为：&quot;</span> + <span class=\"keyword\">this</span>.CardNum;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">showUSERinfo</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.printf(<span class=\"string\">&quot;客户名字为：%s，性别为：%s，身份证为：%s，卡片数量为：%d\\n&quot;</span>, <span class=\"keyword\">super</span>.name, <span class=\"keyword\">super</span>.gender, <span class=\"keyword\">super</span>.uid, <span class=\"keyword\">this</span>.CardNum);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (CardNum != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;--编号--CardID--Password------------Remain&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; CardNum; i++) &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;\\t&quot;</span> + i + <span class=\"string\">&quot;\\t&quot;</span> + CardID[i] + <span class=\"string\">&quot;\\t&quot;</span> + password[i] + <span class=\"string\">&quot;\\t\\t&quot;</span> + remain[i]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//<span class=\"doctag\">TODO:</span>Card Operation</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">NewCard</span><span class=\"params\">(String ID, String password, <span class=\"keyword\">int</span> remain)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.CardNum &lt; <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.CardID[CardNum] = ID;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.password[CardNum] = password;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.remain[CardNum] = remain;</span><br><span class=\"line\">            System.out.printf(<span class=\"string\">&quot;卡片创建成功！\\n卡号为：%s，密码为%s。\\n&quot;</span>, <span class=\"keyword\">this</span>.CardID[CardNum], <span class=\"keyword\">this</span>.password[CardNum]);</span><br><span class=\"line\">            CardNum++;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;卡片数量已满，无法申请新卡片！&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">DelCard</span><span class=\"params\">(String ID, String password)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (CardNum == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;没有可用的卡！&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; CardNum; i++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (CardID[i] == ID) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.password[i] == password) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = i; j &lt; CardNum - <span class=\"number\">1</span>; j++) &#123;</span><br><span class=\"line\">                            CardID[j] = CardID[j + <span class=\"number\">1</span>];</span><br><span class=\"line\">                            <span class=\"keyword\">this</span>.password[j] = <span class=\"keyword\">this</span>.password[j + <span class=\"number\">1</span>];</span><br><span class=\"line\">                            remain[j] = remain[j + <span class=\"number\">1</span>];</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                        CardNum--;</span><br><span class=\"line\">                        System.out.println(<span class=\"string\">&quot;卡片删除成功！&quot;</span>);</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        System.out.println(<span class=\"string\">&quot;密码不正确！&quot;</span>);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">getMoney</span><span class=\"params\">(String ID, String password, <span class=\"keyword\">double</span> moneyNum)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; CardNum; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (CardID[i] == ID) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.password[i] == password) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (moneyNum &lt;= remain[i]) &#123;</span><br><span class=\"line\">                        remain[i] -= moneyNum;</span><br><span class=\"line\">                        System.out.println(<span class=\"string\">&quot;取款成功！已在&quot;</span> + CardID[i] + <span class=\"string\">&quot;取出&quot;</span> + moneyNum + <span class=\"string\">&quot;，账户还剩：&quot;</span> + remain[i]);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;密码不正确！&quot;</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;未找到此卡片，请检查输入的卡号！&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">saveMoney</span><span class=\"params\">(String ID, <span class=\"keyword\">int</span> moneyNum)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (moneyNum &lt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;无效操作！&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; CardNum; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (CardID[i] == ID) &#123;</span><br><span class=\"line\">                remain[i] += moneyNum;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;存款成功！已在&quot;</span> + CardID[i] + <span class=\"string\">&quot;存入&quot;</span> + moneyNum + <span class=\"string\">&quot;，账户还剩：&quot;</span> + remain[i]);</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;未找到此卡片，请检查输入的卡号！&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        customer cust;</span><br><span class=\"line\">        cust = <span class=\"keyword\">new</span> customer(<span class=\"string\">&quot;张三&quot;</span>, <span class=\"string\">&quot;男&quot;</span>, <span class=\"number\">23</span>, <span class=\"string\">&quot;12134&quot;</span>);</span><br><span class=\"line\">        cust.NewCard(<span class=\"string\">&quot;0001&quot;</span>, <span class=\"string\">&quot;thisisapassword&quot;</span>, <span class=\"number\">1000</span>);</span><br><span class=\"line\">        cust.NewCard(<span class=\"string\">&quot;0002&quot;</span>, <span class=\"string\">&quot;anotherpassword&quot;</span>, <span class=\"number\">1200</span>);</span><br><span class=\"line\">        cust.NewCard(<span class=\"string\">&quot;0003&quot;</span>, <span class=\"string\">&quot;isthirdpassword&quot;</span>, <span class=\"number\">4200</span>);</span><br><span class=\"line\">        cust.NewCard(<span class=\"string\">&quot;0004&quot;</span>, <span class=\"string\">&quot;isatestpassword&quot;</span>, <span class=\"number\">3600</span>);</span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(cust.toString());</span></span><br><span class=\"line\">        cust.showUSERinfo();</span><br><span class=\"line\">        cust.getMoney(<span class=\"string\">&quot;0001&quot;</span>, <span class=\"string\">&quot;thisisapassword&quot;</span>, <span class=\"number\">300</span>);</span><br><span class=\"line\">        cust.showUSERinfo();</span><br><span class=\"line\">        cust.DelCard(<span class=\"string\">&quot;0002&quot;</span>, <span class=\"string\">&quot;anotherpassword&quot;</span>);</span><br><span class=\"line\">        cust.showUSERinfo();</span><br><span class=\"line\">        cust.saveMoney(<span class=\"string\">&quot;0001&quot;</span>, <span class=\"number\">200</span>);</span><br><span class=\"line\">        cust.showUSERinfo();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Java矩阵操作","date":"2021-03-18T05:15:39.000Z","_content":"\n\n# Java 矩阵转置\n\n\n## 矩阵转置\n\n\n### 函数返回一个二维数组，而不改变原有数组\n```Java\npublic class Main {\n    public static int[][] ReserveMat(int[][] matrix) {\n        int m=matrix.length, n=matrix[0].length;\n        int[][] newMatrix=new int[m][n];\n        for (int i = 0; i < m ; i++) {\n            for (int j = 0; j < n; j++) {\n                newMatrix[i][j]=matrix[m-i-1][n-j-1];\n            }\n        }\n        return newMatrix;\n    }\n\n    public static void print(int[][] m) {\n        for (int i = 0; i < m.length; i++) {\n            for (int j = 0; j < m[i].length; j++) {\n                System.out.print(m[i][j] + \"\\t\");\n            }\n            System.out.println(\"\");\n        }\n    }\n\n    public static void main(String[] args) {\n        int[][] matrix = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};\n        System.out.println(\"原矩阵：\");\n        print(matrix);\n        int[][] newMatrix= ReserveMat(matrix);\n        System.out.println(\"转换后的矩阵：\");\n        print(newMatrix);\n        System.out.println(\"原来的的矩阵：\");\n        print(matrix);\n    }\n}\n```\n<!-- more -->\n## 矩阵相加\n\n```Java\npublic class Main {\n    public static int[][] PlusMat(int[][] matrix1, int[][] matrix2) {\n        int m1 = matrix1.length, n1 = matrix1[0].length;\n        int m2 = matrix2.length, n2 = matrix2[0].length;\n        int[][] newMatrix = new int[m1][n1];\n        if ((m1 != m2) || (n1 != n2)) {\n            System.out.println(\"两矩阵行列不一致，无法相加\");\n            return null;\n        } else {\n            for (int i = 0; i < m1; i++) {\n                for (int j = 0; j < n1; j++) {\n                    newMatrix[i][j] = matrix1[i][j] + matrix2[i][j];\n                }\n            }\n        }\n        return newMatrix;\n    }\n\n    public static void print(int[][] m) {\n        for (int i = 0; i < m.length; i++) {\n            for (int j = 0; j < m[i].length; j++) {\n                System.out.print(m[i][j] + \"\\t\");\n            }\n            System.out.println(\"\");\n        }\n    }\n\n    public static void main(String[] args) {\n        int[][] matrix1 = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};\n        int[][] matrix2 = {{2, 3, 4}, {5, 6, 7}, {8, 9, 10}};\n        int[][] newMatrix;\n        System.out.println(\"矩阵相加\\nMatrix1:\");\n        print(matrix1);\n        System.out.println(\"Matrix2\");\n        print(matrix2);\n        System.out.println(\"相加后的结果\");\n        newMatrix = PlusMat(matrix1, matrix2);\n        if (newMatrix != null) {\n            print(newMatrix);\n        }\n    }\n}\n```","source":"_posts/Java矩阵操作.md","raw":"---\ntitle: Java矩阵操作\ndate: 2021-03-18 13:15:39\ntags: Java\n---\n\n\n# Java 矩阵转置\n\n\n## 矩阵转置\n\n\n### 函数返回一个二维数组，而不改变原有数组\n```Java\npublic class Main {\n    public static int[][] ReserveMat(int[][] matrix) {\n        int m=matrix.length, n=matrix[0].length;\n        int[][] newMatrix=new int[m][n];\n        for (int i = 0; i < m ; i++) {\n            for (int j = 0; j < n; j++) {\n                newMatrix[i][j]=matrix[m-i-1][n-j-1];\n            }\n        }\n        return newMatrix;\n    }\n\n    public static void print(int[][] m) {\n        for (int i = 0; i < m.length; i++) {\n            for (int j = 0; j < m[i].length; j++) {\n                System.out.print(m[i][j] + \"\\t\");\n            }\n            System.out.println(\"\");\n        }\n    }\n\n    public static void main(String[] args) {\n        int[][] matrix = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};\n        System.out.println(\"原矩阵：\");\n        print(matrix);\n        int[][] newMatrix= ReserveMat(matrix);\n        System.out.println(\"转换后的矩阵：\");\n        print(newMatrix);\n        System.out.println(\"原来的的矩阵：\");\n        print(matrix);\n    }\n}\n```\n<!-- more -->\n## 矩阵相加\n\n```Java\npublic class Main {\n    public static int[][] PlusMat(int[][] matrix1, int[][] matrix2) {\n        int m1 = matrix1.length, n1 = matrix1[0].length;\n        int m2 = matrix2.length, n2 = matrix2[0].length;\n        int[][] newMatrix = new int[m1][n1];\n        if ((m1 != m2) || (n1 != n2)) {\n            System.out.println(\"两矩阵行列不一致，无法相加\");\n            return null;\n        } else {\n            for (int i = 0; i < m1; i++) {\n                for (int j = 0; j < n1; j++) {\n                    newMatrix[i][j] = matrix1[i][j] + matrix2[i][j];\n                }\n            }\n        }\n        return newMatrix;\n    }\n\n    public static void print(int[][] m) {\n        for (int i = 0; i < m.length; i++) {\n            for (int j = 0; j < m[i].length; j++) {\n                System.out.print(m[i][j] + \"\\t\");\n            }\n            System.out.println(\"\");\n        }\n    }\n\n    public static void main(String[] args) {\n        int[][] matrix1 = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};\n        int[][] matrix2 = {{2, 3, 4}, {5, 6, 7}, {8, 9, 10}};\n        int[][] newMatrix;\n        System.out.println(\"矩阵相加\\nMatrix1:\");\n        print(matrix1);\n        System.out.println(\"Matrix2\");\n        print(matrix2);\n        System.out.println(\"相加后的结果\");\n        newMatrix = PlusMat(matrix1, matrix2);\n        if (newMatrix != null) {\n            print(newMatrix);\n        }\n    }\n}\n```","slug":"Java矩阵操作","published":1,"updated":"2021-04-13T03:29:39.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckojvxer4000gboe2db9s6p3c","content":"<h1 id=\"Java-矩阵转置\"><a href=\"#Java-矩阵转置\" class=\"headerlink\" title=\"Java 矩阵转置\"></a>Java 矩阵转置</h1><h2 id=\"矩阵转置\"><a href=\"#矩阵转置\" class=\"headerlink\" title=\"矩阵转置\"></a>矩阵转置</h2><h3 id=\"函数返回一个二维数组，而不改变原有数组\"><a href=\"#函数返回一个二维数组，而不改变原有数组\" class=\"headerlink\" title=\"函数返回一个二维数组，而不改变原有数组\"></a>函数返回一个二维数组，而不改变原有数组</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span>[][] ReserveMat(<span class=\"keyword\">int</span>[][] matrix) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> m=matrix.length, n=matrix[<span class=\"number\">0</span>].length;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[][] newMatrix=<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[m][n];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; m ; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j++) &#123;</span><br><span class=\"line\">                newMatrix[i][j]=matrix[m-i-<span class=\"number\">1</span>][n-j-<span class=\"number\">1</span>];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> newMatrix;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">(<span class=\"keyword\">int</span>[][] m)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; m.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m[i].length; j++) &#123;</span><br><span class=\"line\">                System.out.print(m[i][j] + <span class=\"string\">&quot;\\t&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[][] matrix = &#123;&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>&#125;, &#123;<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>&#125;, &#123;<span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>&#125;&#125;;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;原矩阵：&quot;</span>);</span><br><span class=\"line\">        print(matrix);</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[][] newMatrix= ReserveMat(matrix);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;转换后的矩阵：&quot;</span>);</span><br><span class=\"line\">        print(newMatrix);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;原来的的矩阵：&quot;</span>);</span><br><span class=\"line\">        print(matrix);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n<h2 id=\"矩阵相加\"><a href=\"#矩阵相加\" class=\"headerlink\" title=\"矩阵相加\"></a>矩阵相加</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span>[][] PlusMat(<span class=\"keyword\">int</span>[][] matrix1, <span class=\"keyword\">int</span>[][] matrix2) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> m1 = matrix1.length, n1 = matrix1[<span class=\"number\">0</span>].length;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> m2 = matrix2.length, n2 = matrix2[<span class=\"number\">0</span>].length;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[][] newMatrix = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[m1][n1];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ((m1 != m2) || (n1 != n2)) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;两矩阵行列不一致，无法相加&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; m1; i++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; n1; j++) &#123;</span><br><span class=\"line\">                    newMatrix[i][j] = matrix1[i][j] + matrix2[i][j];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> newMatrix;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">(<span class=\"keyword\">int</span>[][] m)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; m.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m[i].length; j++) &#123;</span><br><span class=\"line\">                System.out.print(m[i][j] + <span class=\"string\">&quot;\\t&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[][] matrix1 = &#123;&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>&#125;, &#123;<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>&#125;, &#123;<span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>&#125;&#125;;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[][] matrix2 = &#123;&#123;<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>&#125;, &#123;<span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>&#125;, &#123;<span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>&#125;&#125;;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[][] newMatrix;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;矩阵相加\\nMatrix1:&quot;</span>);</span><br><span class=\"line\">        print(matrix1);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Matrix2&quot;</span>);</span><br><span class=\"line\">        print(matrix2);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;相加后的结果&quot;</span>);</span><br><span class=\"line\">        newMatrix = PlusMat(matrix1, matrix2);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (newMatrix != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            print(newMatrix);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","site":{"data":{}},"excerpt":"Java 矩阵转置\n矩阵转置\n函数返回一个二维数组，而不改变原有数组\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n\n\npublic class Main {\n    public static int[][] ReserveMat(int[][] matrix) {\n        int m=matrix.length, n=matrix[0].length;\n        int[][] newMatrix=new int[m][n];\n        for","more":"<h2 id=\"矩阵相加\"><a href=\"#矩阵相加\" class=\"headerlink\" title=\"矩阵相加\"></a>矩阵相加</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span>[][] PlusMat(<span class=\"keyword\">int</span>[][] matrix1, <span class=\"keyword\">int</span>[][] matrix2) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> m1 = matrix1.length, n1 = matrix1[<span class=\"number\">0</span>].length;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> m2 = matrix2.length, n2 = matrix2[<span class=\"number\">0</span>].length;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[][] newMatrix = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[m1][n1];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ((m1 != m2) || (n1 != n2)) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;两矩阵行列不一致，无法相加&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; m1; i++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; n1; j++) &#123;</span><br><span class=\"line\">                    newMatrix[i][j] = matrix1[i][j] + matrix2[i][j];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> newMatrix;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">(<span class=\"keyword\">int</span>[][] m)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; m.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m[i].length; j++) &#123;</span><br><span class=\"line\">                System.out.print(m[i][j] + <span class=\"string\">&quot;\\t&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[][] matrix1 = &#123;&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>&#125;, &#123;<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>&#125;, &#123;<span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>&#125;&#125;;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[][] matrix2 = &#123;&#123;<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>&#125;, &#123;<span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>&#125;, &#123;<span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>&#125;&#125;;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[][] newMatrix;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;矩阵相加\\nMatrix1:&quot;</span>);</span><br><span class=\"line\">        print(matrix1);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Matrix2&quot;</span>);</span><br><span class=\"line\">        print(matrix2);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;相加后的结果&quot;</span>);</span><br><span class=\"line\">        newMatrix = PlusMat(matrix1, matrix2);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (newMatrix != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            print(newMatrix);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Mac虚拟机安装指北(适用于Big Sur及Catalina)","date":"2021-03-14T02:30:55.000Z","_content":"\n# Mac虚拟机安装指北(适用于Big Sur及Catalina)\n\n### 声明\n* 本文部分内容转载自CSDN「红叶枫」的博文，遵循CC 4.0 BY-SA版权协议：<a href=\"https://blog.csdn.net/sinat_30732593/article/details/111305700\"><i>原文地址</i></a>\n* 本文部分内容转载自CSDN「繁星蓝雨」的博文，遵循CC 4.0 BY-SA版权协议：<a href=\"https://blog.csdn.net/qq_33375598/article/details/114546699\"><i>原文地址</i></a>\n* 本文仅作学习交流参考，请支持正版\n\n---\n\n## 所需工具下载地址\n<!-- more -->\n* ### PD16：适用于M1以及安装了Big Sur系统的Intel芯片Mac\n  ><a href=\"https://pan.baidu.com/s/1H3jB9ZIwKJv-TXFRwL5XKQ\">百度网盘下载</a>     提取码：4wod\n\n* ### PD15：适用于未升级至Big Sur的Intel芯片Mac\n  ><a href=\"https://pan.baidu.com/s/1fPiTG67VTgN5Xu-GRKzm6A\">百度网盘下载</a>     提取码：e5bs\n\n* ### Windows10 ISO下载\n  ><a href=\"https://www.microsoft.com/zh-cn/software-download/windows10ISO\">官网下载</a>\n  >\n  >ED2K下载(复制并打开迅雷，即可自动下载)\n  ```ed2k://|file|cn_windows_10_consumer_editions_version_20h2_updated_feb_2021_x64_dvd_8ddab99d.iso|6223781888|954B729026D6E420EE46FB2DC912F256|/```\n\n\n---\n\n## M1 Mac以及Big Sur Mac在安装PD16时可能遇到的问题\n\n\n### 网络初始化失败\n\n<img src=\"https://img-blog.csdnimg.cn/20201216234951650.png\" alt=\"问题截图\">\n\n#### 解决办法：\n* 前往 /Library/Preferences/Parallels目录\n* 打开network.desktop.xml文件\n* 找到```<UseKextless>1</UseKextless>```或```<UseKextless>-1</UseKextless>```, 修改为```<UseKextless>0</UseKextless>```\n* 如果找不到这个标记，那么就在根标记下创建它，如下：\n```xml\n<ParallelsNetworkConfig>\n\t<!-- 新增 -->\n\t<UseKextless>0</UseKextless>\n</ParallelsNetworkConfig>\n```\n\n### USB 问题\n\n#### 解决办法：\n\n* 前往/Library/Preferences/Parallels文件夹\n* 打开 dispatcher.desktop.xml文件\n* 找到```<Usb>0</Usb>```，修改为```<Usb>1</Usb>```\n\n\n### 弹窗问题\n\n>进入Windows系统后，可能会出现下面的弹窗\n\n\n<img src=\"https://img-blog.csdnimg.cn/20210308200012373.png\">\n\n#### 解决办法\n\n1. 下载配置文件：[[下载地址](https://pan.baidu.com/s/1A9G3_yuHFjFqIzN2v-enzA)]   提取码：```c7u0```\n\n\n2. 打开任务管理器，在进程一栏下拉，找到```Parallels Control Center```，选中该进程，并结束任务\n\n\n3. 前往目录```C：\\ Program Files（x86）\\ Parallels \\ Parallels Tools \\ Plugins \\```，并将下载的文件拖入到该文件夹中，在弹出的提示窗口中选择```替换```\n\n4. 重启Windows\n\n","source":"_posts/Mac虚拟机安装指北-适用于Big-Sur及Catalina.md","raw":"---\ntitle: Mac虚拟机安装指北(适用于Big Sur及Catalina)\ndate: 2021-03-14 10:30:55\ntags: 虚拟机\n---\n\n# Mac虚拟机安装指北(适用于Big Sur及Catalina)\n\n### 声明\n* 本文部分内容转载自CSDN「红叶枫」的博文，遵循CC 4.0 BY-SA版权协议：<a href=\"https://blog.csdn.net/sinat_30732593/article/details/111305700\"><i>原文地址</i></a>\n* 本文部分内容转载自CSDN「繁星蓝雨」的博文，遵循CC 4.0 BY-SA版权协议：<a href=\"https://blog.csdn.net/qq_33375598/article/details/114546699\"><i>原文地址</i></a>\n* 本文仅作学习交流参考，请支持正版\n\n---\n\n## 所需工具下载地址\n<!-- more -->\n* ### PD16：适用于M1以及安装了Big Sur系统的Intel芯片Mac\n  ><a href=\"https://pan.baidu.com/s/1H3jB9ZIwKJv-TXFRwL5XKQ\">百度网盘下载</a>     提取码：4wod\n\n* ### PD15：适用于未升级至Big Sur的Intel芯片Mac\n  ><a href=\"https://pan.baidu.com/s/1fPiTG67VTgN5Xu-GRKzm6A\">百度网盘下载</a>     提取码：e5bs\n\n* ### Windows10 ISO下载\n  ><a href=\"https://www.microsoft.com/zh-cn/software-download/windows10ISO\">官网下载</a>\n  >\n  >ED2K下载(复制并打开迅雷，即可自动下载)\n  ```ed2k://|file|cn_windows_10_consumer_editions_version_20h2_updated_feb_2021_x64_dvd_8ddab99d.iso|6223781888|954B729026D6E420EE46FB2DC912F256|/```\n\n\n---\n\n## M1 Mac以及Big Sur Mac在安装PD16时可能遇到的问题\n\n\n### 网络初始化失败\n\n<img src=\"https://img-blog.csdnimg.cn/20201216234951650.png\" alt=\"问题截图\">\n\n#### 解决办法：\n* 前往 /Library/Preferences/Parallels目录\n* 打开network.desktop.xml文件\n* 找到```<UseKextless>1</UseKextless>```或```<UseKextless>-1</UseKextless>```, 修改为```<UseKextless>0</UseKextless>```\n* 如果找不到这个标记，那么就在根标记下创建它，如下：\n```xml\n<ParallelsNetworkConfig>\n\t<!-- 新增 -->\n\t<UseKextless>0</UseKextless>\n</ParallelsNetworkConfig>\n```\n\n### USB 问题\n\n#### 解决办法：\n\n* 前往/Library/Preferences/Parallels文件夹\n* 打开 dispatcher.desktop.xml文件\n* 找到```<Usb>0</Usb>```，修改为```<Usb>1</Usb>```\n\n\n### 弹窗问题\n\n>进入Windows系统后，可能会出现下面的弹窗\n\n\n<img src=\"https://img-blog.csdnimg.cn/20210308200012373.png\">\n\n#### 解决办法\n\n1. 下载配置文件：[[下载地址](https://pan.baidu.com/s/1A9G3_yuHFjFqIzN2v-enzA)]   提取码：```c7u0```\n\n\n2. 打开任务管理器，在进程一栏下拉，找到```Parallels Control Center```，选中该进程，并结束任务\n\n\n3. 前往目录```C：\\ Program Files（x86）\\ Parallels \\ Parallels Tools \\ Plugins \\```，并将下载的文件拖入到该文件夹中，在弹出的提示窗口中选择```替换```\n\n4. 重启Windows\n\n","slug":"Mac虚拟机安装指北-适用于Big-Sur及Catalina","published":1,"updated":"2021-04-13T03:29:47.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckojvxer5000iboe26af791sg","content":"<h1 id=\"Mac虚拟机安装指北-适用于Big-Sur及Catalina\"><a href=\"#Mac虚拟机安装指北-适用于Big-Sur及Catalina\" class=\"headerlink\" title=\"Mac虚拟机安装指北(适用于Big Sur及Catalina)\"></a>Mac虚拟机安装指北(适用于Big Sur及Catalina)</h1><h3 id=\"声明\"><a href=\"#声明\" class=\"headerlink\" title=\"声明\"></a>声明</h3><ul>\n<li>本文部分内容转载自CSDN「红叶枫」的博文，遵循CC 4.0 BY-SA版权协议：<a href=\"https://blog.csdn.net/sinat_30732593/article/details/111305700\"><i>原文地址</i></a></li>\n<li>本文部分内容转载自CSDN「繁星蓝雨」的博文，遵循CC 4.0 BY-SA版权协议：<a href=\"https://blog.csdn.net/qq_33375598/article/details/114546699\"><i>原文地址</i></a></li>\n<li>本文仅作学习交流参考，请支持正版</li>\n</ul>\n<hr>\n<h2 id=\"所需工具下载地址\"><a href=\"#所需工具下载地址\" class=\"headerlink\" title=\"所需工具下载地址\"></a>所需工具下载地址</h2><span id=\"more\"></span>\n<ul>\n<li><h3 id=\"PD16：适用于M1以及安装了Big-Sur系统的Intel芯片Mac\"><a href=\"#PD16：适用于M1以及安装了Big-Sur系统的Intel芯片Mac\" class=\"headerlink\" title=\"PD16：适用于M1以及安装了Big Sur系统的Intel芯片Mac\"></a>PD16：适用于M1以及安装了Big Sur系统的Intel芯片Mac</h3><blockquote>\n<p><a href=\"https://pan.baidu.com/s/1H3jB9ZIwKJv-TXFRwL5XKQ\">百度网盘下载</a>     提取码：4wod</p>\n</blockquote>\n</li>\n<li><h3 id=\"PD15：适用于未升级至Big-Sur的Intel芯片Mac\"><a href=\"#PD15：适用于未升级至Big-Sur的Intel芯片Mac\" class=\"headerlink\" title=\"PD15：适用于未升级至Big Sur的Intel芯片Mac\"></a>PD15：适用于未升级至Big Sur的Intel芯片Mac</h3><blockquote>\n<p><a href=\"https://pan.baidu.com/s/1fPiTG67VTgN5Xu-GRKzm6A\">百度网盘下载</a>     提取码：e5bs</p>\n</blockquote>\n</li>\n<li><h3 id=\"Windows10-ISO下载\"><a href=\"#Windows10-ISO下载\" class=\"headerlink\" title=\"Windows10 ISO下载\"></a>Windows10 ISO下载</h3><blockquote>\n<p><a href=\"https://www.microsoft.com/zh-cn/software-download/windows10ISO\">官网下载</a></p>\n<p>ED2K下载(复制并打开迅雷，即可自动下载)<br><code>ed2k://|file|cn_windows_10_consumer_editions_version_20h2_updated_feb_2021_x64_dvd_8ddab99d.iso|6223781888|954B729026D6E420EE46FB2DC912F256|/</code></p>\n</blockquote>\n</li>\n</ul>\n<hr>\n<h2 id=\"M1-Mac以及Big-Sur-Mac在安装PD16时可能遇到的问题\"><a href=\"#M1-Mac以及Big-Sur-Mac在安装PD16时可能遇到的问题\" class=\"headerlink\" title=\"M1 Mac以及Big Sur Mac在安装PD16时可能遇到的问题\"></a>M1 Mac以及Big Sur Mac在安装PD16时可能遇到的问题</h2><h3 id=\"网络初始化失败\"><a href=\"#网络初始化失败\" class=\"headerlink\" title=\"网络初始化失败\"></a>网络初始化失败</h3><img src=\"https://img-blog.csdnimg.cn/20201216234951650.png\" alt=\"问题截图\">\n\n<h4 id=\"解决办法：\"><a href=\"#解决办法：\" class=\"headerlink\" title=\"解决办法：\"></a>解决办法：</h4><ul>\n<li>前往 /Library/Preferences/Parallels目录</li>\n<li>打开network.desktop.xml文件</li>\n<li>找到<code>&lt;UseKextless&gt;1&lt;/UseKextless&gt;</code>或<code>&lt;UseKextless&gt;-1&lt;/UseKextless&gt;</code>, 修改为<code>&lt;UseKextless&gt;0&lt;/UseKextless&gt;</code></li>\n<li>如果找不到这个标记，那么就在根标记下创建它，如下：<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ParallelsNetworkConfig</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"comment\">&lt;!-- 新增 --&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">UseKextless</span>&gt;</span>0<span class=\"tag\">&lt;/<span class=\"name\">UseKextless</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ParallelsNetworkConfig</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"USB-问题\"><a href=\"#USB-问题\" class=\"headerlink\" title=\"USB 问题\"></a>USB 问题</h3><h4 id=\"解决办法：-1\"><a href=\"#解决办法：-1\" class=\"headerlink\" title=\"解决办法：\"></a>解决办法：</h4><ul>\n<li>前往/Library/Preferences/Parallels文件夹</li>\n<li>打开 dispatcher.desktop.xml文件</li>\n<li>找到<code>&lt;Usb&gt;0&lt;/Usb&gt;</code>，修改为<code>&lt;Usb&gt;1&lt;/Usb&gt;</code></li>\n</ul>\n<h3 id=\"弹窗问题\"><a href=\"#弹窗问题\" class=\"headerlink\" title=\"弹窗问题\"></a>弹窗问题</h3><blockquote>\n<p>进入Windows系统后，可能会出现下面的弹窗</p>\n</blockquote>\n<img src=\"https://img-blog.csdnimg.cn/20210308200012373.png\">\n\n<h4 id=\"解决办法\"><a href=\"#解决办法\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h4><ol>\n<li>下载配置文件：[<a href=\"https://pan.baidu.com/s/1A9G3_yuHFjFqIzN2v-enzA\">下载地址</a>]   提取码：<code>c7u0</code></li>\n</ol>\n<ol start=\"2\">\n<li>打开任务管理器，在进程一栏下拉，找到<code>Parallels Control Center</code>，选中该进程，并结束任务</li>\n</ol>\n<ol start=\"3\">\n<li><p>前往目录<code>C：\\ Program Files（x86）\\ Parallels \\ Parallels Tools \\ Plugins \\</code>，并将下载的文件拖入到该文件夹中，在弹出的提示窗口中选择<code>替换</code></p>\n</li>\n<li><p>重启Windows</p>\n</li>\n</ol>\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","site":{"data":{}},"excerpt":"Mac虚拟机安装指北(适用于Big Sur及Catalina)\n声明\n * 本文部分内容转载自CSDN「红叶枫」的博文，遵循CC 4.0 BY-SA版权协议：原文地址\n * 本文部分内容转载自CSDN「繁星蓝雨」的博文，遵循CC 4.0 BY-SA版权协议：原文地址\n * 本文仅作学习交流参考，请支持正版\n\n\n\n\n所需工具下载地址\n * PD16：适用于M1以及安装了Big Sur系统的Intel芯片Mac\n   百度网盘下载 提取码：4wod\n   \n   \n * PD15：适用于未升级至Big Sur的Intel芯片Mac\n   百度网盘下载 提取码：e5bs\n   \n   \n * Win","more":"<ul>\n<li><h3 id=\"PD16：适用于M1以及安装了Big-Sur系统的Intel芯片Mac\"><a href=\"#PD16：适用于M1以及安装了Big-Sur系统的Intel芯片Mac\" class=\"headerlink\" title=\"PD16：适用于M1以及安装了Big Sur系统的Intel芯片Mac\"></a>PD16：适用于M1以及安装了Big Sur系统的Intel芯片Mac</h3><blockquote>\n<p><a href=\"https://pan.baidu.com/s/1H3jB9ZIwKJv-TXFRwL5XKQ\">百度网盘下载</a>     提取码：4wod</p>\n</blockquote>\n</li>\n<li><h3 id=\"PD15：适用于未升级至Big-Sur的Intel芯片Mac\"><a href=\"#PD15：适用于未升级至Big-Sur的Intel芯片Mac\" class=\"headerlink\" title=\"PD15：适用于未升级至Big Sur的Intel芯片Mac\"></a>PD15：适用于未升级至Big Sur的Intel芯片Mac</h3><blockquote>\n<p><a href=\"https://pan.baidu.com/s/1fPiTG67VTgN5Xu-GRKzm6A\">百度网盘下载</a>     提取码：e5bs</p>\n</blockquote>\n</li>\n<li><h3 id=\"Windows10-ISO下载\"><a href=\"#Windows10-ISO下载\" class=\"headerlink\" title=\"Windows10 ISO下载\"></a>Windows10 ISO下载</h3><blockquote>\n<p><a href=\"https://www.microsoft.com/zh-cn/software-download/windows10ISO\">官网下载</a></p>\n<p>ED2K下载(复制并打开迅雷，即可自动下载)<br><code>ed2k://|file|cn_windows_10_consumer_editions_version_20h2_updated_feb_2021_x64_dvd_8ddab99d.iso|6223781888|954B729026D6E420EE46FB2DC912F256|/</code></p>\n</blockquote>\n</li>\n</ul>\n<hr>\n<h2 id=\"M1-Mac以及Big-Sur-Mac在安装PD16时可能遇到的问题\"><a href=\"#M1-Mac以及Big-Sur-Mac在安装PD16时可能遇到的问题\" class=\"headerlink\" title=\"M1 Mac以及Big Sur Mac在安装PD16时可能遇到的问题\"></a>M1 Mac以及Big Sur Mac在安装PD16时可能遇到的问题</h2><h3 id=\"网络初始化失败\"><a href=\"#网络初始化失败\" class=\"headerlink\" title=\"网络初始化失败\"></a>网络初始化失败</h3><img src=\"https://img-blog.csdnimg.cn/20201216234951650.png\" alt=\"问题截图\">\n\n<h4 id=\"解决办法：\"><a href=\"#解决办法：\" class=\"headerlink\" title=\"解决办法：\"></a>解决办法：</h4><ul>\n<li>前往 /Library/Preferences/Parallels目录</li>\n<li>打开network.desktop.xml文件</li>\n<li>找到<code>&lt;UseKextless&gt;1&lt;/UseKextless&gt;</code>或<code>&lt;UseKextless&gt;-1&lt;/UseKextless&gt;</code>, 修改为<code>&lt;UseKextless&gt;0&lt;/UseKextless&gt;</code></li>\n<li>如果找不到这个标记，那么就在根标记下创建它，如下：<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ParallelsNetworkConfig</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"comment\">&lt;!-- 新增 --&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">UseKextless</span>&gt;</span>0<span class=\"tag\">&lt;/<span class=\"name\">UseKextless</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ParallelsNetworkConfig</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"USB-问题\"><a href=\"#USB-问题\" class=\"headerlink\" title=\"USB 问题\"></a>USB 问题</h3><h4 id=\"解决办法：-1\"><a href=\"#解决办法：-1\" class=\"headerlink\" title=\"解决办法：\"></a>解决办法：</h4><ul>\n<li>前往/Library/Preferences/Parallels文件夹</li>\n<li>打开 dispatcher.desktop.xml文件</li>\n<li>找到<code>&lt;Usb&gt;0&lt;/Usb&gt;</code>，修改为<code>&lt;Usb&gt;1&lt;/Usb&gt;</code></li>\n</ul>\n<h3 id=\"弹窗问题\"><a href=\"#弹窗问题\" class=\"headerlink\" title=\"弹窗问题\"></a>弹窗问题</h3><blockquote>\n<p>进入Windows系统后，可能会出现下面的弹窗</p>\n</blockquote>\n<img src=\"https://img-blog.csdnimg.cn/20210308200012373.png\">\n\n<h4 id=\"解决办法\"><a href=\"#解决办法\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h4><ol>\n<li>下载配置文件：[<a href=\"https://pan.baidu.com/s/1A9G3_yuHFjFqIzN2v-enzA\">下载地址</a>]   提取码：<code>c7u0</code></li>\n</ol>\n<ol start=\"2\">\n<li>打开任务管理器，在进程一栏下拉，找到<code>Parallels Control Center</code>，选中该进程，并结束任务</li>\n</ol>\n<ol start=\"3\">\n<li><p>前往目录<code>C：\\ Program Files（x86）\\ Parallels \\ Parallels Tools \\ Plugins \\</code>，并将下载的文件拖入到该文件夹中，在弹出的提示窗口中选择<code>替换</code></p>\n</li>\n<li><p>重启Windows</p>\n</li>\n</ol>"},{"title":"Matlab实验1-1","date":"2021-03-03T05:27:52.000Z","_content":"\n## Matlab实验1-1\n\n\n\n1. 编写Script命令文件，画出振荡曲线{% katex %}y =e ^ {- \\frac{b}{3}}sin3t{% endkatex %}及其包络线{% katex %}y_0=e^{- \\frac{t}{3}} {% endkatex %}，其中t的取值范围是{% katex %}[0,\\pi]{% endkatex %}.\n\n```Matlab\nclc;\nclear;\nt=0:pi/50:4*pi;\ny=exp(-t/3).*sin(3*t);\ny0=exp(-t/3);\nplot(t,y,'r',t,y0,':b',t,-y0,':b');\n```\n<!-- more -->\n<center><img src=\"https://s3.ax1x.com/2021/03/13/6wN3FK.jpg\" width=\"50%\"></center>\n\n2. 编写函数并做调用测试，其中{% katex %}f(x)=\\begin{cases}\nlnx + 1 &\\text{, } x>1 \\\\\n\\sqrt {2x} &\\text{, } 0 < x \\leqslant 1 \\\\\n|x| &\\text{, } x \\leqslant 0 \\\\\n\\end{cases}{% endkatex %}\n\n\n```Matlab\nfunction y = MyFun(x)\nif x > 1\n    y = ln(x) + 1;\nelseif x > 0 && x <= 1\n    y = sqrt(2 * x);\nelse\n    y = abs(x);\nend\n```\n\n3. 计算表达式{% katex %}e^{10} + 20^2 \\log_{2} {5} \\div tan20{% endkatex %}的值\n\n```Matlab\nformat long;\nexp(10) + (20^2 * log2(5)) / tan(20)\n```\n\n>运算结果\n\n```Matlab\n>> MyCalculate  \n\nans =\n\n     2.244162199550501e+04\n```\n\n4. 编写函数{% katex %} myf(x)= tan{(-x^2)}arccos{(x)}{% endkatex %}，并测试{% katex %}myf(0.25){% endkatex %}，{% katex %}myf(0.78){% endkatex %}的值.\n\n```Matlab\nfunction y=myf(x)\n    y=tan(-(x^2))*acos(x);\nend\n```\n>运算结果\n\n```Matlab\n>> myf(0.25)    \n\nans =\n\n  -0.082489690911370\n\n>> myf(0.78)    \n\nans =\n\n  -0.470951904834096\n```\n\n5. 测试矩阵的一些生成和操作函数，如diag, magic, zeros, ones, eye, tril, triu, rand, 要求把测试的过程和结果放入实验报告.\n\n```略```\n\n6. 测试数组的生成函数，如from:step:to,linspace，要求把测试的过程和结果放入实验报告.\n\n```Matlab\n>> A=2:2:100\nA =\n  Columns 1 through 21\n     2     4     6     8    10    12    14    16    18    20    22    24    26    28    30    32    34    36    38    40    42\n  Columns 22 through 42\n    44    46    48    50    52    54    56    58    60    62    64    66    68    70    72    74    76    78    80    82    84\n  Columns 43 through 50\n    86    88    90    92    94    96    98   100\n>> B=linspace(5,100,20)\nB =\n     5    10    15    20    25    30    35    40    45    50    55    60    65    70    75    80    85    90    95   100\n```\n\n7. 测试矩阵或数字的点运算，要求把测试的过程和结果放入实验报告.\n   \n```Matlab\nA = randi(5, 3, 4) %randi(max,row,col)\nB = magic(4)\nC = eye(3, 4)\n\nD = A * B\nE = A .* C\n```\n>运算结果\n```Matlab\n>> TestCalculate\n\nA =\n\n     4     2     4     1\n     4     4     1     1\n     4     1     2     5\n\n\nB =\n\n    16     2     3    13\n     5    11    10     8\n     9     7     6    12\n     4    14    15     1\n\n\nC =\n\n     1     0     0     0\n     0     1     0     0\n     0     0     1     0\n\n\nD =\n\n   114    72    71   117\n    97    73    73    97\n   107   103   109    89\n\n\nE =\n\n     4     0     0     0\n     0     4     0     0\n     0     0     2     0\n```\n\n---\n\n\n### <center>Next⬇️</center>\n\n<center><a href=\"https://lhxone.top/2021/03/04/Matlab实验1-2/\">Matlab练习1-2 🍺</a></center>","source":"_posts/Matlab实验1-1.md","raw":"---\ntitle: Matlab实验1-1\ndate: 2021-03-3 13:27:52\ntags: Matlab\n---\n\n## Matlab实验1-1\n\n\n\n1. 编写Script命令文件，画出振荡曲线{% katex %}y =e ^ {- \\frac{b}{3}}sin3t{% endkatex %}及其包络线{% katex %}y_0=e^{- \\frac{t}{3}} {% endkatex %}，其中t的取值范围是{% katex %}[0,\\pi]{% endkatex %}.\n\n```Matlab\nclc;\nclear;\nt=0:pi/50:4*pi;\ny=exp(-t/3).*sin(3*t);\ny0=exp(-t/3);\nplot(t,y,'r',t,y0,':b',t,-y0,':b');\n```\n<!-- more -->\n<center><img src=\"https://s3.ax1x.com/2021/03/13/6wN3FK.jpg\" width=\"50%\"></center>\n\n2. 编写函数并做调用测试，其中{% katex %}f(x)=\\begin{cases}\nlnx + 1 &\\text{, } x>1 \\\\\n\\sqrt {2x} &\\text{, } 0 < x \\leqslant 1 \\\\\n|x| &\\text{, } x \\leqslant 0 \\\\\n\\end{cases}{% endkatex %}\n\n\n```Matlab\nfunction y = MyFun(x)\nif x > 1\n    y = ln(x) + 1;\nelseif x > 0 && x <= 1\n    y = sqrt(2 * x);\nelse\n    y = abs(x);\nend\n```\n\n3. 计算表达式{% katex %}e^{10} + 20^2 \\log_{2} {5} \\div tan20{% endkatex %}的值\n\n```Matlab\nformat long;\nexp(10) + (20^2 * log2(5)) / tan(20)\n```\n\n>运算结果\n\n```Matlab\n>> MyCalculate  \n\nans =\n\n     2.244162199550501e+04\n```\n\n4. 编写函数{% katex %} myf(x)= tan{(-x^2)}arccos{(x)}{% endkatex %}，并测试{% katex %}myf(0.25){% endkatex %}，{% katex %}myf(0.78){% endkatex %}的值.\n\n```Matlab\nfunction y=myf(x)\n    y=tan(-(x^2))*acos(x);\nend\n```\n>运算结果\n\n```Matlab\n>> myf(0.25)    \n\nans =\n\n  -0.082489690911370\n\n>> myf(0.78)    \n\nans =\n\n  -0.470951904834096\n```\n\n5. 测试矩阵的一些生成和操作函数，如diag, magic, zeros, ones, eye, tril, triu, rand, 要求把测试的过程和结果放入实验报告.\n\n```略```\n\n6. 测试数组的生成函数，如from:step:to,linspace，要求把测试的过程和结果放入实验报告.\n\n```Matlab\n>> A=2:2:100\nA =\n  Columns 1 through 21\n     2     4     6     8    10    12    14    16    18    20    22    24    26    28    30    32    34    36    38    40    42\n  Columns 22 through 42\n    44    46    48    50    52    54    56    58    60    62    64    66    68    70    72    74    76    78    80    82    84\n  Columns 43 through 50\n    86    88    90    92    94    96    98   100\n>> B=linspace(5,100,20)\nB =\n     5    10    15    20    25    30    35    40    45    50    55    60    65    70    75    80    85    90    95   100\n```\n\n7. 测试矩阵或数字的点运算，要求把测试的过程和结果放入实验报告.\n   \n```Matlab\nA = randi(5, 3, 4) %randi(max,row,col)\nB = magic(4)\nC = eye(3, 4)\n\nD = A * B\nE = A .* C\n```\n>运算结果\n```Matlab\n>> TestCalculate\n\nA =\n\n     4     2     4     1\n     4     4     1     1\n     4     1     2     5\n\n\nB =\n\n    16     2     3    13\n     5    11    10     8\n     9     7     6    12\n     4    14    15     1\n\n\nC =\n\n     1     0     0     0\n     0     1     0     0\n     0     0     1     0\n\n\nD =\n\n   114    72    71   117\n    97    73    73    97\n   107   103   109    89\n\n\nE =\n\n     4     0     0     0\n     0     4     0     0\n     0     0     2     0\n```\n\n---\n\n\n### <center>Next⬇️</center>\n\n<center><a href=\"https://lhxone.top/2021/03/04/Matlab实验1-2/\">Matlab练习1-2 🍺</a></center>","slug":"Matlab实验1-1","published":1,"updated":"2021-04-13T03:29:57.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckojvxer6000lboe2177j8no5","content":"<h2 id=\"Matlab实验1-1\"><a href=\"#Matlab实验1-1\" class=\"headerlink\" title=\"Matlab实验1-1\"></a>Matlab实验1-1</h2><ol>\n<li>编写Script命令文件，画出振荡曲线<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mo>=</mo><msup><mi>e</mi><mrow><mo>−</mo><mfrac><mi>b</mi><mn>3</mn></mfrac></mrow></msup><mi>s</mi><mi>i</mi><mi>n</mi><mn>3</mn><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">y =e ^ {- \\frac{b}{3}}sin3t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.97902em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.97902em;\"><span style=\"top:-3.363em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8800285714285714em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span></span></span></span><span style=\"top:-3.2255000000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.384em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.344em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span></span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">3</span><span class=\"mord mathnormal\">t</span></span></span></span>及其包络线<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>y</mi><mn>0</mn></msub><mo>=</mo><msup><mi>e</mi><mrow><mo>−</mo><mfrac><mi>t</mi><mn>3</mn></mfrac></mrow></msup></mrow><annotation encoding=\"application/x-tex\">y_0=e^{- \\frac{t}{3}} </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9393400000000001em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9393400000000001em;\"><span style=\"top:-3.363em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8233428571428572em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span></span></span></span><span style=\"top:-3.2255000000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.384em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.344em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span></span></span></span></span></span></span></span></span></span></span></span>，其中t的取值范围是<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mi>π</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[0,\\pi]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mclose\">]</span></span></span></span>.</li>\n</ol>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clc;</span><br><span class=\"line\">clear;</span><br><span class=\"line\">t=<span class=\"number\">0</span>:<span class=\"built_in\">pi</span>/<span class=\"number\">50</span>:<span class=\"number\">4</span>*<span class=\"built_in\">pi</span>;</span><br><span class=\"line\">y=<span class=\"built_in\">exp</span>(-t/<span class=\"number\">3</span>).*<span class=\"built_in\">sin</span>(<span class=\"number\">3</span>*t);</span><br><span class=\"line\">y0=<span class=\"built_in\">exp</span>(-t/<span class=\"number\">3</span>);</span><br><span class=\"line\"><span class=\"built_in\">plot</span>(t,y,<span class=\"string\">&#x27;r&#x27;</span>,t,y0,<span class=\"string\">&#x27;:b&#x27;</span>,t,-y0,<span class=\"string\">&#x27;:b&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n<center><img src=\"https://s3.ax1x.com/2021/03/13/6wN3FK.jpg\" width=\"50%\"></center>\n\n<ol start=\"2\">\n<li>编写函数并做调用测试，其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.3599999999999999em\" columnalign=\"left left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>l</mi><mi>n</mi><mi>x</mi><mo>+</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mtext>, </mtext><mi>x</mi><mo>&gt;</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msqrt><mrow><mn>2</mn><mi>x</mi></mrow></msqrt></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mtext>, </mtext><mn>0</mn><mo>&lt;</mo><mi>x</mi><mo>⩽</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mi mathvariant=\"normal\">∣</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mtext>, </mtext><mi>x</mi><mo>⩽</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding=\"application/x-tex\">f(x)=\\begin{cases}\nlnx + 1 &amp;\\text{, } x&gt;1 \\\\\n\\sqrt {2x} &amp;\\text{, } 0 &lt; x \\leqslant 1 \\\\\n|x| &amp;\\text{, } x \\leqslant 0 \\\\\n\\end{cases}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:4.32em;vertical-align:-1.9099999999999997em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.35002em;\"><span style=\"top:-2.19999em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎩</span></span></span><span style=\"top:-2.19499em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-2.20499em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-3.15001em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎨</span></span></span><span style=\"top:-4.2950099999999996em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-4.30501em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-4.60002em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎧</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8500199999999998em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.41em;\"><span style=\"top:-4.41em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-2.97em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.90722em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\">2</span><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-2.86722em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.13278em;\"><span></span></span></span></span></span></span></span><span style=\"top:-1.5300000000000002em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"mord mathnormal\">x</span><span class=\"mord\">∣</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.9099999999999997em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:1em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.41em;\"><span style=\"top:-4.41em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">, </span></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-2.97em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">, </span></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-1.5300000000000002em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">, </span></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.9099999999999997em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></li>\n</ol>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">y</span> = <span class=\"title\">MyFun</span><span class=\"params\">(x)</span></span></span><br><span class=\"line\"><span class=\"keyword\">if</span> x &gt; <span class=\"number\">1</span></span><br><span class=\"line\">    y = ln(x) + <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">elseif</span> x &gt; <span class=\"number\">0</span> &amp;&amp; x &lt;= <span class=\"number\">1</span></span><br><span class=\"line\">    y = <span class=\"built_in\">sqrt</span>(<span class=\"number\">2</span> * x);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    y = <span class=\"built_in\">abs</span>(x);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>计算表达式<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>e</mi><mn>10</mn></msup><mo>+</mo><mn>2</mn><msup><mn>0</mn><mn>2</mn></msup><msub><mo><mi>log</mi><mo>⁡</mo></mo><mn>2</mn></msub><mn>5</mn><mo>÷</mo><mi>t</mi><mi>a</mi><mi>n</mi><mn>20</mn></mrow><annotation encoding=\"application/x-tex\">e^{10} + 20^2 \\log_{2} {5} \\div tan20</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.897438em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mord mtight\">0</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0582479999999999em;vertical-align:-0.24414em;\"></span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.20696799999999996em;\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24414em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\">5</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">÷</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">2</span><span class=\"mord\">0</span></span></span></span>的值</li>\n</ol>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">format long;</span><br><span class=\"line\"><span class=\"built_in\">exp</span>(<span class=\"number\">10</span>) + (<span class=\"number\">20</span>^<span class=\"number\">2</span> * <span class=\"built_in\">log2</span>(<span class=\"number\">5</span>)) / <span class=\"built_in\">tan</span>(<span class=\"number\">20</span>)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>运算结果</p>\n</blockquote>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt; MyCalculate  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">ans</span> =</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"number\">2.244162199550501e+04</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>编写函数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mi>y</mi><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>t</mi><mi>a</mi><mi>n</mi><mrow><mo stretchy=\"false\">(</mo><mo>−</mo><msup><mi>x</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><mi>a</mi><mi>r</mi><mi>c</mi><mi>c</mi><mi>o</mi><mi>s</mi><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">myf(x)= tan{(-x^2)}arccos{(x)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span></span>，并测试<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mi>y</mi><mi>f</mi><mo stretchy=\"false\">(</mo><mn>0.25</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">myf(0.25)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mord\">.</span><span class=\"mord\">2</span><span class=\"mord\">5</span><span class=\"mclose\">)</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mi>y</mi><mi>f</mi><mo stretchy=\"false\">(</mo><mn>0.78</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">myf(0.78)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mord\">.</span><span class=\"mord\">7</span><span class=\"mord\">8</span><span class=\"mclose\">)</span></span></span></span>的值.</li>\n</ol>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">y</span>=<span class=\"title\">myf</span><span class=\"params\">(x)</span></span></span><br><span class=\"line\">    y=<span class=\"built_in\">tan</span>(-(x^<span class=\"number\">2</span>))*<span class=\"built_in\">acos</span>(x);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>运算结果</p>\n</blockquote>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt; myf(<span class=\"number\">0.25</span>)    </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">ans</span> =</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"number\">-0.082489690911370</span></span><br><span class=\"line\"></span><br><span class=\"line\">&gt;&gt; myf(<span class=\"number\">0.78</span>)    </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">ans</span> =</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"number\">-0.470951904834096</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"5\">\n<li>测试矩阵的一些生成和操作函数，如diag, magic, zeros, ones, eye, tril, triu, rand, 要求把测试的过程和结果放入实验报告.</li>\n</ol>\n<p><code>略</code></p>\n<ol start=\"6\">\n<li>测试数组的生成函数，如from:step:to,linspace，要求把测试的过程和结果放入实验报告.</li>\n</ol>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt; A=<span class=\"number\">2</span>:<span class=\"number\">2</span>:<span class=\"number\">100</span></span><br><span class=\"line\">A =</span><br><span class=\"line\">  Columns <span class=\"number\">1</span> through <span class=\"number\">21</span></span><br><span class=\"line\">     <span class=\"number\">2</span>     <span class=\"number\">4</span>     <span class=\"number\">6</span>     <span class=\"number\">8</span>    <span class=\"number\">10</span>    <span class=\"number\">12</span>    <span class=\"number\">14</span>    <span class=\"number\">16</span>    <span class=\"number\">18</span>    <span class=\"number\">20</span>    <span class=\"number\">22</span>    <span class=\"number\">24</span>    <span class=\"number\">26</span>    <span class=\"number\">28</span>    <span class=\"number\">30</span>    <span class=\"number\">32</span>    <span class=\"number\">34</span>    <span class=\"number\">36</span>    <span class=\"number\">38</span>    <span class=\"number\">40</span>    <span class=\"number\">42</span></span><br><span class=\"line\">  Columns <span class=\"number\">22</span> through <span class=\"number\">42</span></span><br><span class=\"line\">    <span class=\"number\">44</span>    <span class=\"number\">46</span>    <span class=\"number\">48</span>    <span class=\"number\">50</span>    <span class=\"number\">52</span>    <span class=\"number\">54</span>    <span class=\"number\">56</span>    <span class=\"number\">58</span>    <span class=\"number\">60</span>    <span class=\"number\">62</span>    <span class=\"number\">64</span>    <span class=\"number\">66</span>    <span class=\"number\">68</span>    <span class=\"number\">70</span>    <span class=\"number\">72</span>    <span class=\"number\">74</span>    <span class=\"number\">76</span>    <span class=\"number\">78</span>    <span class=\"number\">80</span>    <span class=\"number\">82</span>    <span class=\"number\">84</span></span><br><span class=\"line\">  Columns <span class=\"number\">43</span> through <span class=\"number\">50</span></span><br><span class=\"line\">    <span class=\"number\">86</span>    <span class=\"number\">88</span>    <span class=\"number\">90</span>    <span class=\"number\">92</span>    <span class=\"number\">94</span>    <span class=\"number\">96</span>    <span class=\"number\">98</span>   <span class=\"number\">100</span></span><br><span class=\"line\">&gt;&gt; B=<span class=\"built_in\">linspace</span>(<span class=\"number\">5</span>,<span class=\"number\">100</span>,<span class=\"number\">20</span>)</span><br><span class=\"line\">B =</span><br><span class=\"line\">     <span class=\"number\">5</span>    <span class=\"number\">10</span>    <span class=\"number\">15</span>    <span class=\"number\">20</span>    <span class=\"number\">25</span>    <span class=\"number\">30</span>    <span class=\"number\">35</span>    <span class=\"number\">40</span>    <span class=\"number\">45</span>    <span class=\"number\">50</span>    <span class=\"number\">55</span>    <span class=\"number\">60</span>    <span class=\"number\">65</span>    <span class=\"number\">70</span>    <span class=\"number\">75</span>    <span class=\"number\">80</span>    <span class=\"number\">85</span>    <span class=\"number\">90</span>    <span class=\"number\">95</span>   <span class=\"number\">100</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"7\">\n<li>测试矩阵或数字的点运算，要求把测试的过程和结果放入实验报告.</li>\n</ol>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A = randi(<span class=\"number\">5</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>) <span class=\"comment\">%randi(max,row,col)</span></span><br><span class=\"line\">B = <span class=\"built_in\">magic</span>(<span class=\"number\">4</span>)</span><br><span class=\"line\">C = <span class=\"built_in\">eye</span>(<span class=\"number\">3</span>, <span class=\"number\">4</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">D = A * B</span><br><span class=\"line\">E = A .* C</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>运算结果</p>\n</blockquote>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt; TestCalculate</span><br><span class=\"line\"></span><br><span class=\"line\">A =</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"number\">4</span>     <span class=\"number\">2</span>     <span class=\"number\">4</span>     <span class=\"number\">1</span></span><br><span class=\"line\">     <span class=\"number\">4</span>     <span class=\"number\">4</span>     <span class=\"number\">1</span>     <span class=\"number\">1</span></span><br><span class=\"line\">     <span class=\"number\">4</span>     <span class=\"number\">1</span>     <span class=\"number\">2</span>     <span class=\"number\">5</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">B =</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"number\">16</span>     <span class=\"number\">2</span>     <span class=\"number\">3</span>    <span class=\"number\">13</span></span><br><span class=\"line\">     <span class=\"number\">5</span>    <span class=\"number\">11</span>    <span class=\"number\">10</span>     <span class=\"number\">8</span></span><br><span class=\"line\">     <span class=\"number\">9</span>     <span class=\"number\">7</span>     <span class=\"number\">6</span>    <span class=\"number\">12</span></span><br><span class=\"line\">     <span class=\"number\">4</span>    <span class=\"number\">14</span>    <span class=\"number\">15</span>     <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">C =</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"number\">1</span>     <span class=\"number\">0</span>     <span class=\"number\">0</span>     <span class=\"number\">0</span></span><br><span class=\"line\">     <span class=\"number\">0</span>     <span class=\"number\">1</span>     <span class=\"number\">0</span>     <span class=\"number\">0</span></span><br><span class=\"line\">     <span class=\"number\">0</span>     <span class=\"number\">0</span>     <span class=\"number\">1</span>     <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">D =</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"number\">114</span>    <span class=\"number\">72</span>    <span class=\"number\">71</span>   <span class=\"number\">117</span></span><br><span class=\"line\">    <span class=\"number\">97</span>    <span class=\"number\">73</span>    <span class=\"number\">73</span>    <span class=\"number\">97</span></span><br><span class=\"line\">   <span class=\"number\">107</span>   <span class=\"number\">103</span>   <span class=\"number\">109</span>    <span class=\"number\">89</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">E =</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"number\">4</span>     <span class=\"number\">0</span>     <span class=\"number\">0</span>     <span class=\"number\">0</span></span><br><span class=\"line\">     <span class=\"number\">0</span>     <span class=\"number\">4</span>     <span class=\"number\">0</span>     <span class=\"number\">0</span></span><br><span class=\"line\">     <span class=\"number\">0</span>     <span class=\"number\">0</span>     <span class=\"number\">2</span>     <span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"Next⬇️\"><a href=\"#Next⬇️\" class=\"headerlink\" title=\"Next⬇️\"></a><center>Next⬇️</center></h3><center><a href=\"https://lhxone.top/2021/03/04/Matlab实验1-2/\">Matlab练习1-2 🍺</a></center><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","site":{"data":{}},"excerpt":"Matlab实验1-1\n 1. 编写Script命令文件，画出振荡曲线y=e−b3sin3ty =e ^ {- \\frac{b}{3}}sin3ty=e−3b​sin3t及其包络线y0=e−t3y_0=e^{- \\frac{t}{3}} y0​=e−3t​，其中t的取值范围是[0,π][0,\\pi][0,π].\n\n1\n2\n3\n4\n5\n6\n\n\nclc;\nclear;\nt=0:pi/50:4*pi;\ny=exp(-t/3).*sin(3*t);\ny0=exp(-t/3);\nplot(t,y,'r',t,y0,':b',t,-y0,':b');\n\n\n 2. 编写函数并做调用测试，其中f(x)={ln","more":"<center><img src=\"https://s3.ax1x.com/2021/03/13/6wN3FK.jpg\" width=\"50%\"></center>\n\n<ol start=\"2\">\n<li>编写函数并做调用测试，其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.3599999999999999em\" columnalign=\"left left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>l</mi><mi>n</mi><mi>x</mi><mo>+</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mtext>, </mtext><mi>x</mi><mo>&gt;</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><msqrt><mrow><mn>2</mn><mi>x</mi></mrow></msqrt></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mtext>, </mtext><mn>0</mn><mo>&lt;</mo><mi>x</mi><mo>⩽</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mi mathvariant=\"normal\">∣</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mtext>, </mtext><mi>x</mi><mo>⩽</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding=\"application/x-tex\">f(x)=\\begin{cases}\nlnx + 1 &amp;\\text{, } x&gt;1 \\\\\n\\sqrt {2x} &amp;\\text{, } 0 &lt; x \\leqslant 1 \\\\\n|x| &amp;\\text{, } x \\leqslant 0 \\\\\n\\end{cases}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:4.32em;vertical-align:-1.9099999999999997em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.35002em;\"><span style=\"top:-2.19999em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎩</span></span></span><span style=\"top:-2.19499em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-2.20499em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-3.15001em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎨</span></span></span><span style=\"top:-4.2950099999999996em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-4.30501em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-4.60002em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎧</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8500199999999998em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.41em;\"><span style=\"top:-4.41em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-2.97em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.90722em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\">2</span><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-2.86722em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.13278em;\"><span></span></span></span></span></span></span></span><span style=\"top:-1.5300000000000002em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"mord mathnormal\">x</span><span class=\"mord\">∣</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.9099999999999997em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:1em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.41em;\"><span style=\"top:-4.41em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">, </span></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-2.97em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">, </span></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-1.5300000000000002em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">, </span></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.9099999999999997em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></li>\n</ol>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">y</span> = <span class=\"title\">MyFun</span><span class=\"params\">(x)</span></span></span><br><span class=\"line\"><span class=\"keyword\">if</span> x &gt; <span class=\"number\">1</span></span><br><span class=\"line\">    y = ln(x) + <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">elseif</span> x &gt; <span class=\"number\">0</span> &amp;&amp; x &lt;= <span class=\"number\">1</span></span><br><span class=\"line\">    y = <span class=\"built_in\">sqrt</span>(<span class=\"number\">2</span> * x);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    y = <span class=\"built_in\">abs</span>(x);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>计算表达式<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>e</mi><mn>10</mn></msup><mo>+</mo><mn>2</mn><msup><mn>0</mn><mn>2</mn></msup><msub><mo><mi>log</mi><mo>⁡</mo></mo><mn>2</mn></msub><mn>5</mn><mo>÷</mo><mi>t</mi><mi>a</mi><mi>n</mi><mn>20</mn></mrow><annotation encoding=\"application/x-tex\">e^{10} + 20^2 \\log_{2} {5} \\div tan20</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.897438em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mord mtight\">0</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0582479999999999em;vertical-align:-0.24414em;\"></span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.20696799999999996em;\"><span style=\"top:-2.4558600000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24414em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\">5</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">÷</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">2</span><span class=\"mord\">0</span></span></span></span>的值</li>\n</ol>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">format long;</span><br><span class=\"line\"><span class=\"built_in\">exp</span>(<span class=\"number\">10</span>) + (<span class=\"number\">20</span>^<span class=\"number\">2</span> * <span class=\"built_in\">log2</span>(<span class=\"number\">5</span>)) / <span class=\"built_in\">tan</span>(<span class=\"number\">20</span>)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>运算结果</p>\n</blockquote>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt; MyCalculate  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">ans</span> =</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"number\">2.244162199550501e+04</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>编写函数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mi>y</mi><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>t</mi><mi>a</mi><mi>n</mi><mrow><mo stretchy=\"false\">(</mo><mo>−</mo><msup><mi>x</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><mi>a</mi><mi>r</mi><mi>c</mi><mi>c</mi><mi>o</mi><mi>s</mi><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">myf(x)= tan{(-x^2)}arccos{(x)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span></span>，并测试<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mi>y</mi><mi>f</mi><mo stretchy=\"false\">(</mo><mn>0.25</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">myf(0.25)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mord\">.</span><span class=\"mord\">2</span><span class=\"mord\">5</span><span class=\"mclose\">)</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mi>y</mi><mi>f</mi><mo stretchy=\"false\">(</mo><mn>0.78</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">myf(0.78)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mord\">.</span><span class=\"mord\">7</span><span class=\"mord\">8</span><span class=\"mclose\">)</span></span></span></span>的值.</li>\n</ol>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">y</span>=<span class=\"title\">myf</span><span class=\"params\">(x)</span></span></span><br><span class=\"line\">    y=<span class=\"built_in\">tan</span>(-(x^<span class=\"number\">2</span>))*<span class=\"built_in\">acos</span>(x);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>运算结果</p>\n</blockquote>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt; myf(<span class=\"number\">0.25</span>)    </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">ans</span> =</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"number\">-0.082489690911370</span></span><br><span class=\"line\"></span><br><span class=\"line\">&gt;&gt; myf(<span class=\"number\">0.78</span>)    </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">ans</span> =</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"number\">-0.470951904834096</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"5\">\n<li>测试矩阵的一些生成和操作函数，如diag, magic, zeros, ones, eye, tril, triu, rand, 要求把测试的过程和结果放入实验报告.</li>\n</ol>\n<p><code>略</code></p>\n<ol start=\"6\">\n<li>测试数组的生成函数，如from:step:to,linspace，要求把测试的过程和结果放入实验报告.</li>\n</ol>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt; A=<span class=\"number\">2</span>:<span class=\"number\">2</span>:<span class=\"number\">100</span></span><br><span class=\"line\">A =</span><br><span class=\"line\">  Columns <span class=\"number\">1</span> through <span class=\"number\">21</span></span><br><span class=\"line\">     <span class=\"number\">2</span>     <span class=\"number\">4</span>     <span class=\"number\">6</span>     <span class=\"number\">8</span>    <span class=\"number\">10</span>    <span class=\"number\">12</span>    <span class=\"number\">14</span>    <span class=\"number\">16</span>    <span class=\"number\">18</span>    <span class=\"number\">20</span>    <span class=\"number\">22</span>    <span class=\"number\">24</span>    <span class=\"number\">26</span>    <span class=\"number\">28</span>    <span class=\"number\">30</span>    <span class=\"number\">32</span>    <span class=\"number\">34</span>    <span class=\"number\">36</span>    <span class=\"number\">38</span>    <span class=\"number\">40</span>    <span class=\"number\">42</span></span><br><span class=\"line\">  Columns <span class=\"number\">22</span> through <span class=\"number\">42</span></span><br><span class=\"line\">    <span class=\"number\">44</span>    <span class=\"number\">46</span>    <span class=\"number\">48</span>    <span class=\"number\">50</span>    <span class=\"number\">52</span>    <span class=\"number\">54</span>    <span class=\"number\">56</span>    <span class=\"number\">58</span>    <span class=\"number\">60</span>    <span class=\"number\">62</span>    <span class=\"number\">64</span>    <span class=\"number\">66</span>    <span class=\"number\">68</span>    <span class=\"number\">70</span>    <span class=\"number\">72</span>    <span class=\"number\">74</span>    <span class=\"number\">76</span>    <span class=\"number\">78</span>    <span class=\"number\">80</span>    <span class=\"number\">82</span>    <span class=\"number\">84</span></span><br><span class=\"line\">  Columns <span class=\"number\">43</span> through <span class=\"number\">50</span></span><br><span class=\"line\">    <span class=\"number\">86</span>    <span class=\"number\">88</span>    <span class=\"number\">90</span>    <span class=\"number\">92</span>    <span class=\"number\">94</span>    <span class=\"number\">96</span>    <span class=\"number\">98</span>   <span class=\"number\">100</span></span><br><span class=\"line\">&gt;&gt; B=<span class=\"built_in\">linspace</span>(<span class=\"number\">5</span>,<span class=\"number\">100</span>,<span class=\"number\">20</span>)</span><br><span class=\"line\">B =</span><br><span class=\"line\">     <span class=\"number\">5</span>    <span class=\"number\">10</span>    <span class=\"number\">15</span>    <span class=\"number\">20</span>    <span class=\"number\">25</span>    <span class=\"number\">30</span>    <span class=\"number\">35</span>    <span class=\"number\">40</span>    <span class=\"number\">45</span>    <span class=\"number\">50</span>    <span class=\"number\">55</span>    <span class=\"number\">60</span>    <span class=\"number\">65</span>    <span class=\"number\">70</span>    <span class=\"number\">75</span>    <span class=\"number\">80</span>    <span class=\"number\">85</span>    <span class=\"number\">90</span>    <span class=\"number\">95</span>   <span class=\"number\">100</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"7\">\n<li>测试矩阵或数字的点运算，要求把测试的过程和结果放入实验报告.</li>\n</ol>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A = randi(<span class=\"number\">5</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>) <span class=\"comment\">%randi(max,row,col)</span></span><br><span class=\"line\">B = <span class=\"built_in\">magic</span>(<span class=\"number\">4</span>)</span><br><span class=\"line\">C = <span class=\"built_in\">eye</span>(<span class=\"number\">3</span>, <span class=\"number\">4</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">D = A * B</span><br><span class=\"line\">E = A .* C</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>运算结果</p>\n</blockquote>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt; TestCalculate</span><br><span class=\"line\"></span><br><span class=\"line\">A =</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"number\">4</span>     <span class=\"number\">2</span>     <span class=\"number\">4</span>     <span class=\"number\">1</span></span><br><span class=\"line\">     <span class=\"number\">4</span>     <span class=\"number\">4</span>     <span class=\"number\">1</span>     <span class=\"number\">1</span></span><br><span class=\"line\">     <span class=\"number\">4</span>     <span class=\"number\">1</span>     <span class=\"number\">2</span>     <span class=\"number\">5</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">B =</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"number\">16</span>     <span class=\"number\">2</span>     <span class=\"number\">3</span>    <span class=\"number\">13</span></span><br><span class=\"line\">     <span class=\"number\">5</span>    <span class=\"number\">11</span>    <span class=\"number\">10</span>     <span class=\"number\">8</span></span><br><span class=\"line\">     <span class=\"number\">9</span>     <span class=\"number\">7</span>     <span class=\"number\">6</span>    <span class=\"number\">12</span></span><br><span class=\"line\">     <span class=\"number\">4</span>    <span class=\"number\">14</span>    <span class=\"number\">15</span>     <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">C =</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"number\">1</span>     <span class=\"number\">0</span>     <span class=\"number\">0</span>     <span class=\"number\">0</span></span><br><span class=\"line\">     <span class=\"number\">0</span>     <span class=\"number\">1</span>     <span class=\"number\">0</span>     <span class=\"number\">0</span></span><br><span class=\"line\">     <span class=\"number\">0</span>     <span class=\"number\">0</span>     <span class=\"number\">1</span>     <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">D =</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"number\">114</span>    <span class=\"number\">72</span>    <span class=\"number\">71</span>   <span class=\"number\">117</span></span><br><span class=\"line\">    <span class=\"number\">97</span>    <span class=\"number\">73</span>    <span class=\"number\">73</span>    <span class=\"number\">97</span></span><br><span class=\"line\">   <span class=\"number\">107</span>   <span class=\"number\">103</span>   <span class=\"number\">109</span>    <span class=\"number\">89</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">E =</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"number\">4</span>     <span class=\"number\">0</span>     <span class=\"number\">0</span>     <span class=\"number\">0</span></span><br><span class=\"line\">     <span class=\"number\">0</span>     <span class=\"number\">4</span>     <span class=\"number\">0</span>     <span class=\"number\">0</span></span><br><span class=\"line\">     <span class=\"number\">0</span>     <span class=\"number\">0</span>     <span class=\"number\">2</span>     <span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"Next⬇️\"><a href=\"#Next⬇️\" class=\"headerlink\" title=\"Next⬇️\"></a><center>Next⬇️</center></h3><center><a href=\"https://lhxone.top/2021/03/04/Matlab实验1-2/\">Matlab练习1-2 🍺</a></center>"},{"title":"Matlab实验1-2","date":"2021-03-04T06:32:58.000Z","_content":"\n## Matlab实验1-2\n\n8. 测试矩阵的``` : ```操作，要求把测试的过程和结果放入实验报告.\n\n```Matlab\nA = randi(5, 3, 4)\n\nA(5)\nA(2, 3)%row=2,col=3\nA(3, :)%row=3\nA(:, 1) = [ ]%delet first col\n```\n>运算结果\n```Matlab\n>> TestColon    \n\nA =\n\n     4     1     4     3\n     2     3     4     3\n     5     2     1     4\n\n\nans =\n\n     3\n\n\nans =\n\n     4\n\n\nans =\n\n     5     2     1     4\n\n\nA =\n\n     1     4     3\n     3     4     3\n     2     1     4\n```\n<!-- more -->\n9. 测试字符串操作.\n\n```Matlab\nstr = 'a+b,c+d,'\nn = findstr(str, ',')%n1是第一个\",\"(4),n2是第二个\", \"(8)\nstr1 = str(1:n(1))\nstr2 = str(n(1) + 1:n(2))\nstr3 = strrep(str1, ',', '*2')%str replace\na = 5\nb = 2\nc = 3\nd = 4\neval(str1)%计算str1的值\neval(str3)%计算str3的值\nstr2 = upper(str2)\n```\n>运算结果\n```Matlab\n>> TestStr  \n\nstr =\n\n    'a+b,c+d,'\n\n\nn =\n\n     4     8\n\n\nstr1 =\n\n    'a+b,'\n\n\nstr2 =\n\n    'c+d,'\n\n\nstr3 =\n\n    'a+b*2'\n\n\na =\n\n     5\n\n\nb =\n\n     2\n\n\nc =\n\n     3\n\n\nd =\n\n     4\n\n\nans =\n\n     7\n\n\nans =\n\n     9\n\n\nstr2 =\n\n    'C+D,'\n```\n\n10.  已知{% katex %}f(n)=1+\\frac{1}{3}+\\frac{1}{5}+···+\\frac{1}{2n-1}{% endkatex %}分别用```for```循环和```while```循环编写两个函数，并计算{% katex %}f(50){% endkatex %},{% katex %}f(100){% endkatex %},{% katex %}f(200){% endkatex %}的值.\n\n```CalFunc.m```\n```Matlab\nfunction y=F(x)\n    y=1/(2*x);\nend\n```\n\n```Cal.m```\n```Matlab\nsum = 0;\n\nfor index = 1:50\n    sum = sum + CalFunc(index);\nend\n\ndisp('f(50)=')\nsum\nsum=0;\n\nfor index = 1:100\n    sum = sum + CalFunc(index);\nend\n\ndisp('f(100)=')\nsum\nsum=0;\n\nfor index = 1:200\n    sum = sum + CalFunc(index);\nend\n\ndisp('f(200)=')\nsum\nsum=0;\n```\n\n>运算结果\n\n```Matlab\n>> Cal\nf(50)=\n\nsum =\n\n   2.249602669164712\n\nf(100)=\n\nsum =\n\n   2.593688758819810\n\nf(200)=\n\nsum =\n\n   2.939015474060723\n```\n\n11. 查阅测试excel文件的读取和写入函数xlsread,xlswrite，要求把测试的过程和结果放入实验报告.\n\n```Matlab\nnum=xlsread(\"Book1.xls\")\nnum(:,1)=[ ]\nxlswrite(\"Book1.xls\",num,'A5')\n```\n运行结果\n```Matlab\n>> Testxls\n\nnum =\n\n     3     4     6     3     2\n     5     9     7     5     3\n     4     0     6     4     3\n\n\nnum =\n\n     4     6     3     2\n     9     7     5     3\n     0     6     4     3\n\nWarning: Could not start Excel server for export.\nXLSWRITE will attempt to write file in CSV format. \n> In xlswrite (line 181)\n  In Testxls (line 3) \n```\n\n<table><tr><td bgcolor=yellow>出现了无法写入的问题，num被写入到了新建的Book1.csv，而非原有的Book1.xls。此问题仅存在于macOS，原因为macOS上的Office目前不支持COM接口，目前无解。</td></tr></table>\n\n12.  自己编写矩阵左右翻转、上下翻转函数，不得使用Matlab已经编写好的左右翻转和上下翻转函数。给一个具体的矩阵并做测试翻转.\n\n```Matlab\nA = magic(4)\nMatrixReserveFunc1(A)\nMatrixReserveFunc2(A)\n```\n\n```MatrixReserveFunc1.m```\n```Matlab\nfunction MatrixReserveFunc1(A)\n    [m, n] = size(A);\n\n    for row = 1:m / 2\n        temp = A(row, :);\n        A(row, :) = A(m - row + 1, :);\n        A(m - row + 1, :) = temp;\n    end\n\n    A\nend\n```\n\n```MatrixReserveFunc2.m```\n```Matlab\nfunction MatrixReserveFunc2(A)\n    [m, n] = size(A);\n\n    for col = 1:n / 2\n        temp = A(:, col);\n        A(:, col) = A(:, n - col + 1);\n        A(:, n - col + 1) = temp;\n    end\n\n    A\nend\n```\n运行结果\n```Matlab\n>> MatrixReserve\n\nA =\n\n    16     2     3    13\n     5    11    10     8\n     9     7     6    12\n     4    14    15     1\n\n\nA =\n\n     4    14    15     1\n     9     7     6    12\n     5    11    10     8\n    16     2     3    13\n\n\nA =\n\n    13     3     2    16\n     8    10    11     5\n    12     6     7     9\n     1    15    14     4\n```\n\n13. 编写函数，计算{% katex %}1!+2!+···+20!{% endkatex %}和{% katex %}1!+2!+···+30!{% endkatex %}\n\n```TestFactorFunc.m```\n```Matlab\nfunction y = TestFactorFunc(n)\n    fac = 1;\n    s = 0;\n    for index1 = 1:n\n\n        for index2 = 1:index1\n            fac = fac * index2;\n        end\n\n        s = s + fac;\n        fac = 1;\n    end\n\n    y = s;\nend\n```\n\n```TestFactor.m```\n```Matlab\ndisp('Factor(20)=')\nsum=TestFactorFunc(20)\n\ndisp('Factor(30)=')\nsum=TestFactorFunc(30)\n```\n运行结果\n```Matlab\n>> TestFactor\nFactor(20)=\n\nsum =\n\n   2.5613e+18\n\nFactor(30)=\n\nsum =\n\n   2.7441e+32\n```\n\n14. 编写斐波那契（Fibonacci）数列的函数，列出数列前40个数.提示：可以递归调用，也可以把数列的数放入数组中存储.\n\n```TestFib.m```\n```Matlab\nA=[ ]\nfor index = 1:40\n    A=[A,TestFibFunc(index)];\nend\nA\n```\n\n```TestFibFunc.m```\n```Matlab\nfunction y = Fib(n)\n    A(1) = 1;\n    A(2) = 1;\n\n    for i = 3:n\n        A(i) = A(i - 1) + A(i - 2);\n    end\n\n    y = A(n);\n    return\nend\n```\n运行结果\n```Matlab\n>> TestFib\n\nA =\n\n     [ ]\n\n\nA =\n\n  Columns 1 through 9\n\n           1           1           2           3           5           8          13          21          34\n\n  Columns 10 through 18\n\n          55          89         144         233         377         610         987        1597        2584\n\n  Columns 19 through 27\n\n        4181        6765       10946       17711       28657       46368       75025      121393      196418\n\n  Columns 28 through 36\n\n      317811      514229      832040     1346269     2178309     3524578     5702887     9227465    14930352\n\n  Columns 37 through 40\n\n    24157817    39088169    63245986   102334155\n```\n\n15. 编写课件中的猜数游戏，并做测试. 首先由计算机随机产生一个{% katex %}[1,100]{% endkatex %}之间的一个整数，然后由用户猜测所产生的这个数。根据用户猜测的情况给出不同的提示，如果猜测的数大于产生的数，则显示```High```，小于则显示```Low```，等于则显示```You won!```，同时退出游戏。用户最多有 10 次机会.\n\n```Matlab\nfprintf(\"游戏开始！\\n请输入你猜的数\\n\")\nnum=randi(100)\nt=10;\nwhile t>0\n    t=t-1;\n    x=input('');\n    if num==x\n        fprintf(\"You won!\\n\")\n        break\n    else\n        if x>num\n            fprintf(\"High!\")\n        else\n            fprintf(\"Low!\")\n        end\n        fprintf(\"还剩%d次机会，请再次输入：\",t);\n    end\nend\nif t==0\n    fprintf(\"机会为0，游戏结束!\\n\");\nend\n```\n---\n\n### <center>Next⬇️</center>\n\n<center><a href=\"http://lhxone.top/2021/03/07/Matlab实验1-3/\">Matlab练习1-3 🍺</a></center>","source":"_posts/Matlab实验1-2.md","raw":"---\ntitle: Matlab实验1-2\ndate: 2021-03-4 14:32:58\ntags: Matlab\n---\n\n## Matlab实验1-2\n\n8. 测试矩阵的``` : ```操作，要求把测试的过程和结果放入实验报告.\n\n```Matlab\nA = randi(5, 3, 4)\n\nA(5)\nA(2, 3)%row=2,col=3\nA(3, :)%row=3\nA(:, 1) = [ ]%delet first col\n```\n>运算结果\n```Matlab\n>> TestColon    \n\nA =\n\n     4     1     4     3\n     2     3     4     3\n     5     2     1     4\n\n\nans =\n\n     3\n\n\nans =\n\n     4\n\n\nans =\n\n     5     2     1     4\n\n\nA =\n\n     1     4     3\n     3     4     3\n     2     1     4\n```\n<!-- more -->\n9. 测试字符串操作.\n\n```Matlab\nstr = 'a+b,c+d,'\nn = findstr(str, ',')%n1是第一个\",\"(4),n2是第二个\", \"(8)\nstr1 = str(1:n(1))\nstr2 = str(n(1) + 1:n(2))\nstr3 = strrep(str1, ',', '*2')%str replace\na = 5\nb = 2\nc = 3\nd = 4\neval(str1)%计算str1的值\neval(str3)%计算str3的值\nstr2 = upper(str2)\n```\n>运算结果\n```Matlab\n>> TestStr  \n\nstr =\n\n    'a+b,c+d,'\n\n\nn =\n\n     4     8\n\n\nstr1 =\n\n    'a+b,'\n\n\nstr2 =\n\n    'c+d,'\n\n\nstr3 =\n\n    'a+b*2'\n\n\na =\n\n     5\n\n\nb =\n\n     2\n\n\nc =\n\n     3\n\n\nd =\n\n     4\n\n\nans =\n\n     7\n\n\nans =\n\n     9\n\n\nstr2 =\n\n    'C+D,'\n```\n\n10.  已知{% katex %}f(n)=1+\\frac{1}{3}+\\frac{1}{5}+···+\\frac{1}{2n-1}{% endkatex %}分别用```for```循环和```while```循环编写两个函数，并计算{% katex %}f(50){% endkatex %},{% katex %}f(100){% endkatex %},{% katex %}f(200){% endkatex %}的值.\n\n```CalFunc.m```\n```Matlab\nfunction y=F(x)\n    y=1/(2*x);\nend\n```\n\n```Cal.m```\n```Matlab\nsum = 0;\n\nfor index = 1:50\n    sum = sum + CalFunc(index);\nend\n\ndisp('f(50)=')\nsum\nsum=0;\n\nfor index = 1:100\n    sum = sum + CalFunc(index);\nend\n\ndisp('f(100)=')\nsum\nsum=0;\n\nfor index = 1:200\n    sum = sum + CalFunc(index);\nend\n\ndisp('f(200)=')\nsum\nsum=0;\n```\n\n>运算结果\n\n```Matlab\n>> Cal\nf(50)=\n\nsum =\n\n   2.249602669164712\n\nf(100)=\n\nsum =\n\n   2.593688758819810\n\nf(200)=\n\nsum =\n\n   2.939015474060723\n```\n\n11. 查阅测试excel文件的读取和写入函数xlsread,xlswrite，要求把测试的过程和结果放入实验报告.\n\n```Matlab\nnum=xlsread(\"Book1.xls\")\nnum(:,1)=[ ]\nxlswrite(\"Book1.xls\",num,'A5')\n```\n运行结果\n```Matlab\n>> Testxls\n\nnum =\n\n     3     4     6     3     2\n     5     9     7     5     3\n     4     0     6     4     3\n\n\nnum =\n\n     4     6     3     2\n     9     7     5     3\n     0     6     4     3\n\nWarning: Could not start Excel server for export.\nXLSWRITE will attempt to write file in CSV format. \n> In xlswrite (line 181)\n  In Testxls (line 3) \n```\n\n<table><tr><td bgcolor=yellow>出现了无法写入的问题，num被写入到了新建的Book1.csv，而非原有的Book1.xls。此问题仅存在于macOS，原因为macOS上的Office目前不支持COM接口，目前无解。</td></tr></table>\n\n12.  自己编写矩阵左右翻转、上下翻转函数，不得使用Matlab已经编写好的左右翻转和上下翻转函数。给一个具体的矩阵并做测试翻转.\n\n```Matlab\nA = magic(4)\nMatrixReserveFunc1(A)\nMatrixReserveFunc2(A)\n```\n\n```MatrixReserveFunc1.m```\n```Matlab\nfunction MatrixReserveFunc1(A)\n    [m, n] = size(A);\n\n    for row = 1:m / 2\n        temp = A(row, :);\n        A(row, :) = A(m - row + 1, :);\n        A(m - row + 1, :) = temp;\n    end\n\n    A\nend\n```\n\n```MatrixReserveFunc2.m```\n```Matlab\nfunction MatrixReserveFunc2(A)\n    [m, n] = size(A);\n\n    for col = 1:n / 2\n        temp = A(:, col);\n        A(:, col) = A(:, n - col + 1);\n        A(:, n - col + 1) = temp;\n    end\n\n    A\nend\n```\n运行结果\n```Matlab\n>> MatrixReserve\n\nA =\n\n    16     2     3    13\n     5    11    10     8\n     9     7     6    12\n     4    14    15     1\n\n\nA =\n\n     4    14    15     1\n     9     7     6    12\n     5    11    10     8\n    16     2     3    13\n\n\nA =\n\n    13     3     2    16\n     8    10    11     5\n    12     6     7     9\n     1    15    14     4\n```\n\n13. 编写函数，计算{% katex %}1!+2!+···+20!{% endkatex %}和{% katex %}1!+2!+···+30!{% endkatex %}\n\n```TestFactorFunc.m```\n```Matlab\nfunction y = TestFactorFunc(n)\n    fac = 1;\n    s = 0;\n    for index1 = 1:n\n\n        for index2 = 1:index1\n            fac = fac * index2;\n        end\n\n        s = s + fac;\n        fac = 1;\n    end\n\n    y = s;\nend\n```\n\n```TestFactor.m```\n```Matlab\ndisp('Factor(20)=')\nsum=TestFactorFunc(20)\n\ndisp('Factor(30)=')\nsum=TestFactorFunc(30)\n```\n运行结果\n```Matlab\n>> TestFactor\nFactor(20)=\n\nsum =\n\n   2.5613e+18\n\nFactor(30)=\n\nsum =\n\n   2.7441e+32\n```\n\n14. 编写斐波那契（Fibonacci）数列的函数，列出数列前40个数.提示：可以递归调用，也可以把数列的数放入数组中存储.\n\n```TestFib.m```\n```Matlab\nA=[ ]\nfor index = 1:40\n    A=[A,TestFibFunc(index)];\nend\nA\n```\n\n```TestFibFunc.m```\n```Matlab\nfunction y = Fib(n)\n    A(1) = 1;\n    A(2) = 1;\n\n    for i = 3:n\n        A(i) = A(i - 1) + A(i - 2);\n    end\n\n    y = A(n);\n    return\nend\n```\n运行结果\n```Matlab\n>> TestFib\n\nA =\n\n     [ ]\n\n\nA =\n\n  Columns 1 through 9\n\n           1           1           2           3           5           8          13          21          34\n\n  Columns 10 through 18\n\n          55          89         144         233         377         610         987        1597        2584\n\n  Columns 19 through 27\n\n        4181        6765       10946       17711       28657       46368       75025      121393      196418\n\n  Columns 28 through 36\n\n      317811      514229      832040     1346269     2178309     3524578     5702887     9227465    14930352\n\n  Columns 37 through 40\n\n    24157817    39088169    63245986   102334155\n```\n\n15. 编写课件中的猜数游戏，并做测试. 首先由计算机随机产生一个{% katex %}[1,100]{% endkatex %}之间的一个整数，然后由用户猜测所产生的这个数。根据用户猜测的情况给出不同的提示，如果猜测的数大于产生的数，则显示```High```，小于则显示```Low```，等于则显示```You won!```，同时退出游戏。用户最多有 10 次机会.\n\n```Matlab\nfprintf(\"游戏开始！\\n请输入你猜的数\\n\")\nnum=randi(100)\nt=10;\nwhile t>0\n    t=t-1;\n    x=input('');\n    if num==x\n        fprintf(\"You won!\\n\")\n        break\n    else\n        if x>num\n            fprintf(\"High!\")\n        else\n            fprintf(\"Low!\")\n        end\n        fprintf(\"还剩%d次机会，请再次输入：\",t);\n    end\nend\nif t==0\n    fprintf(\"机会为0，游戏结束!\\n\");\nend\n```\n---\n\n### <center>Next⬇️</center>\n\n<center><a href=\"http://lhxone.top/2021/03/07/Matlab实验1-3/\">Matlab练习1-3 🍺</a></center>","slug":"Matlab实验1-2","published":1,"updated":"2021-04-13T03:30:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckojvxer7000nboe285m8cu55","content":"<h2 id=\"Matlab实验1-2\"><a href=\"#Matlab实验1-2\" class=\"headerlink\" title=\"Matlab实验1-2\"></a>Matlab实验1-2</h2><ol start=\"8\">\n<li>测试矩阵的<code>:</code>操作，要求把测试的过程和结果放入实验报告.</li>\n</ol>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A = randi(<span class=\"number\">5</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">A(<span class=\"number\">5</span>)</span><br><span class=\"line\">A(<span class=\"number\">2</span>, <span class=\"number\">3</span>)<span class=\"comment\">%row=2,col=3</span></span><br><span class=\"line\">A(<span class=\"number\">3</span>, :)<span class=\"comment\">%row=3</span></span><br><span class=\"line\">A(:, <span class=\"number\">1</span>) = [ ]<span class=\"comment\">%delet first col</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>运算结果</p>\n</blockquote>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt; TestColon    </span><br><span class=\"line\"></span><br><span class=\"line\">A =</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"number\">4</span>     <span class=\"number\">1</span>     <span class=\"number\">4</span>     <span class=\"number\">3</span></span><br><span class=\"line\">     <span class=\"number\">2</span>     <span class=\"number\">3</span>     <span class=\"number\">4</span>     <span class=\"number\">3</span></span><br><span class=\"line\">     <span class=\"number\">5</span>     <span class=\"number\">2</span>     <span class=\"number\">1</span>     <span class=\"number\">4</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">ans</span> =</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"number\">3</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">ans</span> =</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"number\">4</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">ans</span> =</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"number\">5</span>     <span class=\"number\">2</span>     <span class=\"number\">1</span>     <span class=\"number\">4</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">A =</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"number\">1</span>     <span class=\"number\">4</span>     <span class=\"number\">3</span></span><br><span class=\"line\">     <span class=\"number\">3</span>     <span class=\"number\">4</span>     <span class=\"number\">3</span></span><br><span class=\"line\">     <span class=\"number\">2</span>     <span class=\"number\">1</span>     <span class=\"number\">4</span></span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n<ol start=\"9\">\n<li>测试字符串操作.</li>\n</ol>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str = <span class=\"string\">&#x27;a+b,c+d,&#x27;</span></span><br><span class=\"line\">n = findstr(str, <span class=\"string\">&#x27;,&#x27;</span>)<span class=\"comment\">%n1是第一个&quot;,&quot;(4),n2是第二个&quot;, &quot;(8)</span></span><br><span class=\"line\">str1 = str(<span class=\"number\">1</span>:n(<span class=\"number\">1</span>))</span><br><span class=\"line\">str2 = str(n(<span class=\"number\">1</span>) + <span class=\"number\">1</span>:n(<span class=\"number\">2</span>))</span><br><span class=\"line\">str3 = strrep(str1, <span class=\"string\">&#x27;,&#x27;</span>, <span class=\"string\">&#x27;*2&#x27;</span>)<span class=\"comment\">%str replace</span></span><br><span class=\"line\">a = <span class=\"number\">5</span></span><br><span class=\"line\">b = <span class=\"number\">2</span></span><br><span class=\"line\">c = <span class=\"number\">3</span></span><br><span class=\"line\">d = <span class=\"number\">4</span></span><br><span class=\"line\">eval(str1)<span class=\"comment\">%计算str1的值</span></span><br><span class=\"line\">eval(str3)<span class=\"comment\">%计算str3的值</span></span><br><span class=\"line\">str2 = upper(str2)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>运算结果</p>\n</blockquote>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt; TestStr  </span><br><span class=\"line\"></span><br><span class=\"line\">str =</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&#x27;a+b,c+d,&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">n =</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"number\">4</span>     <span class=\"number\">8</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">str1 =</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&#x27;a+b,&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">str2 =</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&#x27;c+d,&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">str3 =</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&#x27;a+b*2&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">a =</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"number\">5</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">b =</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">c =</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"number\">3</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">d =</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"number\">4</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">ans</span> =</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"number\">7</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">ans</span> =</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"number\">9</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">str2 =</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&#x27;C+D,&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"10\">\n<li> 已知<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>1</mn><mo>+</mo><mfrac><mn>1</mn><mn>3</mn></mfrac><mo>+</mo><mfrac><mn>1</mn><mn>5</mn></mfrac><mo>+</mo><mo separator=\"true\">⋅</mo><mo separator=\"true\">⋅</mo><mo separator=\"true\">⋅</mo><mo>+</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>n</mi><mo>−</mo><mn>1</mn></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">f(n)=1+\\frac{1}{3}+\\frac{1}{5}+···+\\frac{1}{2n-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.190108em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2484389999999999em;vertical-align:-0.403331em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">5</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\">+</span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">+</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.403331em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>分别用<code>for</code>循环和<code>while</code>循环编写两个函数，并计算<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mn>50</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(50)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\">5</span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span></span></span>,<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mn>100</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(100)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span></span></span>,<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mn>200</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(200)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span></span></span>的值.</li>\n</ol>\n<p><code>CalFunc.m</code></p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">y</span>=<span class=\"title\">F</span><span class=\"params\">(x)</span></span></span><br><span class=\"line\">    y=<span class=\"number\">1</span>/(<span class=\"number\">2</span>*x);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<p><code>Cal.m</code></p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sum = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> index = <span class=\"number\">1</span>:<span class=\"number\">50</span></span><br><span class=\"line\">    sum = sum + CalFunc(index);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">disp</span>(<span class=\"string\">&#x27;f(50)=&#x27;</span>)</span><br><span class=\"line\">sum</span><br><span class=\"line\">sum=<span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> index = <span class=\"number\">1</span>:<span class=\"number\">100</span></span><br><span class=\"line\">    sum = sum + CalFunc(index);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">disp</span>(<span class=\"string\">&#x27;f(100)=&#x27;</span>)</span><br><span class=\"line\">sum</span><br><span class=\"line\">sum=<span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> index = <span class=\"number\">1</span>:<span class=\"number\">200</span></span><br><span class=\"line\">    sum = sum + CalFunc(index);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">disp</span>(<span class=\"string\">&#x27;f(200)=&#x27;</span>)</span><br><span class=\"line\">sum</span><br><span class=\"line\">sum=<span class=\"number\">0</span>;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>运算结果</p>\n</blockquote>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt; Cal</span><br><span class=\"line\">f(<span class=\"number\">50</span>)=</span><br><span class=\"line\"></span><br><span class=\"line\">sum =</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"number\">2.249602669164712</span></span><br><span class=\"line\"></span><br><span class=\"line\">f(<span class=\"number\">100</span>)=</span><br><span class=\"line\"></span><br><span class=\"line\">sum =</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"number\">2.593688758819810</span></span><br><span class=\"line\"></span><br><span class=\"line\">f(<span class=\"number\">200</span>)=</span><br><span class=\"line\"></span><br><span class=\"line\">sum =</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"number\">2.939015474060723</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"11\">\n<li>查阅测试excel文件的读取和写入函数xlsread,xlswrite，要求把测试的过程和结果放入实验报告.</li>\n</ol>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">num=xlsread(<span class=\"string\">&quot;Book1.xls&quot;</span>)</span><br><span class=\"line\">num(:,<span class=\"number\">1</span>)=[ ]</span><br><span class=\"line\">xlswrite(<span class=\"string\">&quot;Book1.xls&quot;</span>,num,<span class=\"string\">&#x27;A5&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<p>运行结果</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt; Testxls</span><br><span class=\"line\"></span><br><span class=\"line\">num =</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"number\">3</span>     <span class=\"number\">4</span>     <span class=\"number\">6</span>     <span class=\"number\">3</span>     <span class=\"number\">2</span></span><br><span class=\"line\">     <span class=\"number\">5</span>     <span class=\"number\">9</span>     <span class=\"number\">7</span>     <span class=\"number\">5</span>     <span class=\"number\">3</span></span><br><span class=\"line\">     <span class=\"number\">4</span>     <span class=\"number\">0</span>     <span class=\"number\">6</span>     <span class=\"number\">4</span>     <span class=\"number\">3</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">num =</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"number\">4</span>     <span class=\"number\">6</span>     <span class=\"number\">3</span>     <span class=\"number\">2</span></span><br><span class=\"line\">     <span class=\"number\">9</span>     <span class=\"number\">7</span>     <span class=\"number\">5</span>     <span class=\"number\">3</span></span><br><span class=\"line\">     <span class=\"number\">0</span>     <span class=\"number\">6</span>     <span class=\"number\">4</span>     <span class=\"number\">3</span></span><br><span class=\"line\"></span><br><span class=\"line\">Warning: Could not start Excel server <span class=\"keyword\">for</span> export.</span><br><span class=\"line\">XLSWRITE will attempt to write file in CSV format. </span><br><span class=\"line\">&gt; In xlswrite (line <span class=\"number\">181</span>)</span><br><span class=\"line\">  In Testxls (line <span class=\"number\">3</span>) </span><br></pre></td></tr></table></figure>\n\n<table><tr><td bgcolor=yellow>出现了无法写入的问题，num被写入到了新建的Book1.csv，而非原有的Book1.xls。此问题仅存在于macOS，原因为macOS上的Office目前不支持COM接口，目前无解。</td></tr></table>\n\n<ol start=\"12\">\n<li> 自己编写矩阵左右翻转、上下翻转函数，不得使用Matlab已经编写好的左右翻转和上下翻转函数。给一个具体的矩阵并做测试翻转.</li>\n</ol>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A = <span class=\"built_in\">magic</span>(<span class=\"number\">4</span>)</span><br><span class=\"line\">MatrixReserveFunc1(A)</span><br><span class=\"line\">MatrixReserveFunc2(A)</span><br></pre></td></tr></table></figure>\n\n<p><code>MatrixReserveFunc1.m</code></p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">MatrixReserveFunc1</span><span class=\"params\">(A)</span></span></span><br><span class=\"line\">    [m, n] = <span class=\"built_in\">size</span>(A);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> row = <span class=\"number\">1</span>:m / <span class=\"number\">2</span></span><br><span class=\"line\">        temp = A(row, :);</span><br><span class=\"line\">        A(row, :) = A(m - row + <span class=\"number\">1</span>, :);</span><br><span class=\"line\">        A(m - row + <span class=\"number\">1</span>, :) = temp;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    A</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<p><code>MatrixReserveFunc2.m</code></p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">MatrixReserveFunc2</span><span class=\"params\">(A)</span></span></span><br><span class=\"line\">    [m, n] = <span class=\"built_in\">size</span>(A);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> col = <span class=\"number\">1</span>:n / <span class=\"number\">2</span></span><br><span class=\"line\">        temp = A(:, col);</span><br><span class=\"line\">        A(:, col) = A(:, n - col + <span class=\"number\">1</span>);</span><br><span class=\"line\">        A(:, n - col + <span class=\"number\">1</span>) = temp;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    A</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>运行结果</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt; MatrixReserve</span><br><span class=\"line\"></span><br><span class=\"line\">A =</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"number\">16</span>     <span class=\"number\">2</span>     <span class=\"number\">3</span>    <span class=\"number\">13</span></span><br><span class=\"line\">     <span class=\"number\">5</span>    <span class=\"number\">11</span>    <span class=\"number\">10</span>     <span class=\"number\">8</span></span><br><span class=\"line\">     <span class=\"number\">9</span>     <span class=\"number\">7</span>     <span class=\"number\">6</span>    <span class=\"number\">12</span></span><br><span class=\"line\">     <span class=\"number\">4</span>    <span class=\"number\">14</span>    <span class=\"number\">15</span>     <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">A =</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"number\">4</span>    <span class=\"number\">14</span>    <span class=\"number\">15</span>     <span class=\"number\">1</span></span><br><span class=\"line\">     <span class=\"number\">9</span>     <span class=\"number\">7</span>     <span class=\"number\">6</span>    <span class=\"number\">12</span></span><br><span class=\"line\">     <span class=\"number\">5</span>    <span class=\"number\">11</span>    <span class=\"number\">10</span>     <span class=\"number\">8</span></span><br><span class=\"line\">    <span class=\"number\">16</span>     <span class=\"number\">2</span>     <span class=\"number\">3</span>    <span class=\"number\">13</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">A =</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"number\">13</span>     <span class=\"number\">3</span>     <span class=\"number\">2</span>    <span class=\"number\">16</span></span><br><span class=\"line\">     <span class=\"number\">8</span>    <span class=\"number\">10</span>    <span class=\"number\">11</span>     <span class=\"number\">5</span></span><br><span class=\"line\">    <span class=\"number\">12</span>     <span class=\"number\">6</span>     <span class=\"number\">7</span>     <span class=\"number\">9</span></span><br><span class=\"line\">     <span class=\"number\">1</span>    <span class=\"number\">15</span>    <span class=\"number\">14</span>     <span class=\"number\">4</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"13\">\n<li>编写函数，计算<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo stretchy=\"false\">!</mo><mo>+</mo><mn>2</mn><mo stretchy=\"false\">!</mo><mo>+</mo><mo separator=\"true\">⋅</mo><mo separator=\"true\">⋅</mo><mo separator=\"true\">⋅</mo><mo>+</mo><mn>20</mn><mo stretchy=\"false\">!</mo></mrow><annotation encoding=\"application/x-tex\">1!+2!+···+20!</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">!</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">2</span><span class=\"mclose\">!</span><span class=\"mord\">+</span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">+</span><span class=\"mord\">2</span><span class=\"mord\">0</span><span class=\"mclose\">!</span></span></span></span>和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo stretchy=\"false\">!</mo><mo>+</mo><mn>2</mn><mo stretchy=\"false\">!</mo><mo>+</mo><mo separator=\"true\">⋅</mo><mo separator=\"true\">⋅</mo><mo separator=\"true\">⋅</mo><mo>+</mo><mn>30</mn><mo stretchy=\"false\">!</mo></mrow><annotation encoding=\"application/x-tex\">1!+2!+···+30!</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">!</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">2</span><span class=\"mclose\">!</span><span class=\"mord\">+</span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">+</span><span class=\"mord\">3</span><span class=\"mord\">0</span><span class=\"mclose\">!</span></span></span></span></li>\n</ol>\n<p><code>TestFactorFunc.m</code></p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">y</span> = <span class=\"title\">TestFactorFunc</span><span class=\"params\">(n)</span></span></span><br><span class=\"line\">    fac = <span class=\"number\">1</span>;</span><br><span class=\"line\">    s = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> index1 = <span class=\"number\">1</span>:n</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> index2 = <span class=\"number\">1</span>:index1</span><br><span class=\"line\">            fac = fac * index2;</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">        s = s + fac;</span><br><span class=\"line\">        fac = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    y = s;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<p><code>TestFactor.m</code></p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">disp</span>(<span class=\"string\">&#x27;Factor(20)=&#x27;</span>)</span><br><span class=\"line\">sum=TestFactorFunc(<span class=\"number\">20</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">disp</span>(<span class=\"string\">&#x27;Factor(30)=&#x27;</span>)</span><br><span class=\"line\">sum=TestFactorFunc(<span class=\"number\">30</span>)</span><br></pre></td></tr></table></figure>\n<p>运行结果</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt; TestFactor</span><br><span class=\"line\">Factor(<span class=\"number\">20</span>)=</span><br><span class=\"line\"></span><br><span class=\"line\">sum =</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"number\">2.5613e+18</span></span><br><span class=\"line\"></span><br><span class=\"line\">Factor(<span class=\"number\">30</span>)=</span><br><span class=\"line\"></span><br><span class=\"line\">sum =</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"number\">2.7441e+32</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"14\">\n<li>编写斐波那契（Fibonacci）数列的函数，列出数列前40个数.提示：可以递归调用，也可以把数列的数放入数组中存储.</li>\n</ol>\n<p><code>TestFib.m</code></p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A=[ ]</span><br><span class=\"line\"><span class=\"keyword\">for</span> index = <span class=\"number\">1</span>:<span class=\"number\">40</span></span><br><span class=\"line\">    A=[A,TestFibFunc(index)];</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">A</span><br></pre></td></tr></table></figure>\n\n<p><code>TestFibFunc.m</code></p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">y</span> = <span class=\"title\">Fib</span><span class=\"params\">(n)</span></span></span><br><span class=\"line\">    A(<span class=\"number\">1</span>) = <span class=\"number\">1</span>;</span><br><span class=\"line\">    A(<span class=\"number\">2</span>) = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">3</span>:n</span><br><span class=\"line\">        A(<span class=\"built_in\">i</span>) = A(<span class=\"built_in\">i</span> - <span class=\"number\">1</span>) + A(<span class=\"built_in\">i</span> - <span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    y = A(n);</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>运行结果</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt; TestFib</span><br><span class=\"line\"></span><br><span class=\"line\">A =</span><br><span class=\"line\"></span><br><span class=\"line\">     [ ]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">A =</span><br><span class=\"line\"></span><br><span class=\"line\">  Columns <span class=\"number\">1</span> through <span class=\"number\">9</span></span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"number\">1</span>           <span class=\"number\">1</span>           <span class=\"number\">2</span>           <span class=\"number\">3</span>           <span class=\"number\">5</span>           <span class=\"number\">8</span>          <span class=\"number\">13</span>          <span class=\"number\">21</span>          <span class=\"number\">34</span></span><br><span class=\"line\"></span><br><span class=\"line\">  Columns <span class=\"number\">10</span> through <span class=\"number\">18</span></span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"number\">55</span>          <span class=\"number\">89</span>         <span class=\"number\">144</span>         <span class=\"number\">233</span>         <span class=\"number\">377</span>         <span class=\"number\">610</span>         <span class=\"number\">987</span>        <span class=\"number\">1597</span>        <span class=\"number\">2584</span></span><br><span class=\"line\"></span><br><span class=\"line\">  Columns <span class=\"number\">19</span> through <span class=\"number\">27</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"number\">4181</span>        <span class=\"number\">6765</span>       <span class=\"number\">10946</span>       <span class=\"number\">17711</span>       <span class=\"number\">28657</span>       <span class=\"number\">46368</span>       <span class=\"number\">75025</span>      <span class=\"number\">121393</span>      <span class=\"number\">196418</span></span><br><span class=\"line\"></span><br><span class=\"line\">  Columns <span class=\"number\">28</span> through <span class=\"number\">36</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"number\">317811</span>      <span class=\"number\">514229</span>      <span class=\"number\">832040</span>     <span class=\"number\">1346269</span>     <span class=\"number\">2178309</span>     <span class=\"number\">3524578</span>     <span class=\"number\">5702887</span>     <span class=\"number\">9227465</span>    <span class=\"number\">14930352</span></span><br><span class=\"line\"></span><br><span class=\"line\">  Columns <span class=\"number\">37</span> through <span class=\"number\">40</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"number\">24157817</span>    <span class=\"number\">39088169</span>    <span class=\"number\">63245986</span>   <span class=\"number\">102334155</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"15\">\n<li>编写课件中的猜数游戏，并做测试. 首先由计算机随机产生一个<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>100</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[1,100]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mclose\">]</span></span></span></span>之间的一个整数，然后由用户猜测所产生的这个数。根据用户猜测的情况给出不同的提示，如果猜测的数大于产生的数，则显示<code>High</code>，小于则显示<code>Low</code>，等于则显示<code>You won!</code>，同时退出游戏。用户最多有 10 次机会.</li>\n</ol>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fprintf(<span class=\"string\">&quot;游戏开始！\\n请输入你猜的数\\n&quot;</span>)</span><br><span class=\"line\">num=randi(<span class=\"number\">100</span>)</span><br><span class=\"line\">t=<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> t&gt;<span class=\"number\">0</span></span><br><span class=\"line\">    t=t<span class=\"number\">-1</span>;</span><br><span class=\"line\">    x=input(<span class=\"string\">&#x27;&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> num==x</span><br><span class=\"line\">        fprintf(<span class=\"string\">&quot;You won!\\n&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> x&gt;num</span><br><span class=\"line\">            fprintf(<span class=\"string\">&quot;High!&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            fprintf(<span class=\"string\">&quot;Low!&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        fprintf(<span class=\"string\">&quot;还剩%d次机会，请再次输入：&quot;</span>,t);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> t==<span class=\"number\">0</span></span><br><span class=\"line\">    fprintf(<span class=\"string\">&quot;机会为0，游戏结束!\\n&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"Next⬇️\"><a href=\"#Next⬇️\" class=\"headerlink\" title=\"Next⬇️\"></a><center>Next⬇️</center></h3><center><a href=\"http://lhxone.top/2021/03/07/Matlab实验1-3/\">Matlab练习1-3 🍺</a></center><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","site":{"data":{}},"excerpt":"Matlab实验1-2\n 8. 测试矩阵的:操作，要求把测试的过程和结果放入实验报告.\n\n1\n2\n3\n4\n5\n6\n\n\nA = randi(5, 3, 4)\n\nA(5)\nA(2, 3)%row=2,col=3\nA(3, :)%row=3\nA(:, 1) = [ ]%delet first col\n\n\n运算结果\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n>> TestColon    \n\nA =\n\n     4     1     4     3\n     2     3    ","more":"<ol start=\"9\">\n<li>测试字符串操作.</li>\n</ol>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str = <span class=\"string\">&#x27;a+b,c+d,&#x27;</span></span><br><span class=\"line\">n = findstr(str, <span class=\"string\">&#x27;,&#x27;</span>)<span class=\"comment\">%n1是第一个&quot;,&quot;(4),n2是第二个&quot;, &quot;(8)</span></span><br><span class=\"line\">str1 = str(<span class=\"number\">1</span>:n(<span class=\"number\">1</span>))</span><br><span class=\"line\">str2 = str(n(<span class=\"number\">1</span>) + <span class=\"number\">1</span>:n(<span class=\"number\">2</span>))</span><br><span class=\"line\">str3 = strrep(str1, <span class=\"string\">&#x27;,&#x27;</span>, <span class=\"string\">&#x27;*2&#x27;</span>)<span class=\"comment\">%str replace</span></span><br><span class=\"line\">a = <span class=\"number\">5</span></span><br><span class=\"line\">b = <span class=\"number\">2</span></span><br><span class=\"line\">c = <span class=\"number\">3</span></span><br><span class=\"line\">d = <span class=\"number\">4</span></span><br><span class=\"line\">eval(str1)<span class=\"comment\">%计算str1的值</span></span><br><span class=\"line\">eval(str3)<span class=\"comment\">%计算str3的值</span></span><br><span class=\"line\">str2 = upper(str2)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>运算结果</p>\n</blockquote>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt; TestStr  </span><br><span class=\"line\"></span><br><span class=\"line\">str =</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&#x27;a+b,c+d,&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">n =</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"number\">4</span>     <span class=\"number\">8</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">str1 =</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&#x27;a+b,&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">str2 =</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&#x27;c+d,&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">str3 =</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&#x27;a+b*2&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">a =</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"number\">5</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">b =</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">c =</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"number\">3</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">d =</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"number\">4</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">ans</span> =</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"number\">7</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">ans</span> =</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"number\">9</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">str2 =</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&#x27;C+D,&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"10\">\n<li> 已知<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>1</mn><mo>+</mo><mfrac><mn>1</mn><mn>3</mn></mfrac><mo>+</mo><mfrac><mn>1</mn><mn>5</mn></mfrac><mo>+</mo><mo separator=\"true\">⋅</mo><mo separator=\"true\">⋅</mo><mo separator=\"true\">⋅</mo><mo>+</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>n</mi><mo>−</mo><mn>1</mn></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">f(n)=1+\\frac{1}{3}+\\frac{1}{5}+···+\\frac{1}{2n-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.190108em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2484389999999999em;vertical-align:-0.403331em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">5</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\">+</span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">+</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.403331em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>分别用<code>for</code>循环和<code>while</code>循环编写两个函数，并计算<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mn>50</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(50)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\">5</span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span></span></span>,<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mn>100</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(100)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span></span></span>,<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mn>200</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(200)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span></span></span>的值.</li>\n</ol>\n<p><code>CalFunc.m</code></p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">y</span>=<span class=\"title\">F</span><span class=\"params\">(x)</span></span></span><br><span class=\"line\">    y=<span class=\"number\">1</span>/(<span class=\"number\">2</span>*x);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<p><code>Cal.m</code></p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sum = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> index = <span class=\"number\">1</span>:<span class=\"number\">50</span></span><br><span class=\"line\">    sum = sum + CalFunc(index);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">disp</span>(<span class=\"string\">&#x27;f(50)=&#x27;</span>)</span><br><span class=\"line\">sum</span><br><span class=\"line\">sum=<span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> index = <span class=\"number\">1</span>:<span class=\"number\">100</span></span><br><span class=\"line\">    sum = sum + CalFunc(index);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">disp</span>(<span class=\"string\">&#x27;f(100)=&#x27;</span>)</span><br><span class=\"line\">sum</span><br><span class=\"line\">sum=<span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> index = <span class=\"number\">1</span>:<span class=\"number\">200</span></span><br><span class=\"line\">    sum = sum + CalFunc(index);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">disp</span>(<span class=\"string\">&#x27;f(200)=&#x27;</span>)</span><br><span class=\"line\">sum</span><br><span class=\"line\">sum=<span class=\"number\">0</span>;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>运算结果</p>\n</blockquote>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt; Cal</span><br><span class=\"line\">f(<span class=\"number\">50</span>)=</span><br><span class=\"line\"></span><br><span class=\"line\">sum =</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"number\">2.249602669164712</span></span><br><span class=\"line\"></span><br><span class=\"line\">f(<span class=\"number\">100</span>)=</span><br><span class=\"line\"></span><br><span class=\"line\">sum =</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"number\">2.593688758819810</span></span><br><span class=\"line\"></span><br><span class=\"line\">f(<span class=\"number\">200</span>)=</span><br><span class=\"line\"></span><br><span class=\"line\">sum =</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"number\">2.939015474060723</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"11\">\n<li>查阅测试excel文件的读取和写入函数xlsread,xlswrite，要求把测试的过程和结果放入实验报告.</li>\n</ol>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">num=xlsread(<span class=\"string\">&quot;Book1.xls&quot;</span>)</span><br><span class=\"line\">num(:,<span class=\"number\">1</span>)=[ ]</span><br><span class=\"line\">xlswrite(<span class=\"string\">&quot;Book1.xls&quot;</span>,num,<span class=\"string\">&#x27;A5&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<p>运行结果</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt; Testxls</span><br><span class=\"line\"></span><br><span class=\"line\">num =</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"number\">3</span>     <span class=\"number\">4</span>     <span class=\"number\">6</span>     <span class=\"number\">3</span>     <span class=\"number\">2</span></span><br><span class=\"line\">     <span class=\"number\">5</span>     <span class=\"number\">9</span>     <span class=\"number\">7</span>     <span class=\"number\">5</span>     <span class=\"number\">3</span></span><br><span class=\"line\">     <span class=\"number\">4</span>     <span class=\"number\">0</span>     <span class=\"number\">6</span>     <span class=\"number\">4</span>     <span class=\"number\">3</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">num =</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"number\">4</span>     <span class=\"number\">6</span>     <span class=\"number\">3</span>     <span class=\"number\">2</span></span><br><span class=\"line\">     <span class=\"number\">9</span>     <span class=\"number\">7</span>     <span class=\"number\">5</span>     <span class=\"number\">3</span></span><br><span class=\"line\">     <span class=\"number\">0</span>     <span class=\"number\">6</span>     <span class=\"number\">4</span>     <span class=\"number\">3</span></span><br><span class=\"line\"></span><br><span class=\"line\">Warning: Could not start Excel server <span class=\"keyword\">for</span> export.</span><br><span class=\"line\">XLSWRITE will attempt to write file in CSV format. </span><br><span class=\"line\">&gt; In xlswrite (line <span class=\"number\">181</span>)</span><br><span class=\"line\">  In Testxls (line <span class=\"number\">3</span>) </span><br></pre></td></tr></table></figure>\n\n<table><tr><td bgcolor=yellow>出现了无法写入的问题，num被写入到了新建的Book1.csv，而非原有的Book1.xls。此问题仅存在于macOS，原因为macOS上的Office目前不支持COM接口，目前无解。</td></tr></table>\n\n<ol start=\"12\">\n<li> 自己编写矩阵左右翻转、上下翻转函数，不得使用Matlab已经编写好的左右翻转和上下翻转函数。给一个具体的矩阵并做测试翻转.</li>\n</ol>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A = <span class=\"built_in\">magic</span>(<span class=\"number\">4</span>)</span><br><span class=\"line\">MatrixReserveFunc1(A)</span><br><span class=\"line\">MatrixReserveFunc2(A)</span><br></pre></td></tr></table></figure>\n\n<p><code>MatrixReserveFunc1.m</code></p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">MatrixReserveFunc1</span><span class=\"params\">(A)</span></span></span><br><span class=\"line\">    [m, n] = <span class=\"built_in\">size</span>(A);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> row = <span class=\"number\">1</span>:m / <span class=\"number\">2</span></span><br><span class=\"line\">        temp = A(row, :);</span><br><span class=\"line\">        A(row, :) = A(m - row + <span class=\"number\">1</span>, :);</span><br><span class=\"line\">        A(m - row + <span class=\"number\">1</span>, :) = temp;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    A</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<p><code>MatrixReserveFunc2.m</code></p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">MatrixReserveFunc2</span><span class=\"params\">(A)</span></span></span><br><span class=\"line\">    [m, n] = <span class=\"built_in\">size</span>(A);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> col = <span class=\"number\">1</span>:n / <span class=\"number\">2</span></span><br><span class=\"line\">        temp = A(:, col);</span><br><span class=\"line\">        A(:, col) = A(:, n - col + <span class=\"number\">1</span>);</span><br><span class=\"line\">        A(:, n - col + <span class=\"number\">1</span>) = temp;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    A</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>运行结果</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt; MatrixReserve</span><br><span class=\"line\"></span><br><span class=\"line\">A =</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"number\">16</span>     <span class=\"number\">2</span>     <span class=\"number\">3</span>    <span class=\"number\">13</span></span><br><span class=\"line\">     <span class=\"number\">5</span>    <span class=\"number\">11</span>    <span class=\"number\">10</span>     <span class=\"number\">8</span></span><br><span class=\"line\">     <span class=\"number\">9</span>     <span class=\"number\">7</span>     <span class=\"number\">6</span>    <span class=\"number\">12</span></span><br><span class=\"line\">     <span class=\"number\">4</span>    <span class=\"number\">14</span>    <span class=\"number\">15</span>     <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">A =</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"number\">4</span>    <span class=\"number\">14</span>    <span class=\"number\">15</span>     <span class=\"number\">1</span></span><br><span class=\"line\">     <span class=\"number\">9</span>     <span class=\"number\">7</span>     <span class=\"number\">6</span>    <span class=\"number\">12</span></span><br><span class=\"line\">     <span class=\"number\">5</span>    <span class=\"number\">11</span>    <span class=\"number\">10</span>     <span class=\"number\">8</span></span><br><span class=\"line\">    <span class=\"number\">16</span>     <span class=\"number\">2</span>     <span class=\"number\">3</span>    <span class=\"number\">13</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">A =</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"number\">13</span>     <span class=\"number\">3</span>     <span class=\"number\">2</span>    <span class=\"number\">16</span></span><br><span class=\"line\">     <span class=\"number\">8</span>    <span class=\"number\">10</span>    <span class=\"number\">11</span>     <span class=\"number\">5</span></span><br><span class=\"line\">    <span class=\"number\">12</span>     <span class=\"number\">6</span>     <span class=\"number\">7</span>     <span class=\"number\">9</span></span><br><span class=\"line\">     <span class=\"number\">1</span>    <span class=\"number\">15</span>    <span class=\"number\">14</span>     <span class=\"number\">4</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"13\">\n<li>编写函数，计算<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo stretchy=\"false\">!</mo><mo>+</mo><mn>2</mn><mo stretchy=\"false\">!</mo><mo>+</mo><mo separator=\"true\">⋅</mo><mo separator=\"true\">⋅</mo><mo separator=\"true\">⋅</mo><mo>+</mo><mn>20</mn><mo stretchy=\"false\">!</mo></mrow><annotation encoding=\"application/x-tex\">1!+2!+···+20!</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">!</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">2</span><span class=\"mclose\">!</span><span class=\"mord\">+</span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">+</span><span class=\"mord\">2</span><span class=\"mord\">0</span><span class=\"mclose\">!</span></span></span></span>和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo stretchy=\"false\">!</mo><mo>+</mo><mn>2</mn><mo stretchy=\"false\">!</mo><mo>+</mo><mo separator=\"true\">⋅</mo><mo separator=\"true\">⋅</mo><mo separator=\"true\">⋅</mo><mo>+</mo><mn>30</mn><mo stretchy=\"false\">!</mo></mrow><annotation encoding=\"application/x-tex\">1!+2!+···+30!</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">!</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">2</span><span class=\"mclose\">!</span><span class=\"mord\">+</span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">+</span><span class=\"mord\">3</span><span class=\"mord\">0</span><span class=\"mclose\">!</span></span></span></span></li>\n</ol>\n<p><code>TestFactorFunc.m</code></p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">y</span> = <span class=\"title\">TestFactorFunc</span><span class=\"params\">(n)</span></span></span><br><span class=\"line\">    fac = <span class=\"number\">1</span>;</span><br><span class=\"line\">    s = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> index1 = <span class=\"number\">1</span>:n</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> index2 = <span class=\"number\">1</span>:index1</span><br><span class=\"line\">            fac = fac * index2;</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">        s = s + fac;</span><br><span class=\"line\">        fac = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    y = s;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<p><code>TestFactor.m</code></p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">disp</span>(<span class=\"string\">&#x27;Factor(20)=&#x27;</span>)</span><br><span class=\"line\">sum=TestFactorFunc(<span class=\"number\">20</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">disp</span>(<span class=\"string\">&#x27;Factor(30)=&#x27;</span>)</span><br><span class=\"line\">sum=TestFactorFunc(<span class=\"number\">30</span>)</span><br></pre></td></tr></table></figure>\n<p>运行结果</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt; TestFactor</span><br><span class=\"line\">Factor(<span class=\"number\">20</span>)=</span><br><span class=\"line\"></span><br><span class=\"line\">sum =</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"number\">2.5613e+18</span></span><br><span class=\"line\"></span><br><span class=\"line\">Factor(<span class=\"number\">30</span>)=</span><br><span class=\"line\"></span><br><span class=\"line\">sum =</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"number\">2.7441e+32</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"14\">\n<li>编写斐波那契（Fibonacci）数列的函数，列出数列前40个数.提示：可以递归调用，也可以把数列的数放入数组中存储.</li>\n</ol>\n<p><code>TestFib.m</code></p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A=[ ]</span><br><span class=\"line\"><span class=\"keyword\">for</span> index = <span class=\"number\">1</span>:<span class=\"number\">40</span></span><br><span class=\"line\">    A=[A,TestFibFunc(index)];</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">A</span><br></pre></td></tr></table></figure>\n\n<p><code>TestFibFunc.m</code></p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">y</span> = <span class=\"title\">Fib</span><span class=\"params\">(n)</span></span></span><br><span class=\"line\">    A(<span class=\"number\">1</span>) = <span class=\"number\">1</span>;</span><br><span class=\"line\">    A(<span class=\"number\">2</span>) = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> <span class=\"built_in\">i</span> = <span class=\"number\">3</span>:n</span><br><span class=\"line\">        A(<span class=\"built_in\">i</span>) = A(<span class=\"built_in\">i</span> - <span class=\"number\">1</span>) + A(<span class=\"built_in\">i</span> - <span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    y = A(n);</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>运行结果</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt; TestFib</span><br><span class=\"line\"></span><br><span class=\"line\">A =</span><br><span class=\"line\"></span><br><span class=\"line\">     [ ]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">A =</span><br><span class=\"line\"></span><br><span class=\"line\">  Columns <span class=\"number\">1</span> through <span class=\"number\">9</span></span><br><span class=\"line\"></span><br><span class=\"line\">           <span class=\"number\">1</span>           <span class=\"number\">1</span>           <span class=\"number\">2</span>           <span class=\"number\">3</span>           <span class=\"number\">5</span>           <span class=\"number\">8</span>          <span class=\"number\">13</span>          <span class=\"number\">21</span>          <span class=\"number\">34</span></span><br><span class=\"line\"></span><br><span class=\"line\">  Columns <span class=\"number\">10</span> through <span class=\"number\">18</span></span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"number\">55</span>          <span class=\"number\">89</span>         <span class=\"number\">144</span>         <span class=\"number\">233</span>         <span class=\"number\">377</span>         <span class=\"number\">610</span>         <span class=\"number\">987</span>        <span class=\"number\">1597</span>        <span class=\"number\">2584</span></span><br><span class=\"line\"></span><br><span class=\"line\">  Columns <span class=\"number\">19</span> through <span class=\"number\">27</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"number\">4181</span>        <span class=\"number\">6765</span>       <span class=\"number\">10946</span>       <span class=\"number\">17711</span>       <span class=\"number\">28657</span>       <span class=\"number\">46368</span>       <span class=\"number\">75025</span>      <span class=\"number\">121393</span>      <span class=\"number\">196418</span></span><br><span class=\"line\"></span><br><span class=\"line\">  Columns <span class=\"number\">28</span> through <span class=\"number\">36</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"number\">317811</span>      <span class=\"number\">514229</span>      <span class=\"number\">832040</span>     <span class=\"number\">1346269</span>     <span class=\"number\">2178309</span>     <span class=\"number\">3524578</span>     <span class=\"number\">5702887</span>     <span class=\"number\">9227465</span>    <span class=\"number\">14930352</span></span><br><span class=\"line\"></span><br><span class=\"line\">  Columns <span class=\"number\">37</span> through <span class=\"number\">40</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"number\">24157817</span>    <span class=\"number\">39088169</span>    <span class=\"number\">63245986</span>   <span class=\"number\">102334155</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"15\">\n<li>编写课件中的猜数游戏，并做测试. 首先由计算机随机产生一个<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>100</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[1,100]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mclose\">]</span></span></span></span>之间的一个整数，然后由用户猜测所产生的这个数。根据用户猜测的情况给出不同的提示，如果猜测的数大于产生的数，则显示<code>High</code>，小于则显示<code>Low</code>，等于则显示<code>You won!</code>，同时退出游戏。用户最多有 10 次机会.</li>\n</ol>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fprintf(<span class=\"string\">&quot;游戏开始！\\n请输入你猜的数\\n&quot;</span>)</span><br><span class=\"line\">num=randi(<span class=\"number\">100</span>)</span><br><span class=\"line\">t=<span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> t&gt;<span class=\"number\">0</span></span><br><span class=\"line\">    t=t<span class=\"number\">-1</span>;</span><br><span class=\"line\">    x=input(<span class=\"string\">&#x27;&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> num==x</span><br><span class=\"line\">        fprintf(<span class=\"string\">&quot;You won!\\n&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> x&gt;num</span><br><span class=\"line\">            fprintf(<span class=\"string\">&quot;High!&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            fprintf(<span class=\"string\">&quot;Low!&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">        fprintf(<span class=\"string\">&quot;还剩%d次机会，请再次输入：&quot;</span>,t);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> t==<span class=\"number\">0</span></span><br><span class=\"line\">    fprintf(<span class=\"string\">&quot;机会为0，游戏结束!\\n&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"Next⬇️\"><a href=\"#Next⬇️\" class=\"headerlink\" title=\"Next⬇️\"></a><center>Next⬇️</center></h3><center><a href=\"http://lhxone.top/2021/03/07/Matlab实验1-3/\">Matlab练习1-3 🍺</a></center>"},{"title":"Matlab实验1-3","date":"2021-03-07T13:30:24.000Z","_content":"\n## Matlab计算圆周率\n\n#### 欧拉级数\n   > 收敛速度较慢\n   > 形式较为雅观\n<!-- more -->\n\n```Euler.m```\n```Matlab\nformat long;\nt = 9e7;\nd = 1;\n\nwhile d >= 1e-10\n    if d<=1e-9\n        t = t + 100;\n    else\n        t = t + 100000;\n    end\n    mypi = sqrt(6 * EulerSum(t))\n    d = abs(pi - mypi)\nend\n\nt    \n```\n\n```EulerSum.m```\n```Matlab\nfunction y = EulerFunc(n)\n    sum = 1;\n\n    for index = 2:n\n        sum = sum + 1 / (index^2);\n    end\n\n    y = sum;\n    return\nend\n\n```\n另一种计算方式：\n\n```Euler2.m```\n```Matlab\nformat long;\nt = 0;\nd = 1;\ns=0;\n\nwhile d >= 1e-10\n    t = t + 1;\n    s=s+1/(t^2);\n    mypi = sqrt(6 * s)\n    d = abs(pi - mypi);\nend\n\nt\n```\n   \n#### 拉马努金级数\n   > 收敛速度极快\n   > 只需计算一两步即可到达1e-8的精度\n```Matlab\nformat long;\nn = 0;\nd = 1;\ns = 0;\nsqrt_int = (2 * sqrt(2)) / 9801;\n\nwhile d >= 1e-8\n    s = s + (factorial(4 * n) * (1103 + 26390 * n)) / ((factorial(n)^4) * ((396)^(4 * n)));\n    mypi = (sqrt_int * s)^(- 1)\n    d = abs(pi - mypi)\n    n = n + 1;\nend\n\nn\n```\n\n#### 莱布尼茨公式\n\n\n\n{% katex %}\\frac{\\pi}4=1-\\frac13+\\frac15-\\frac17+\\cdot\\cdot\\cdot{% endkatex %}\n\n\n\n```Matlab\nformat long;\nd = 1;\nt = 0;\ns = 0;\nmypi = 0;\n\nwhile d >= 1e-2\n    s = s + ((-1)^t*(1/(2*t+1)));\n    mypi = 4 * s\n    d = abs(pi - mypi);\n    t = t + 1;\nend\n\nt\n```\n---\n<center>E N D</center>","source":"_posts/Matlab实验1-3.md","raw":"---\ntitle: Matlab实验1-3\ndate: 2021-03-07 21:30:24\ntags: Matlab\n---\n\n## Matlab计算圆周率\n\n#### 欧拉级数\n   > 收敛速度较慢\n   > 形式较为雅观\n<!-- more -->\n\n```Euler.m```\n```Matlab\nformat long;\nt = 9e7;\nd = 1;\n\nwhile d >= 1e-10\n    if d<=1e-9\n        t = t + 100;\n    else\n        t = t + 100000;\n    end\n    mypi = sqrt(6 * EulerSum(t))\n    d = abs(pi - mypi)\nend\n\nt    \n```\n\n```EulerSum.m```\n```Matlab\nfunction y = EulerFunc(n)\n    sum = 1;\n\n    for index = 2:n\n        sum = sum + 1 / (index^2);\n    end\n\n    y = sum;\n    return\nend\n\n```\n另一种计算方式：\n\n```Euler2.m```\n```Matlab\nformat long;\nt = 0;\nd = 1;\ns=0;\n\nwhile d >= 1e-10\n    t = t + 1;\n    s=s+1/(t^2);\n    mypi = sqrt(6 * s)\n    d = abs(pi - mypi);\nend\n\nt\n```\n   \n#### 拉马努金级数\n   > 收敛速度极快\n   > 只需计算一两步即可到达1e-8的精度\n```Matlab\nformat long;\nn = 0;\nd = 1;\ns = 0;\nsqrt_int = (2 * sqrt(2)) / 9801;\n\nwhile d >= 1e-8\n    s = s + (factorial(4 * n) * (1103 + 26390 * n)) / ((factorial(n)^4) * ((396)^(4 * n)));\n    mypi = (sqrt_int * s)^(- 1)\n    d = abs(pi - mypi)\n    n = n + 1;\nend\n\nn\n```\n\n#### 莱布尼茨公式\n\n\n\n{% katex %}\\frac{\\pi}4=1-\\frac13+\\frac15-\\frac17+\\cdot\\cdot\\cdot{% endkatex %}\n\n\n\n```Matlab\nformat long;\nd = 1;\nt = 0;\ns = 0;\nmypi = 0;\n\nwhile d >= 1e-2\n    s = s + ((-1)^t*(1/(2*t+1)));\n    mypi = 4 * s\n    d = abs(pi - mypi);\n    t = t + 1;\nend\n\nt\n```\n---\n<center>E N D</center>","slug":"Matlab实验1-3","published":1,"updated":"2021-04-13T03:30:24.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckojvxer8000qboe21hpg1yqg","content":"<h2 id=\"Matlab计算圆周率\"><a href=\"#Matlab计算圆周率\" class=\"headerlink\" title=\"Matlab计算圆周率\"></a>Matlab计算圆周率</h2><h4 id=\"欧拉级数\"><a href=\"#欧拉级数\" class=\"headerlink\" title=\"欧拉级数\"></a>欧拉级数</h4><blockquote>\n<p>收敛速度较慢<br>形式较为雅观</p>\n</blockquote>\n<span id=\"more\"></span>\n\n<p><code>Euler.m</code></p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">format long;</span><br><span class=\"line\">t = <span class=\"number\">9e7</span>;</span><br><span class=\"line\">d = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> d &gt;= <span class=\"number\">1e-10</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> d&lt;=<span class=\"number\">1e-9</span></span><br><span class=\"line\">        t = t + <span class=\"number\">100</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        t = t + <span class=\"number\">100000</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    mypi = <span class=\"built_in\">sqrt</span>(<span class=\"number\">6</span> * EulerSum(t))</span><br><span class=\"line\">    d = <span class=\"built_in\">abs</span>(<span class=\"built_in\">pi</span> - mypi)</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">t    </span><br></pre></td></tr></table></figure>\n\n<p><code>EulerSum.m</code></p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">y</span> = <span class=\"title\">EulerFunc</span><span class=\"params\">(n)</span></span></span><br><span class=\"line\">    sum = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> index = <span class=\"number\">2</span>:n</span><br><span class=\"line\">        sum = sum + <span class=\"number\">1</span> / (index^<span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    y = sum;</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>另一种计算方式：</p>\n<p><code>Euler2.m</code></p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">format long;</span><br><span class=\"line\">t = <span class=\"number\">0</span>;</span><br><span class=\"line\">d = <span class=\"number\">1</span>;</span><br><span class=\"line\">s=<span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> d &gt;= <span class=\"number\">1e-10</span></span><br><span class=\"line\">    t = t + <span class=\"number\">1</span>;</span><br><span class=\"line\">    s=s+<span class=\"number\">1</span>/(t^<span class=\"number\">2</span>);</span><br><span class=\"line\">    mypi = <span class=\"built_in\">sqrt</span>(<span class=\"number\">6</span> * s)</span><br><span class=\"line\">    d = <span class=\"built_in\">abs</span>(<span class=\"built_in\">pi</span> - mypi);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">t</span><br></pre></td></tr></table></figure>\n<h4 id=\"拉马努金级数\"><a href=\"#拉马努金级数\" class=\"headerlink\" title=\"拉马努金级数\"></a>拉马努金级数</h4><blockquote>\n<p>收敛速度极快<br>只需计算一两步即可到达1e-8的精度</p>\n</blockquote>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">format long;</span><br><span class=\"line\">n = <span class=\"number\">0</span>;</span><br><span class=\"line\">d = <span class=\"number\">1</span>;</span><br><span class=\"line\">s = <span class=\"number\">0</span>;</span><br><span class=\"line\">sqrt_int = (<span class=\"number\">2</span> * <span class=\"built_in\">sqrt</span>(<span class=\"number\">2</span>)) / <span class=\"number\">9801</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> d &gt;= <span class=\"number\">1e-8</span></span><br><span class=\"line\">    s = s + (<span class=\"built_in\">factorial</span>(<span class=\"number\">4</span> * n) * (<span class=\"number\">1103</span> + <span class=\"number\">26390</span> * n)) / ((<span class=\"built_in\">factorial</span>(n)^<span class=\"number\">4</span>) * ((<span class=\"number\">396</span>)^(<span class=\"number\">4</span> * n)));</span><br><span class=\"line\">    mypi = (sqrt_int * s)^(- <span class=\"number\">1</span>)</span><br><span class=\"line\">    d = <span class=\"built_in\">abs</span>(<span class=\"built_in\">pi</span> - mypi)</span><br><span class=\"line\">    n = n + <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">n</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"莱布尼茨公式\"><a href=\"#莱布尼茨公式\" class=\"headerlink\" title=\"莱布尼茨公式\"></a>莱布尼茨公式</h4><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mi>π</mi><mn>4</mn></mfrac><mo>=</mo><mn>1</mn><mo>−</mo><mfrac><mn>1</mn><mn>3</mn></mfrac><mo>+</mo><mfrac><mn>1</mn><mn>5</mn></mfrac><mo>−</mo><mfrac><mn>1</mn><mn>7</mn></mfrac><mo>+</mo><mo>⋅</mo><mo>⋅</mo><mo>⋅</mo></mrow><annotation encoding=\"application/x-tex\">\\frac{\\pi}4=1-\\frac13+\\frac15-\\frac17+\\cdot\\cdot\\cdot</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.040392em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.695392em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.190108em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.190108em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">5</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.190108em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">7</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.44445em;vertical-align:0em;\"></span><span class=\"mord\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.44445em;vertical-align:0em;\"></span><span class=\"mord\">⋅</span></span></span></span>\n\n\n\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">format long;</span><br><span class=\"line\">d = <span class=\"number\">1</span>;</span><br><span class=\"line\">t = <span class=\"number\">0</span>;</span><br><span class=\"line\">s = <span class=\"number\">0</span>;</span><br><span class=\"line\">mypi = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> d &gt;= <span class=\"number\">1e-2</span></span><br><span class=\"line\">    s = s + ((<span class=\"number\">-1</span>)^t*(<span class=\"number\">1</span>/(<span class=\"number\">2</span>*t+<span class=\"number\">1</span>)));</span><br><span class=\"line\">    mypi = <span class=\"number\">4</span> * s</span><br><span class=\"line\">    d = <span class=\"built_in\">abs</span>(<span class=\"built_in\">pi</span> - mypi);</span><br><span class=\"line\">    t = t + <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">t</span><br></pre></td></tr></table></figure>\n<hr>\n<center>E N D</center><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","site":{"data":{}},"excerpt":"Matlab计算圆周率\n欧拉级数\n收敛速度较慢\n形式较为雅观\n\nEuler.m\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\nformat long;\nt = 9e7;\nd = 1;\n\nwhile d >= 1e-10\n    if d<=1e-9\n        t = t + 100;\n    else\n        t = t + 100000;\n    end\n    mypi = sqrt(6 * EulerSum(t))\n    d = abs(pi - mypi)\nend\n\nt    \n\n\nEulerSum.m\n\n1\n2\n3\n4\n5\n6\n7\n8\n","more":"<p><code>Euler.m</code></p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">format long;</span><br><span class=\"line\">t = <span class=\"number\">9e7</span>;</span><br><span class=\"line\">d = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> d &gt;= <span class=\"number\">1e-10</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> d&lt;=<span class=\"number\">1e-9</span></span><br><span class=\"line\">        t = t + <span class=\"number\">100</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        t = t + <span class=\"number\">100000</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    mypi = <span class=\"built_in\">sqrt</span>(<span class=\"number\">6</span> * EulerSum(t))</span><br><span class=\"line\">    d = <span class=\"built_in\">abs</span>(<span class=\"built_in\">pi</span> - mypi)</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">t    </span><br></pre></td></tr></table></figure>\n\n<p><code>EulerSum.m</code></p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">y</span> = <span class=\"title\">EulerFunc</span><span class=\"params\">(n)</span></span></span><br><span class=\"line\">    sum = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> index = <span class=\"number\">2</span>:n</span><br><span class=\"line\">        sum = sum + <span class=\"number\">1</span> / (index^<span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    y = sum;</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>另一种计算方式：</p>\n<p><code>Euler2.m</code></p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">format long;</span><br><span class=\"line\">t = <span class=\"number\">0</span>;</span><br><span class=\"line\">d = <span class=\"number\">1</span>;</span><br><span class=\"line\">s=<span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> d &gt;= <span class=\"number\">1e-10</span></span><br><span class=\"line\">    t = t + <span class=\"number\">1</span>;</span><br><span class=\"line\">    s=s+<span class=\"number\">1</span>/(t^<span class=\"number\">2</span>);</span><br><span class=\"line\">    mypi = <span class=\"built_in\">sqrt</span>(<span class=\"number\">6</span> * s)</span><br><span class=\"line\">    d = <span class=\"built_in\">abs</span>(<span class=\"built_in\">pi</span> - mypi);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">t</span><br></pre></td></tr></table></figure>\n<h4 id=\"拉马努金级数\"><a href=\"#拉马努金级数\" class=\"headerlink\" title=\"拉马努金级数\"></a>拉马努金级数</h4><blockquote>\n<p>收敛速度极快<br>只需计算一两步即可到达1e-8的精度</p>\n</blockquote>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">format long;</span><br><span class=\"line\">n = <span class=\"number\">0</span>;</span><br><span class=\"line\">d = <span class=\"number\">1</span>;</span><br><span class=\"line\">s = <span class=\"number\">0</span>;</span><br><span class=\"line\">sqrt_int = (<span class=\"number\">2</span> * <span class=\"built_in\">sqrt</span>(<span class=\"number\">2</span>)) / <span class=\"number\">9801</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> d &gt;= <span class=\"number\">1e-8</span></span><br><span class=\"line\">    s = s + (<span class=\"built_in\">factorial</span>(<span class=\"number\">4</span> * n) * (<span class=\"number\">1103</span> + <span class=\"number\">26390</span> * n)) / ((<span class=\"built_in\">factorial</span>(n)^<span class=\"number\">4</span>) * ((<span class=\"number\">396</span>)^(<span class=\"number\">4</span> * n)));</span><br><span class=\"line\">    mypi = (sqrt_int * s)^(- <span class=\"number\">1</span>)</span><br><span class=\"line\">    d = <span class=\"built_in\">abs</span>(<span class=\"built_in\">pi</span> - mypi)</span><br><span class=\"line\">    n = n + <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">n</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"莱布尼茨公式\"><a href=\"#莱布尼茨公式\" class=\"headerlink\" title=\"莱布尼茨公式\"></a>莱布尼茨公式</h4><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mi>π</mi><mn>4</mn></mfrac><mo>=</mo><mn>1</mn><mo>−</mo><mfrac><mn>1</mn><mn>3</mn></mfrac><mo>+</mo><mfrac><mn>1</mn><mn>5</mn></mfrac><mo>−</mo><mfrac><mn>1</mn><mn>7</mn></mfrac><mo>+</mo><mo>⋅</mo><mo>⋅</mo><mo>⋅</mo></mrow><annotation encoding=\"application/x-tex\">\\frac{\\pi}4=1-\\frac13+\\frac15-\\frac17+\\cdot\\cdot\\cdot</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.040392em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.695392em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">π</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.190108em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.190108em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">5</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.190108em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">7</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.44445em;vertical-align:0em;\"></span><span class=\"mord\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.44445em;vertical-align:0em;\"></span><span class=\"mord\">⋅</span></span></span></span>\n\n\n\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">format long;</span><br><span class=\"line\">d = <span class=\"number\">1</span>;</span><br><span class=\"line\">t = <span class=\"number\">0</span>;</span><br><span class=\"line\">s = <span class=\"number\">0</span>;</span><br><span class=\"line\">mypi = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> d &gt;= <span class=\"number\">1e-2</span></span><br><span class=\"line\">    s = s + ((<span class=\"number\">-1</span>)^t*(<span class=\"number\">1</span>/(<span class=\"number\">2</span>*t+<span class=\"number\">1</span>)));</span><br><span class=\"line\">    mypi = <span class=\"number\">4</span> * s</span><br><span class=\"line\">    d = <span class=\"built_in\">abs</span>(<span class=\"built_in\">pi</span> - mypi);</span><br><span class=\"line\">    t = t + <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">t</span><br></pre></td></tr></table></figure>\n<hr>\n<center>E N D</center>"},{"title":"Matlab实验2-2","date":"2021-04-05T01:55:07.000Z","_content":"\n## Matlab实验2-1\n\n>Matlab图形操作实验\n\n---\n## 第5讲例题：5-1，5-3，5-4,5-5,5-6，5-7，5-8,5-9，5-10,5-15\n\n\n<!-- more -->\n### 5-1：三维螺旋线 \n\n```Matlab\nt = 0:0.1:10 * pi;\nx = t .* sin(t);\ny = t .* cos(t);\nz = t;\nplot3(x, y, z, 'r * -.');\n```\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMtNJs.png\" width=\"50%\"></center>\n\n### 5-3：meshgrid网格生成函数 \n\n```Matlab\nx = [1, 2, 3];\ny = [4, 7, 9, 10];\n[X, Y] = meshgrid(x, y)\n```\n\n>运行结果\n\n```Matlab\nX =\n\n     1     2     3\n     1     2     3\n     1     2     3\n     1     2     3\n\n\nY =\n\n     4     4     4\n     7     7     7\n     9     9     9\n    10    10    10\n```\n\n\n### 5-4：“墨西哥帽子”\n\n```Matlab\nx = -8:0.5:8;\ny = -8:0.5:8;\n[X, Y] = meshgrid(x, y);\nr = sqrt(X.^2 + Y.^2) + eps;    %会出现r=0的情况，因此加一个eps,eps表示浮点数的最小单位\nZ = sin(r) ./ r;\nmesh(X, Y, Z)\n```\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMttij.png\" width=\"50%\"></center>\n\n### 5-5：绘制等高线 meshc \n\n```Matlab\n[X, Y] = meshgrid(-8:0.5:8);\nr = sqrt(X.^2 + Y.^2) + eps;\nZ = sin(r) ./ r;\nmeshc(X, Y, Z)\n```\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMtJoQ.png\" width=\"50%\"></center>\n\n### 5-6：绘制边界面屏蔽 meshz \n\n```Matlab\n[X, Y] = meshgrid(-8:0.5:8);\nr = sqrt(X.^2 + Y.^2) + eps;\nZ = sin(r) ./ r;\nmeshz(X, Y, Z)\n```\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMtGdg.png\" width=\"50%\"></center>\n\n### 5-7：画图{% katex %}z=x^2+y^2,(-3 \\le x,y \\le 3){% endkatex %},{% katex %}z=x^2-3y^2,(-10 \\le x,y \\le 10){% endkatex %}.\n\n```Matlab\n[X1, Y1] = meshgrid(-3:0.1:3);\nZ1 = X1.^2 + Y1.^2;\nsubplot(2, 1, 1);\nmesh(X1, Y1, Z1), title('z = x^2 + y^2');\n[X2, Y2] = meshgrid(-10:0.1:10);\nZ2 = X2.^2 - 3 * Y2.^2;\nsubplot(2, 1, 2)\nmesh(X2, Y2, Z2), title('z = x^2 - 3y^2马鞍面')\n\n```\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMtazq.png\" width=\"50%\"></center>\n\n\n\n### 5-8：ezmesh、ezsurf 函数\n\n```Matlab\nezmesh('-cos(sqrt(x^2+y^2))', [-4, 4], [-4, 4])\nfigure\nezsurf('(6+2*cos(u))*cos(v)', '(6+2*cos(u))*sin(v)', '2 * sin(u)', [0, 2 * pi, 0, 2 * pi])\nhold on\nezsurf('2*sin(u).*cos(v)', '2*sin(u).*sin(v)', '2*cos(u)', [0, pi, 0, 2 * pi])\naxis equal\nhold off\n```\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMNifs.png\" width=\"50%\"></center>\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMNkpn.png\" width=\"50%\"></center>\n\n\n### 5-9：画图{%katex%}x^2+y^2+z^2=1{%endkatex%}和{%katex%}x^2+y^2+z^2=4{%endkatex%}的图像.\n\n```Matlab\nv = [-2 2 -2 2 -2 2];\nsubplot(1, 2, 1), sphere(30), axis(v);\ntitle('半径为1的球面');\nsubplot(1, 2, 2), [x, y, z] = sphere(30);\nsurf(2 * x, 2 * y, 2 * z);\ntitle('半径为2的球面');\n```\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMNAlq.png\" width=\"75%\"></center>\n\n### 5-10：柱面作图\n\n```Matlab\nsubplot(1, 3, 1), cylinder;\nsubplot(1, 3, 2), cylinder([3, 2]);\nsubplot(1, 3, 3), t = -pi:pi / 10:pi;\n[x, y, z] = cylinder(1 + sin(t));\nsurf(x, y, z)\n```\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMNCkQ.png\" width=\"75%\"></center>\n\n### 5-15：hidden透视控制\n\n```Matlab\n[x, y, z] = sphere(50);\nx1 = 2 * x;\ny1 = 2 * y;\nz1 = 2 * z;\nsurf(x, y, z);\nshading interp;\nhold on\nmesh(x1, y1, z1), colormap(hot)\nhidden off;\naxis equal;\n```\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMNPYj.png\" width=\"50%\"></center>\n\n---\n\n\n### <center>Next⬇️</center>\n\n<center><a href=\"http://lhxone.top/2021/04/06/Matlab实验2-3/\">Matlab练习2-3 🍺</a></center>","source":"_posts/Matlab实验2-2.md","raw":"---\ntitle: Matlab实验2-2\ndate: 2021-04-05 09:55:07\ntags: Matlab\n---\n\n## Matlab实验2-1\n\n>Matlab图形操作实验\n\n---\n## 第5讲例题：5-1，5-3，5-4,5-5,5-6，5-7，5-8,5-9，5-10,5-15\n\n\n<!-- more -->\n### 5-1：三维螺旋线 \n\n```Matlab\nt = 0:0.1:10 * pi;\nx = t .* sin(t);\ny = t .* cos(t);\nz = t;\nplot3(x, y, z, 'r * -.');\n```\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMtNJs.png\" width=\"50%\"></center>\n\n### 5-3：meshgrid网格生成函数 \n\n```Matlab\nx = [1, 2, 3];\ny = [4, 7, 9, 10];\n[X, Y] = meshgrid(x, y)\n```\n\n>运行结果\n\n```Matlab\nX =\n\n     1     2     3\n     1     2     3\n     1     2     3\n     1     2     3\n\n\nY =\n\n     4     4     4\n     7     7     7\n     9     9     9\n    10    10    10\n```\n\n\n### 5-4：“墨西哥帽子”\n\n```Matlab\nx = -8:0.5:8;\ny = -8:0.5:8;\n[X, Y] = meshgrid(x, y);\nr = sqrt(X.^2 + Y.^2) + eps;    %会出现r=0的情况，因此加一个eps,eps表示浮点数的最小单位\nZ = sin(r) ./ r;\nmesh(X, Y, Z)\n```\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMttij.png\" width=\"50%\"></center>\n\n### 5-5：绘制等高线 meshc \n\n```Matlab\n[X, Y] = meshgrid(-8:0.5:8);\nr = sqrt(X.^2 + Y.^2) + eps;\nZ = sin(r) ./ r;\nmeshc(X, Y, Z)\n```\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMtJoQ.png\" width=\"50%\"></center>\n\n### 5-6：绘制边界面屏蔽 meshz \n\n```Matlab\n[X, Y] = meshgrid(-8:0.5:8);\nr = sqrt(X.^2 + Y.^2) + eps;\nZ = sin(r) ./ r;\nmeshz(X, Y, Z)\n```\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMtGdg.png\" width=\"50%\"></center>\n\n### 5-7：画图{% katex %}z=x^2+y^2,(-3 \\le x,y \\le 3){% endkatex %},{% katex %}z=x^2-3y^2,(-10 \\le x,y \\le 10){% endkatex %}.\n\n```Matlab\n[X1, Y1] = meshgrid(-3:0.1:3);\nZ1 = X1.^2 + Y1.^2;\nsubplot(2, 1, 1);\nmesh(X1, Y1, Z1), title('z = x^2 + y^2');\n[X2, Y2] = meshgrid(-10:0.1:10);\nZ2 = X2.^2 - 3 * Y2.^2;\nsubplot(2, 1, 2)\nmesh(X2, Y2, Z2), title('z = x^2 - 3y^2马鞍面')\n\n```\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMtazq.png\" width=\"50%\"></center>\n\n\n\n### 5-8：ezmesh、ezsurf 函数\n\n```Matlab\nezmesh('-cos(sqrt(x^2+y^2))', [-4, 4], [-4, 4])\nfigure\nezsurf('(6+2*cos(u))*cos(v)', '(6+2*cos(u))*sin(v)', '2 * sin(u)', [0, 2 * pi, 0, 2 * pi])\nhold on\nezsurf('2*sin(u).*cos(v)', '2*sin(u).*sin(v)', '2*cos(u)', [0, pi, 0, 2 * pi])\naxis equal\nhold off\n```\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMNifs.png\" width=\"50%\"></center>\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMNkpn.png\" width=\"50%\"></center>\n\n\n### 5-9：画图{%katex%}x^2+y^2+z^2=1{%endkatex%}和{%katex%}x^2+y^2+z^2=4{%endkatex%}的图像.\n\n```Matlab\nv = [-2 2 -2 2 -2 2];\nsubplot(1, 2, 1), sphere(30), axis(v);\ntitle('半径为1的球面');\nsubplot(1, 2, 2), [x, y, z] = sphere(30);\nsurf(2 * x, 2 * y, 2 * z);\ntitle('半径为2的球面');\n```\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMNAlq.png\" width=\"75%\"></center>\n\n### 5-10：柱面作图\n\n```Matlab\nsubplot(1, 3, 1), cylinder;\nsubplot(1, 3, 2), cylinder([3, 2]);\nsubplot(1, 3, 3), t = -pi:pi / 10:pi;\n[x, y, z] = cylinder(1 + sin(t));\nsurf(x, y, z)\n```\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMNCkQ.png\" width=\"75%\"></center>\n\n### 5-15：hidden透视控制\n\n```Matlab\n[x, y, z] = sphere(50);\nx1 = 2 * x;\ny1 = 2 * y;\nz1 = 2 * z;\nsurf(x, y, z);\nshading interp;\nhold on\nmesh(x1, y1, z1), colormap(hot)\nhidden off;\naxis equal;\n```\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMNPYj.png\" width=\"50%\"></center>\n\n---\n\n\n### <center>Next⬇️</center>\n\n<center><a href=\"http://lhxone.top/2021/04/06/Matlab实验2-3/\">Matlab练习2-3 🍺</a></center>","slug":"Matlab实验2-2","published":1,"updated":"2021-04-13T03:30:38.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckojvxer9000sboe2chyt2mqd","content":"<h2 id=\"Matlab实验2-1\"><a href=\"#Matlab实验2-1\" class=\"headerlink\" title=\"Matlab实验2-1\"></a>Matlab实验2-1</h2><blockquote>\n<p>Matlab图形操作实验</p>\n</blockquote>\n<hr>\n<h2 id=\"第5讲例题：5-1，5-3，5-4-5-5-5-6，5-7，5-8-5-9，5-10-5-15\"><a href=\"#第5讲例题：5-1，5-3，5-4-5-5-5-6，5-7，5-8-5-9，5-10-5-15\" class=\"headerlink\" title=\"第5讲例题：5-1，5-3，5-4,5-5,5-6，5-7，5-8,5-9，5-10,5-15\"></a>第5讲例题：5-1，5-3，5-4,5-5,5-6，5-7，5-8,5-9，5-10,5-15</h2><span id=\"more\"></span>\n<h3 id=\"5-1：三维螺旋线\"><a href=\"#5-1：三维螺旋线\" class=\"headerlink\" title=\"5-1：三维螺旋线\"></a>5-1：三维螺旋线</h3><figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">t = <span class=\"number\">0</span>:<span class=\"number\">0.1</span>:<span class=\"number\">10</span> * <span class=\"built_in\">pi</span>;</span><br><span class=\"line\">x = t .* <span class=\"built_in\">sin</span>(t);</span><br><span class=\"line\">y = t .* <span class=\"built_in\">cos</span>(t);</span><br><span class=\"line\">z = t;</span><br><span class=\"line\"><span class=\"built_in\">plot3</span>(x, y, z, <span class=\"string\">&#x27;r * -.&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMtNJs.png\" width=\"50%\"></center>\n\n<h3 id=\"5-3：meshgrid网格生成函数\"><a href=\"#5-3：meshgrid网格生成函数\" class=\"headerlink\" title=\"5-3：meshgrid网格生成函数\"></a>5-3：meshgrid网格生成函数</h3><figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\">y = [<span class=\"number\">4</span>, <span class=\"number\">7</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>];</span><br><span class=\"line\">[X, Y] = <span class=\"built_in\">meshgrid</span>(x, y)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>运行结果</p>\n</blockquote>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">X =</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"number\">1</span>     <span class=\"number\">2</span>     <span class=\"number\">3</span></span><br><span class=\"line\">     <span class=\"number\">1</span>     <span class=\"number\">2</span>     <span class=\"number\">3</span></span><br><span class=\"line\">     <span class=\"number\">1</span>     <span class=\"number\">2</span>     <span class=\"number\">3</span></span><br><span class=\"line\">     <span class=\"number\">1</span>     <span class=\"number\">2</span>     <span class=\"number\">3</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Y =</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"number\">4</span>     <span class=\"number\">4</span>     <span class=\"number\">4</span></span><br><span class=\"line\">     <span class=\"number\">7</span>     <span class=\"number\">7</span>     <span class=\"number\">7</span></span><br><span class=\"line\">     <span class=\"number\">9</span>     <span class=\"number\">9</span>     <span class=\"number\">9</span></span><br><span class=\"line\">    <span class=\"number\">10</span>    <span class=\"number\">10</span>    <span class=\"number\">10</span></span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"5-4：“墨西哥帽子”\"><a href=\"#5-4：“墨西哥帽子”\" class=\"headerlink\" title=\"5-4：“墨西哥帽子”\"></a>5-4：“墨西哥帽子”</h3><figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x = <span class=\"number\">-8</span>:<span class=\"number\">0.5</span>:<span class=\"number\">8</span>;</span><br><span class=\"line\">y = <span class=\"number\">-8</span>:<span class=\"number\">0.5</span>:<span class=\"number\">8</span>;</span><br><span class=\"line\">[X, Y] = <span class=\"built_in\">meshgrid</span>(x, y);</span><br><span class=\"line\">r = <span class=\"built_in\">sqrt</span>(X.^<span class=\"number\">2</span> + Y.^<span class=\"number\">2</span>) + <span class=\"built_in\">eps</span>;    <span class=\"comment\">%会出现r=0的情况，因此加一个eps,eps表示浮点数的最小单位</span></span><br><span class=\"line\">Z = <span class=\"built_in\">sin</span>(r) ./ r;</span><br><span class=\"line\">mesh(X, Y, Z)</span><br></pre></td></tr></table></figure>\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMttij.png\" width=\"50%\"></center>\n\n<h3 id=\"5-5：绘制等高线-meshc\"><a href=\"#5-5：绘制等高线-meshc\" class=\"headerlink\" title=\"5-5：绘制等高线 meshc\"></a>5-5：绘制等高线 meshc</h3><figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[X, Y] = <span class=\"built_in\">meshgrid</span>(<span class=\"number\">-8</span>:<span class=\"number\">0.5</span>:<span class=\"number\">8</span>);</span><br><span class=\"line\">r = <span class=\"built_in\">sqrt</span>(X.^<span class=\"number\">2</span> + Y.^<span class=\"number\">2</span>) + <span class=\"built_in\">eps</span>;</span><br><span class=\"line\">Z = <span class=\"built_in\">sin</span>(r) ./ r;</span><br><span class=\"line\">meshc(X, Y, Z)</span><br></pre></td></tr></table></figure>\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMtJoQ.png\" width=\"50%\"></center>\n\n<h3 id=\"5-6：绘制边界面屏蔽-meshz\"><a href=\"#5-6：绘制边界面屏蔽-meshz\" class=\"headerlink\" title=\"5-6：绘制边界面屏蔽 meshz\"></a>5-6：绘制边界面屏蔽 meshz</h3><figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[X, Y] = <span class=\"built_in\">meshgrid</span>(<span class=\"number\">-8</span>:<span class=\"number\">0.5</span>:<span class=\"number\">8</span>);</span><br><span class=\"line\">r = <span class=\"built_in\">sqrt</span>(X.^<span class=\"number\">2</span> + Y.^<span class=\"number\">2</span>) + <span class=\"built_in\">eps</span>;</span><br><span class=\"line\">Z = <span class=\"built_in\">sin</span>(r) ./ r;</span><br><span class=\"line\">meshz(X, Y, Z)</span><br></pre></td></tr></table></figure>\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMtGdg.png\" width=\"50%\"></center>\n\n<h3 id=\"5-7：画图\"><a href=\"#5-7：画图\" class=\"headerlink\" title=\"5-7：画图,.\"></a>5-7：画图<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>z</mi><mo>=</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msup><mi>y</mi><mn>2</mn></msup><mo separator=\"true\">,</mo><mo stretchy=\"false\">(</mo><mo>−</mo><mn>3</mn><mo>≤</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo>≤</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">z=x^2+y^2,(-3 \\le x,y \\le 3)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.897438em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8304100000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">3</span><span class=\"mclose\">)</span></span></span></span>,<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>z</mi><mo>=</mo><msup><mi>x</mi><mn>2</mn></msup><mo>−</mo><mn>3</mn><msup><mi>y</mi><mn>2</mn></msup><mo separator=\"true\">,</mo><mo stretchy=\"false\">(</mo><mo>−</mo><mn>10</mn><mo>≤</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo>≤</mo><mn>10</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">z=x^2-3y^2,(-10 \\le x,y \\le 10)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.897438em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord\">3</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8304100000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span></span></span>.</h3><figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[X1, Y1] = <span class=\"built_in\">meshgrid</span>(<span class=\"number\">-3</span>:<span class=\"number\">0.1</span>:<span class=\"number\">3</span>);</span><br><span class=\"line\">Z1 = X1.^<span class=\"number\">2</span> + Y1.^<span class=\"number\">2</span>;</span><br><span class=\"line\">subplot(<span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">mesh(X1, Y1, Z1), title(<span class=\"string\">&#x27;z = x^2 + y^2&#x27;</span>);</span><br><span class=\"line\">[X2, Y2] = <span class=\"built_in\">meshgrid</span>(<span class=\"number\">-10</span>:<span class=\"number\">0.1</span>:<span class=\"number\">10</span>);</span><br><span class=\"line\">Z2 = X2.^<span class=\"number\">2</span> - <span class=\"number\">3</span> * Y2.^<span class=\"number\">2</span>;</span><br><span class=\"line\">subplot(<span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\">mesh(X2, Y2, Z2), title(<span class=\"string\">&#x27;z = x^2 - 3y^2马鞍面&#x27;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMtazq.png\" width=\"50%\"></center>\n\n\n\n<h3 id=\"5-8：ezmesh、ezsurf-函数\"><a href=\"#5-8：ezmesh、ezsurf-函数\" class=\"headerlink\" title=\"5-8：ezmesh、ezsurf 函数\"></a>5-8：ezmesh、ezsurf 函数</h3><figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ezmesh(<span class=\"string\">&#x27;-cos(sqrt(x^2+y^2))&#x27;</span>, [<span class=\"number\">-4</span>, <span class=\"number\">4</span>], [<span class=\"number\">-4</span>, <span class=\"number\">4</span>])</span><br><span class=\"line\"><span class=\"built_in\">figure</span></span><br><span class=\"line\">ezsurf(<span class=\"string\">&#x27;(6+2*cos(u))*cos(v)&#x27;</span>, <span class=\"string\">&#x27;(6+2*cos(u))*sin(v)&#x27;</span>, <span class=\"string\">&#x27;2 * sin(u)&#x27;</span>, [<span class=\"number\">0</span>, <span class=\"number\">2</span> * <span class=\"built_in\">pi</span>, <span class=\"number\">0</span>, <span class=\"number\">2</span> * <span class=\"built_in\">pi</span>])</span><br><span class=\"line\"><span class=\"built_in\">hold</span> on</span><br><span class=\"line\">ezsurf(<span class=\"string\">&#x27;2*sin(u).*cos(v)&#x27;</span>, <span class=\"string\">&#x27;2*sin(u).*sin(v)&#x27;</span>, <span class=\"string\">&#x27;2*cos(u)&#x27;</span>, [<span class=\"number\">0</span>, <span class=\"built_in\">pi</span>, <span class=\"number\">0</span>, <span class=\"number\">2</span> * <span class=\"built_in\">pi</span>])</span><br><span class=\"line\">axis equal</span><br><span class=\"line\"><span class=\"built_in\">hold</span> off</span><br></pre></td></tr></table></figure>\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMNifs.png\" width=\"50%\"></center>\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMNkpn.png\" width=\"50%\"></center>\n\n\n<h3 id=\"5-9：画图和的图像\"><a href=\"#5-9：画图和的图像\" class=\"headerlink\" title=\"5-9：画图和的图像.\"></a>5-9：画图<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msup><mi>y</mi><mn>2</mn></msup><mo>+</mo><msup><mi>z</mi><mn>2</mn></msup><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">x^2+y^2+z^2=1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.897438em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.008548em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msup><mi>y</mi><mn>2</mn></msup><mo>+</mo><msup><mi>z</mi><mn>2</mn></msup><mo>=</mo><mn>4</mn></mrow><annotation encoding=\"application/x-tex\">x^2+y^2+z^2=4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.897438em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.008548em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">4</span></span></span></span>的图像.</h3><figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v = [<span class=\"number\">-2</span> <span class=\"number\">2</span> <span class=\"number\">-2</span> <span class=\"number\">2</span> <span class=\"number\">-2</span> <span class=\"number\">2</span>];</span><br><span class=\"line\">subplot(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>), sphere(<span class=\"number\">30</span>), axis(v);</span><br><span class=\"line\">title(<span class=\"string\">&#x27;半径为1的球面&#x27;</span>);</span><br><span class=\"line\">subplot(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>), [x, y, z] = sphere(<span class=\"number\">30</span>);</span><br><span class=\"line\">surf(<span class=\"number\">2</span> * x, <span class=\"number\">2</span> * y, <span class=\"number\">2</span> * z);</span><br><span class=\"line\">title(<span class=\"string\">&#x27;半径为2的球面&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMNAlq.png\" width=\"75%\"></center>\n\n<h3 id=\"5-10：柱面作图\"><a href=\"#5-10：柱面作图\" class=\"headerlink\" title=\"5-10：柱面作图\"></a>5-10：柱面作图</h3><figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">subplot(<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">1</span>), cylinder;</span><br><span class=\"line\">subplot(<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>), cylinder([<span class=\"number\">3</span>, <span class=\"number\">2</span>]);</span><br><span class=\"line\">subplot(<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">3</span>), t = -<span class=\"built_in\">pi</span>:<span class=\"built_in\">pi</span> / <span class=\"number\">10</span>:<span class=\"built_in\">pi</span>;</span><br><span class=\"line\">[x, y, z] = cylinder(<span class=\"number\">1</span> + <span class=\"built_in\">sin</span>(t));</span><br><span class=\"line\">surf(x, y, z)</span><br></pre></td></tr></table></figure>\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMNCkQ.png\" width=\"75%\"></center>\n\n<h3 id=\"5-15：hidden透视控制\"><a href=\"#5-15：hidden透视控制\" class=\"headerlink\" title=\"5-15：hidden透视控制\"></a>5-15：hidden透视控制</h3><figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[x, y, z] = sphere(<span class=\"number\">50</span>);</span><br><span class=\"line\">x1 = <span class=\"number\">2</span> * x;</span><br><span class=\"line\">y1 = <span class=\"number\">2</span> * y;</span><br><span class=\"line\">z1 = <span class=\"number\">2</span> * z;</span><br><span class=\"line\">surf(x, y, z);</span><br><span class=\"line\">shading interp;</span><br><span class=\"line\"><span class=\"built_in\">hold</span> on</span><br><span class=\"line\">mesh(x1, y1, z1), colormap(hot)</span><br><span class=\"line\">hidden off;</span><br><span class=\"line\">axis equal;</span><br></pre></td></tr></table></figure>\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMNPYj.png\" width=\"50%\"></center>\n\n<hr>\n<h3 id=\"Next⬇️\"><a href=\"#Next⬇️\" class=\"headerlink\" title=\"Next⬇️\"></a><center>Next⬇️</center></h3><center><a href=\"http://lhxone.top/2021/04/06/Matlab实验2-3/\">Matlab练习2-3 🍺</a></center><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","site":{"data":{}},"excerpt":"Matlab实验2-1\nMatlab图形操作实验\n\n\n\n\n第5讲例题：5-1，5-3，5-4,5-5,5-6，5-7，5-8,5-9，5-10,5-15\n5-1：三维螺旋线\n1\n2\n3\n4\n5\n\n\nt = 0:0.1:10 * pi;\nx = t .* sin(t);\ny = t .* cos(t);\nz = t;\nplot3(x, y, z, 'r * -.');\n\n\n5-3：meshgrid网格生成函数\n1\n2\n3\n\n\nx = [1, 2, 3];\ny = [4, 7, 9, 10];\n[X, Y] = meshgrid(x, y)\n\n\n运行结果\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10","more":"<h3 id=\"5-1：三维螺旋线\"><a href=\"#5-1：三维螺旋线\" class=\"headerlink\" title=\"5-1：三维螺旋线\"></a>5-1：三维螺旋线</h3><figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">t = <span class=\"number\">0</span>:<span class=\"number\">0.1</span>:<span class=\"number\">10</span> * <span class=\"built_in\">pi</span>;</span><br><span class=\"line\">x = t .* <span class=\"built_in\">sin</span>(t);</span><br><span class=\"line\">y = t .* <span class=\"built_in\">cos</span>(t);</span><br><span class=\"line\">z = t;</span><br><span class=\"line\"><span class=\"built_in\">plot3</span>(x, y, z, <span class=\"string\">&#x27;r * -.&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMtNJs.png\" width=\"50%\"></center>\n\n<h3 id=\"5-3：meshgrid网格生成函数\"><a href=\"#5-3：meshgrid网格生成函数\" class=\"headerlink\" title=\"5-3：meshgrid网格生成函数\"></a>5-3：meshgrid网格生成函数</h3><figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\">y = [<span class=\"number\">4</span>, <span class=\"number\">7</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>];</span><br><span class=\"line\">[X, Y] = <span class=\"built_in\">meshgrid</span>(x, y)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>运行结果</p>\n</blockquote>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">X =</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"number\">1</span>     <span class=\"number\">2</span>     <span class=\"number\">3</span></span><br><span class=\"line\">     <span class=\"number\">1</span>     <span class=\"number\">2</span>     <span class=\"number\">3</span></span><br><span class=\"line\">     <span class=\"number\">1</span>     <span class=\"number\">2</span>     <span class=\"number\">3</span></span><br><span class=\"line\">     <span class=\"number\">1</span>     <span class=\"number\">2</span>     <span class=\"number\">3</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Y =</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"number\">4</span>     <span class=\"number\">4</span>     <span class=\"number\">4</span></span><br><span class=\"line\">     <span class=\"number\">7</span>     <span class=\"number\">7</span>     <span class=\"number\">7</span></span><br><span class=\"line\">     <span class=\"number\">9</span>     <span class=\"number\">9</span>     <span class=\"number\">9</span></span><br><span class=\"line\">    <span class=\"number\">10</span>    <span class=\"number\">10</span>    <span class=\"number\">10</span></span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"5-4：“墨西哥帽子”\"><a href=\"#5-4：“墨西哥帽子”\" class=\"headerlink\" title=\"5-4：“墨西哥帽子”\"></a>5-4：“墨西哥帽子”</h3><figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x = <span class=\"number\">-8</span>:<span class=\"number\">0.5</span>:<span class=\"number\">8</span>;</span><br><span class=\"line\">y = <span class=\"number\">-8</span>:<span class=\"number\">0.5</span>:<span class=\"number\">8</span>;</span><br><span class=\"line\">[X, Y] = <span class=\"built_in\">meshgrid</span>(x, y);</span><br><span class=\"line\">r = <span class=\"built_in\">sqrt</span>(X.^<span class=\"number\">2</span> + Y.^<span class=\"number\">2</span>) + <span class=\"built_in\">eps</span>;    <span class=\"comment\">%会出现r=0的情况，因此加一个eps,eps表示浮点数的最小单位</span></span><br><span class=\"line\">Z = <span class=\"built_in\">sin</span>(r) ./ r;</span><br><span class=\"line\">mesh(X, Y, Z)</span><br></pre></td></tr></table></figure>\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMttij.png\" width=\"50%\"></center>\n\n<h3 id=\"5-5：绘制等高线-meshc\"><a href=\"#5-5：绘制等高线-meshc\" class=\"headerlink\" title=\"5-5：绘制等高线 meshc\"></a>5-5：绘制等高线 meshc</h3><figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[X, Y] = <span class=\"built_in\">meshgrid</span>(<span class=\"number\">-8</span>:<span class=\"number\">0.5</span>:<span class=\"number\">8</span>);</span><br><span class=\"line\">r = <span class=\"built_in\">sqrt</span>(X.^<span class=\"number\">2</span> + Y.^<span class=\"number\">2</span>) + <span class=\"built_in\">eps</span>;</span><br><span class=\"line\">Z = <span class=\"built_in\">sin</span>(r) ./ r;</span><br><span class=\"line\">meshc(X, Y, Z)</span><br></pre></td></tr></table></figure>\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMtJoQ.png\" width=\"50%\"></center>\n\n<h3 id=\"5-6：绘制边界面屏蔽-meshz\"><a href=\"#5-6：绘制边界面屏蔽-meshz\" class=\"headerlink\" title=\"5-6：绘制边界面屏蔽 meshz\"></a>5-6：绘制边界面屏蔽 meshz</h3><figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[X, Y] = <span class=\"built_in\">meshgrid</span>(<span class=\"number\">-8</span>:<span class=\"number\">0.5</span>:<span class=\"number\">8</span>);</span><br><span class=\"line\">r = <span class=\"built_in\">sqrt</span>(X.^<span class=\"number\">2</span> + Y.^<span class=\"number\">2</span>) + <span class=\"built_in\">eps</span>;</span><br><span class=\"line\">Z = <span class=\"built_in\">sin</span>(r) ./ r;</span><br><span class=\"line\">meshz(X, Y, Z)</span><br></pre></td></tr></table></figure>\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMtGdg.png\" width=\"50%\"></center>\n\n<h3 id=\"5-7：画图\"><a href=\"#5-7：画图\" class=\"headerlink\" title=\"5-7：画图,.\"></a>5-7：画图<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>z</mi><mo>=</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msup><mi>y</mi><mn>2</mn></msup><mo separator=\"true\">,</mo><mo stretchy=\"false\">(</mo><mo>−</mo><mn>3</mn><mo>≤</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo>≤</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">z=x^2+y^2,(-3 \\le x,y \\le 3)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.897438em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8304100000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">3</span><span class=\"mclose\">)</span></span></span></span>,<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>z</mi><mo>=</mo><msup><mi>x</mi><mn>2</mn></msup><mo>−</mo><mn>3</mn><msup><mi>y</mi><mn>2</mn></msup><mo separator=\"true\">,</mo><mo stretchy=\"false\">(</mo><mo>−</mo><mn>10</mn><mo>≤</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo>≤</mo><mn>10</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">z=x^2-3y^2,(-10 \\le x,y \\le 10)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.897438em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord\">3</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8304100000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span></span></span>.</h3><figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[X1, Y1] = <span class=\"built_in\">meshgrid</span>(<span class=\"number\">-3</span>:<span class=\"number\">0.1</span>:<span class=\"number\">3</span>);</span><br><span class=\"line\">Z1 = X1.^<span class=\"number\">2</span> + Y1.^<span class=\"number\">2</span>;</span><br><span class=\"line\">subplot(<span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">mesh(X1, Y1, Z1), title(<span class=\"string\">&#x27;z = x^2 + y^2&#x27;</span>);</span><br><span class=\"line\">[X2, Y2] = <span class=\"built_in\">meshgrid</span>(<span class=\"number\">-10</span>:<span class=\"number\">0.1</span>:<span class=\"number\">10</span>);</span><br><span class=\"line\">Z2 = X2.^<span class=\"number\">2</span> - <span class=\"number\">3</span> * Y2.^<span class=\"number\">2</span>;</span><br><span class=\"line\">subplot(<span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\">mesh(X2, Y2, Z2), title(<span class=\"string\">&#x27;z = x^2 - 3y^2马鞍面&#x27;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMtazq.png\" width=\"50%\"></center>\n\n\n\n<h3 id=\"5-8：ezmesh、ezsurf-函数\"><a href=\"#5-8：ezmesh、ezsurf-函数\" class=\"headerlink\" title=\"5-8：ezmesh、ezsurf 函数\"></a>5-8：ezmesh、ezsurf 函数</h3><figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ezmesh(<span class=\"string\">&#x27;-cos(sqrt(x^2+y^2))&#x27;</span>, [<span class=\"number\">-4</span>, <span class=\"number\">4</span>], [<span class=\"number\">-4</span>, <span class=\"number\">4</span>])</span><br><span class=\"line\"><span class=\"built_in\">figure</span></span><br><span class=\"line\">ezsurf(<span class=\"string\">&#x27;(6+2*cos(u))*cos(v)&#x27;</span>, <span class=\"string\">&#x27;(6+2*cos(u))*sin(v)&#x27;</span>, <span class=\"string\">&#x27;2 * sin(u)&#x27;</span>, [<span class=\"number\">0</span>, <span class=\"number\">2</span> * <span class=\"built_in\">pi</span>, <span class=\"number\">0</span>, <span class=\"number\">2</span> * <span class=\"built_in\">pi</span>])</span><br><span class=\"line\"><span class=\"built_in\">hold</span> on</span><br><span class=\"line\">ezsurf(<span class=\"string\">&#x27;2*sin(u).*cos(v)&#x27;</span>, <span class=\"string\">&#x27;2*sin(u).*sin(v)&#x27;</span>, <span class=\"string\">&#x27;2*cos(u)&#x27;</span>, [<span class=\"number\">0</span>, <span class=\"built_in\">pi</span>, <span class=\"number\">0</span>, <span class=\"number\">2</span> * <span class=\"built_in\">pi</span>])</span><br><span class=\"line\">axis equal</span><br><span class=\"line\"><span class=\"built_in\">hold</span> off</span><br></pre></td></tr></table></figure>\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMNifs.png\" width=\"50%\"></center>\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMNkpn.png\" width=\"50%\"></center>\n\n\n<h3 id=\"5-9：画图和的图像\"><a href=\"#5-9：画图和的图像\" class=\"headerlink\" title=\"5-9：画图和的图像.\"></a>5-9：画图<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msup><mi>y</mi><mn>2</mn></msup><mo>+</mo><msup><mi>z</mi><mn>2</mn></msup><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">x^2+y^2+z^2=1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.897438em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.008548em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msup><mi>y</mi><mn>2</mn></msup><mo>+</mo><msup><mi>z</mi><mn>2</mn></msup><mo>=</mo><mn>4</mn></mrow><annotation encoding=\"application/x-tex\">x^2+y^2+z^2=4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.897438em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.008548em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">4</span></span></span></span>的图像.</h3><figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v = [<span class=\"number\">-2</span> <span class=\"number\">2</span> <span class=\"number\">-2</span> <span class=\"number\">2</span> <span class=\"number\">-2</span> <span class=\"number\">2</span>];</span><br><span class=\"line\">subplot(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>), sphere(<span class=\"number\">30</span>), axis(v);</span><br><span class=\"line\">title(<span class=\"string\">&#x27;半径为1的球面&#x27;</span>);</span><br><span class=\"line\">subplot(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>), [x, y, z] = sphere(<span class=\"number\">30</span>);</span><br><span class=\"line\">surf(<span class=\"number\">2</span> * x, <span class=\"number\">2</span> * y, <span class=\"number\">2</span> * z);</span><br><span class=\"line\">title(<span class=\"string\">&#x27;半径为2的球面&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMNAlq.png\" width=\"75%\"></center>\n\n<h3 id=\"5-10：柱面作图\"><a href=\"#5-10：柱面作图\" class=\"headerlink\" title=\"5-10：柱面作图\"></a>5-10：柱面作图</h3><figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">subplot(<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">1</span>), cylinder;</span><br><span class=\"line\">subplot(<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>), cylinder([<span class=\"number\">3</span>, <span class=\"number\">2</span>]);</span><br><span class=\"line\">subplot(<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">3</span>), t = -<span class=\"built_in\">pi</span>:<span class=\"built_in\">pi</span> / <span class=\"number\">10</span>:<span class=\"built_in\">pi</span>;</span><br><span class=\"line\">[x, y, z] = cylinder(<span class=\"number\">1</span> + <span class=\"built_in\">sin</span>(t));</span><br><span class=\"line\">surf(x, y, z)</span><br></pre></td></tr></table></figure>\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMNCkQ.png\" width=\"75%\"></center>\n\n<h3 id=\"5-15：hidden透视控制\"><a href=\"#5-15：hidden透视控制\" class=\"headerlink\" title=\"5-15：hidden透视控制\"></a>5-15：hidden透视控制</h3><figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[x, y, z] = sphere(<span class=\"number\">50</span>);</span><br><span class=\"line\">x1 = <span class=\"number\">2</span> * x;</span><br><span class=\"line\">y1 = <span class=\"number\">2</span> * y;</span><br><span class=\"line\">z1 = <span class=\"number\">2</span> * z;</span><br><span class=\"line\">surf(x, y, z);</span><br><span class=\"line\">shading interp;</span><br><span class=\"line\"><span class=\"built_in\">hold</span> on</span><br><span class=\"line\">mesh(x1, y1, z1), colormap(hot)</span><br><span class=\"line\">hidden off;</span><br><span class=\"line\">axis equal;</span><br></pre></td></tr></table></figure>\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMNPYj.png\" width=\"50%\"></center>\n\n<hr>\n<h3 id=\"Next⬇️\"><a href=\"#Next⬇️\" class=\"headerlink\" title=\"Next⬇️\"></a><center>Next⬇️</center></h3><center><a href=\"http://lhxone.top/2021/04/06/Matlab实验2-3/\">Matlab练习2-3 🍺</a></center>"},{"title":"Matlab实验2-3","date":"2021-04-06T05:47:09.000Z","_content":"\n\n## 专题实验（分段函数的图像）\n\n1. 请画出以下分段函数在[-10,40]上的图像，每个分段用不同的颜色、线型来描述.\n\n\n{% katex %}\nf(x)=\n\\left \\{\n    \\begin{aligned}\n    & x,&  & x<1, \\\\\n    & 2x-1,& & 1 \\le x \\le 10, \\\\\n    & 3x-11,& & 10 < x \\le 30,\\\\\n    & sinx+lnx,& & x > 30.\n\\end{aligned}\n\\right.\n{% endkatex %}\n\n```Matlab\nx = -10:0.1:40;\nx1 = x(1:110);\nx2 = x(111:201);\nx3 = x(202:401);\nx4 = x(402:501);\n\nfor index = 1:numel(x1)\n    y1(index) = x1(index);\nend\n\nfor index = 1:numel(x2)\n    y2(index) = 2 * x2(index) - 1;\nend\n\nfor index = 1:numel(x3)\n    y3(index) = 3 * x3(index) - 11;\nend\n\nfor index = 1:numel(x4)\n    y4(index) = sin(x4(index)) + log(x4(index));\nend\n\nplot(x1, y1, 'r*', x2, y2, 'bd', x3, y3, 'gH', x4, y4, 'y^')\n\n```\n<!-- more -->\n>运行结果\n\n<center><img src=\"https://z3.ax1x.com/2021/04/01/cEbH1K.png\" width=\"50%\"></center>\n\n\n1. 选做题：针对1中的函数f编写函数文件，使得可以直接对矩阵或者数组进行运算，进而快速实现画图.\n\n```TestFunc.m```\n\n```Matlab\nfunction y = TestFunc(x)\n    if x<1\n        y=x;\n    elseif x<=10\n        y=2*x-1;\n    elseif x<=30\n        y=3*x-11;\n    else\n        y=sin(x)+log(x);\n    end\nend\n```\n\n---\n\n## 专题实验（二维极坐标画图）\n\n从第2次实验附件中至少挑选2个图像进行绘图。\n\n1. Archimedes螺线{%katex%}r = a\\theta{%endkatex%}\n\n```Matlab\ntheta = 0:pi / 10:4 * pi;\na = 3;\nr = a * theta;\npolar(theta, r)\n```\n\n>运行结果\n\n<center><img src=\"https://z3.ax1x.com/2021/04/01/cEbclT.png\" width=\"50%\"></center>\n\n2. 双曲螺线{%katex%}r\\theta = a{%endkatex%}\n\n```Matlab\ntheta = 0:pi / 10:4 * pi;\na = 3;\nr = a ./ theta;\npolar(theta, r)\n```\n\n>运行结果\n\n<center><img src=\"https://z3.ax1x.com/2021/04/01/cELk26.png\" width=\"50%\"></center>\n\n---\n<center>E N D</center>","source":"_posts/Matlab实验2-3.md","raw":"---\ntitle: Matlab实验2-3\ndate: 2021-04-06 13:47:09\ntags: Matlab\n---\n\n\n## 专题实验（分段函数的图像）\n\n1. 请画出以下分段函数在[-10,40]上的图像，每个分段用不同的颜色、线型来描述.\n\n\n{% katex %}\nf(x)=\n\\left \\{\n    \\begin{aligned}\n    & x,&  & x<1, \\\\\n    & 2x-1,& & 1 \\le x \\le 10, \\\\\n    & 3x-11,& & 10 < x \\le 30,\\\\\n    & sinx+lnx,& & x > 30.\n\\end{aligned}\n\\right.\n{% endkatex %}\n\n```Matlab\nx = -10:0.1:40;\nx1 = x(1:110);\nx2 = x(111:201);\nx3 = x(202:401);\nx4 = x(402:501);\n\nfor index = 1:numel(x1)\n    y1(index) = x1(index);\nend\n\nfor index = 1:numel(x2)\n    y2(index) = 2 * x2(index) - 1;\nend\n\nfor index = 1:numel(x3)\n    y3(index) = 3 * x3(index) - 11;\nend\n\nfor index = 1:numel(x4)\n    y4(index) = sin(x4(index)) + log(x4(index));\nend\n\nplot(x1, y1, 'r*', x2, y2, 'bd', x3, y3, 'gH', x4, y4, 'y^')\n\n```\n<!-- more -->\n>运行结果\n\n<center><img src=\"https://z3.ax1x.com/2021/04/01/cEbH1K.png\" width=\"50%\"></center>\n\n\n1. 选做题：针对1中的函数f编写函数文件，使得可以直接对矩阵或者数组进行运算，进而快速实现画图.\n\n```TestFunc.m```\n\n```Matlab\nfunction y = TestFunc(x)\n    if x<1\n        y=x;\n    elseif x<=10\n        y=2*x-1;\n    elseif x<=30\n        y=3*x-11;\n    else\n        y=sin(x)+log(x);\n    end\nend\n```\n\n---\n\n## 专题实验（二维极坐标画图）\n\n从第2次实验附件中至少挑选2个图像进行绘图。\n\n1. Archimedes螺线{%katex%}r = a\\theta{%endkatex%}\n\n```Matlab\ntheta = 0:pi / 10:4 * pi;\na = 3;\nr = a * theta;\npolar(theta, r)\n```\n\n>运行结果\n\n<center><img src=\"https://z3.ax1x.com/2021/04/01/cEbclT.png\" width=\"50%\"></center>\n\n2. 双曲螺线{%katex%}r\\theta = a{%endkatex%}\n\n```Matlab\ntheta = 0:pi / 10:4 * pi;\na = 3;\nr = a ./ theta;\npolar(theta, r)\n```\n\n>运行结果\n\n<center><img src=\"https://z3.ax1x.com/2021/04/01/cELk26.png\" width=\"50%\"></center>\n\n---\n<center>E N D</center>","slug":"Matlab实验2-3","published":1,"updated":"2021-04-13T03:30:45.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckojvxerd000vboe2fyhmdpxz","content":"<h2 id=\"专题实验（分段函数的图像）\"><a href=\"#专题实验（分段函数的图像）\" class=\"headerlink\" title=\"专题实验（分段函数的图像）\"></a>专题实验（分段函数的图像）</h2><ol>\n<li>请画出以下分段函数在[-10,40]上的图像，每个分段用不同的颜色、线型来描述.</li>\n</ol>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.24999999999999992em\" columnalign=\"right left right left\" columnspacing=\"0em 1em 0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mi>x</mi><mo separator=\"true\">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mi>x</mi><mo>&lt;</mo><mn>1</mn><mo separator=\"true\">,</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mn>2</mn><mi>x</mi><mo>−</mo><mn>1</mn><mo separator=\"true\">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mn>1</mn><mo>≤</mo><mi>x</mi><mo>≤</mo><mn>10</mn><mo separator=\"true\">,</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mn>3</mn><mi>x</mi><mo>−</mo><mn>11</mn><mo separator=\"true\">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mn>10</mn><mo>&lt;</mo><mi>x</mi><mo>≤</mo><mn>30</mn><mo separator=\"true\">,</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi><mo>+</mo><mi>l</mi><mi>n</mi><mi>x</mi><mo separator=\"true\">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mi>x</mi><mo>&gt;</mo><mn>30.</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding=\"application/x-tex\">f(x)=\n\\left \\{\n    \\begin{aligned}\n    &amp; x,&amp;  &amp; x&lt;1, \\\\\n    &amp; 2x-1,&amp; &amp; 1 \\le x \\le 10, \\\\\n    &amp; 3x-11,&amp; &amp; 10 &lt; x \\le 30,\\\\\n    &amp; sinx+lnx,&amp; &amp; x &gt; 30.\n\\end{aligned}\n\\right.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:6.00004em;vertical-align:-2.75002em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.2500200000000006em;\"><span style=\"top:-1.2999899999999998em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎩</span></span></span><span style=\"top:-1.2949899999999999em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-1.58999em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-1.8849900000000002em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-2.17999em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-2.2049900000000004em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-3.1500100000000004em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎨</span></span></span><span style=\"top:-4.29501em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-4.59001em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-4.885010000000001em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-5.180010000000001em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-5.205010000000001em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-5.50002em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎧</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75002em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.25em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3.75em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span><span style=\"top:-2.249999999999999em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span><span style=\"top:-0.7499999999999996em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.7500000000000004em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span></span></span><span style=\"top:-3.91em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span></span></span><span style=\"top:-2.4099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\">3</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span></span></span><span style=\"top:-0.9099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.7500000000000004em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:1em;\"></span><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.25em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3.75em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span><span style=\"top:-2.249999999999999em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span><span style=\"top:-0.7499999999999996em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.7500000000000004em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span></span></span><span style=\"top:-3.91em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span></span></span><span style=\"top:-2.4099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">3</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span></span></span><span style=\"top:-0.9099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">3</span><span class=\"mord\">0</span><span class=\"mord\">.</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.7500000000000004em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>\n\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x = <span class=\"number\">-10</span>:<span class=\"number\">0.1</span>:<span class=\"number\">40</span>;</span><br><span class=\"line\">x1 = x(<span class=\"number\">1</span>:<span class=\"number\">110</span>);</span><br><span class=\"line\">x2 = x(<span class=\"number\">111</span>:<span class=\"number\">201</span>);</span><br><span class=\"line\">x3 = x(<span class=\"number\">202</span>:<span class=\"number\">401</span>);</span><br><span class=\"line\">x4 = x(<span class=\"number\">402</span>:<span class=\"number\">501</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> index = <span class=\"number\">1</span>:<span class=\"built_in\">numel</span>(x1)</span><br><span class=\"line\">    y1(index) = x1(index);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> index = <span class=\"number\">1</span>:<span class=\"built_in\">numel</span>(x2)</span><br><span class=\"line\">    y2(index) = <span class=\"number\">2</span> * x2(index) - <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> index = <span class=\"number\">1</span>:<span class=\"built_in\">numel</span>(x3)</span><br><span class=\"line\">    y3(index) = <span class=\"number\">3</span> * x3(index) - <span class=\"number\">11</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> index = <span class=\"number\">1</span>:<span class=\"built_in\">numel</span>(x4)</span><br><span class=\"line\">    y4(index) = <span class=\"built_in\">sin</span>(x4(index)) + <span class=\"built_in\">log</span>(x4(index));</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">plot</span>(x1, y1, <span class=\"string\">&#x27;r*&#x27;</span>, x2, y2, <span class=\"string\">&#x27;bd&#x27;</span>, x3, y3, <span class=\"string\">&#x27;gH&#x27;</span>, x4, y4, <span class=\"string\">&#x27;y^&#x27;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n<blockquote>\n<p>运行结果</p>\n</blockquote>\n<center><img src=\"https://z3.ax1x.com/2021/04/01/cEbH1K.png\" width=\"50%\"></center>\n\n\n<ol>\n<li>选做题：针对1中的函数f编写函数文件，使得可以直接对矩阵或者数组进行运算，进而快速实现画图.</li>\n</ol>\n<p><code>TestFunc.m</code></p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">y</span> = <span class=\"title\">TestFunc</span><span class=\"params\">(x)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> x&lt;<span class=\"number\">1</span></span><br><span class=\"line\">        y=x;</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> x&lt;=<span class=\"number\">10</span></span><br><span class=\"line\">        y=<span class=\"number\">2</span>*x<span class=\"number\">-1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> x&lt;=<span class=\"number\">30</span></span><br><span class=\"line\">        y=<span class=\"number\">3</span>*x<span class=\"number\">-11</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        y=<span class=\"built_in\">sin</span>(x)+<span class=\"built_in\">log</span>(x);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"专题实验（二维极坐标画图）\"><a href=\"#专题实验（二维极坐标画图）\" class=\"headerlink\" title=\"专题实验（二维极坐标画图）\"></a>专题实验（二维极坐标画图）</h2><p>从第2次实验附件中至少挑选2个图像进行绘图。</p>\n<ol>\n<li>Archimedes螺线<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mo>=</mo><mi>a</mi><mi>θ</mi></mrow><annotation encoding=\"application/x-tex\">r = a\\theta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span></span></span></span></li>\n</ol>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theta = <span class=\"number\">0</span>:<span class=\"built_in\">pi</span> / <span class=\"number\">10</span>:<span class=\"number\">4</span> * <span class=\"built_in\">pi</span>;</span><br><span class=\"line\">a = <span class=\"number\">3</span>;</span><br><span class=\"line\">r = a * theta;</span><br><span class=\"line\">polar(theta, r)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>运行结果</p>\n</blockquote>\n<center><img src=\"https://z3.ax1x.com/2021/04/01/cEbclT.png\" width=\"50%\"></center>\n\n<ol start=\"2\">\n<li>双曲螺线<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mi>θ</mi><mo>=</mo><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">r\\theta = a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span></li>\n</ol>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theta = <span class=\"number\">0</span>:<span class=\"built_in\">pi</span> / <span class=\"number\">10</span>:<span class=\"number\">4</span> * <span class=\"built_in\">pi</span>;</span><br><span class=\"line\">a = <span class=\"number\">3</span>;</span><br><span class=\"line\">r = a ./ theta;</span><br><span class=\"line\">polar(theta, r)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>运行结果</p>\n</blockquote>\n<center><img src=\"https://z3.ax1x.com/2021/04/01/cELk26.png\" width=\"50%\"></center>\n\n<hr>\n<center>E N D</center><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","site":{"data":{}},"excerpt":"专题实验（分段函数的图像）\n 1. 请画出以下分段函数在[-10,40]上的图像，每个分段用不同的颜色、线型来描述.\n\nf(x)={x,x<1,2x−1,1≤x≤10,3x−11,10<x≤30,sinx+lnx,x>30.f(x)= \\left \\{ \\begin{aligned} & x,& & x<1, \\\\ & 2x-1,& & 1 \\le x \\le 10, \\\\ & 3x-11,& & 10 < x \\le 30,\\\\ & sinx+lnx,& & x > 30. \\end{aligned} \\right.f(x)=⎩⎪⎪⎪⎪⎪⎨⎪⎪⎪⎪⎪⎧​​x,2x−1,3x−11,sinx+","more":"<blockquote>\n<p>运行结果</p>\n</blockquote>\n<center><img src=\"https://z3.ax1x.com/2021/04/01/cEbH1K.png\" width=\"50%\"></center>\n\n\n<ol>\n<li>选做题：针对1中的函数f编写函数文件，使得可以直接对矩阵或者数组进行运算，进而快速实现画图.</li>\n</ol>\n<p><code>TestFunc.m</code></p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">y</span> = <span class=\"title\">TestFunc</span><span class=\"params\">(x)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> x&lt;<span class=\"number\">1</span></span><br><span class=\"line\">        y=x;</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> x&lt;=<span class=\"number\">10</span></span><br><span class=\"line\">        y=<span class=\"number\">2</span>*x<span class=\"number\">-1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> x&lt;=<span class=\"number\">30</span></span><br><span class=\"line\">        y=<span class=\"number\">3</span>*x<span class=\"number\">-11</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        y=<span class=\"built_in\">sin</span>(x)+<span class=\"built_in\">log</span>(x);</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"专题实验（二维极坐标画图）\"><a href=\"#专题实验（二维极坐标画图）\" class=\"headerlink\" title=\"专题实验（二维极坐标画图）\"></a>专题实验（二维极坐标画图）</h2><p>从第2次实验附件中至少挑选2个图像进行绘图。</p>\n<ol>\n<li>Archimedes螺线<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mo>=</mo><mi>a</mi><mi>θ</mi></mrow><annotation encoding=\"application/x-tex\">r = a\\theta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span></span></span></span></li>\n</ol>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theta = <span class=\"number\">0</span>:<span class=\"built_in\">pi</span> / <span class=\"number\">10</span>:<span class=\"number\">4</span> * <span class=\"built_in\">pi</span>;</span><br><span class=\"line\">a = <span class=\"number\">3</span>;</span><br><span class=\"line\">r = a * theta;</span><br><span class=\"line\">polar(theta, r)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>运行结果</p>\n</blockquote>\n<center><img src=\"https://z3.ax1x.com/2021/04/01/cEbclT.png\" width=\"50%\"></center>\n\n<ol start=\"2\">\n<li>双曲螺线<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mi>θ</mi><mo>=</mo><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">r\\theta = a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span></li>\n</ol>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theta = <span class=\"number\">0</span>:<span class=\"built_in\">pi</span> / <span class=\"number\">10</span>:<span class=\"number\">4</span> * <span class=\"built_in\">pi</span>;</span><br><span class=\"line\">a = <span class=\"number\">3</span>;</span><br><span class=\"line\">r = a ./ theta;</span><br><span class=\"line\">polar(theta, r)</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>运行结果</p>\n</blockquote>\n<center><img src=\"https://z3.ax1x.com/2021/04/01/cELk26.png\" width=\"50%\"></center>\n\n<hr>\n<center>E N D</center>"},{"title":"OS结构设计P.24-P.33","date":"2021-03-16T02:46:26.000Z","_content":"\n# OS结构设计——读书报告\n\n---\n\n# 传统操作系统结构\n\n1. 无结构操作系统\n2. 模块化结构OS\n3. 分层式结构OS\n\n<!-- more -->\n---\n\n## 无结构操作系统\n\n特点：\n- 复杂且混乱，无结构，被称为整体系统结构\n- 每个过程可以任意地相互调用其他过程\n\n\n\n## 模块化结构OS\n\n1. 模块化程序设计级数的基本概念\n{% pullquote mindmap mindmap-md %}\n- 操作系统\n  - 进程管理\n    - 进程控制\n    - 进程调度\n    - ···\n  - 存储器管理\n    - 内存分配\n    - 内存保护\n  - 文件管理\n    - 磁盘管理\n    - 目录管理\n{% endpullquote %}\n\n2. 模块独立性\n   - 内聚性，指模块内部各部分间联系的紧密程度。内聚性越高，模块独立性越强。\n   - 耦合度，指模块间相互联系和相互影响的程度。耦合度越低，模块独立性越好。\n\n3. 模块接口法的优缺点\n   \n    >优点\n   - 提高OS设计的正确性、可理解性和可维护性\n   - 增强OS的可适应性\n   - 加速OS的开发过程\n\n    >缺点\n   - 各模块接口规定很难满足设计完成之后对接口的实际需求\n   - 设计时，各模块设计齐头并进，无法寻找一个可靠的决定顺序，造成各种决定的无序性\n\n\n\n## 分层式结构OS\n\n1. 分层式结构的基本概念\n   - 将“决定顺序”的无序性变为有序性\n   - 基本原则：每一层设计都建立在可靠的基础之上\n   - 每一层仅能使用其底层所提供的功能和服务\n\n2. 分层结构的优缺点\n  \n    >优点\n   - 易保证系统的正确性\n   - 易扩充和易维护性\n\n    >缺点\n   - 系统效率降低\n\n---\n   \n# 客户/服务器模式（Client/Server Model）简介\n\n## 客户/服务器模式模式由来、组成和类型\n\n\n   - 客户机：\n   - 服务器\n   - 网络系统\n\n## 客户/服务器之间的交互\n\n1. 客户发送请求消息\n2. 服务器接收消息\n3. 服务器回送消息\n4. 客户机接收消息\n   \n\n## 客户/服务器模式的优点\n\n1. 数据的分布处理和存储\n2. 便于集中管理\n3. 灵活性和可扩充性\n4. 易于改编应用软件\n\n---\n\n# 面向对象的程序设计（Object-Orientated Programming）技术简介\n\n## 面向对象的基本概念\n\n1. 对象\n2. 对象类\n3. 继承\n\n## 面向对象技术的优点\n\n1. 通过```重用```提高产品质量和生产率\n2. 使系统具有更好的易修改性和易扩展性\n3. 更易于保证系统的```正确性```和```可靠性```\n\n---\n# 微内核OS结构\n\n## 微内核操作系统的基本概念\n\n1. 足够小的内核\n2. 基于客户/服务器模式\n3. 应用```机制与策略分离```原理\n4. 采用面向对象技术\n\n## 微内核的基本功能\n\n1. 进程（线程）管理\n2. 低级存储管理\n3. 中断和陷入处理\n\n## 微内核操作系统的优点\n\n1. 提高了系统的可扩展性\n2. 增强了系统的可靠性\n3. 可移植性强\n4. 提供对分布式系统的支持\n5. 融入了面向对象技术\n\n## 微内核操作系统存在的问题\n\n较之早期的操作系统，运行效率较低","source":"_posts/OS结构设计P-24-P-33.md","raw":"---\ntitle: OS结构设计P.24-P.33\ndate: 2021-03-16 10:46:26\ntags: 操作系统\n---\n\n# OS结构设计——读书报告\n\n---\n\n# 传统操作系统结构\n\n1. 无结构操作系统\n2. 模块化结构OS\n3. 分层式结构OS\n\n<!-- more -->\n---\n\n## 无结构操作系统\n\n特点：\n- 复杂且混乱，无结构，被称为整体系统结构\n- 每个过程可以任意地相互调用其他过程\n\n\n\n## 模块化结构OS\n\n1. 模块化程序设计级数的基本概念\n{% pullquote mindmap mindmap-md %}\n- 操作系统\n  - 进程管理\n    - 进程控制\n    - 进程调度\n    - ···\n  - 存储器管理\n    - 内存分配\n    - 内存保护\n  - 文件管理\n    - 磁盘管理\n    - 目录管理\n{% endpullquote %}\n\n2. 模块独立性\n   - 内聚性，指模块内部各部分间联系的紧密程度。内聚性越高，模块独立性越强。\n   - 耦合度，指模块间相互联系和相互影响的程度。耦合度越低，模块独立性越好。\n\n3. 模块接口法的优缺点\n   \n    >优点\n   - 提高OS设计的正确性、可理解性和可维护性\n   - 增强OS的可适应性\n   - 加速OS的开发过程\n\n    >缺点\n   - 各模块接口规定很难满足设计完成之后对接口的实际需求\n   - 设计时，各模块设计齐头并进，无法寻找一个可靠的决定顺序，造成各种决定的无序性\n\n\n\n## 分层式结构OS\n\n1. 分层式结构的基本概念\n   - 将“决定顺序”的无序性变为有序性\n   - 基本原则：每一层设计都建立在可靠的基础之上\n   - 每一层仅能使用其底层所提供的功能和服务\n\n2. 分层结构的优缺点\n  \n    >优点\n   - 易保证系统的正确性\n   - 易扩充和易维护性\n\n    >缺点\n   - 系统效率降低\n\n---\n   \n# 客户/服务器模式（Client/Server Model）简介\n\n## 客户/服务器模式模式由来、组成和类型\n\n\n   - 客户机：\n   - 服务器\n   - 网络系统\n\n## 客户/服务器之间的交互\n\n1. 客户发送请求消息\n2. 服务器接收消息\n3. 服务器回送消息\n4. 客户机接收消息\n   \n\n## 客户/服务器模式的优点\n\n1. 数据的分布处理和存储\n2. 便于集中管理\n3. 灵活性和可扩充性\n4. 易于改编应用软件\n\n---\n\n# 面向对象的程序设计（Object-Orientated Programming）技术简介\n\n## 面向对象的基本概念\n\n1. 对象\n2. 对象类\n3. 继承\n\n## 面向对象技术的优点\n\n1. 通过```重用```提高产品质量和生产率\n2. 使系统具有更好的易修改性和易扩展性\n3. 更易于保证系统的```正确性```和```可靠性```\n\n---\n# 微内核OS结构\n\n## 微内核操作系统的基本概念\n\n1. 足够小的内核\n2. 基于客户/服务器模式\n3. 应用```机制与策略分离```原理\n4. 采用面向对象技术\n\n## 微内核的基本功能\n\n1. 进程（线程）管理\n2. 低级存储管理\n3. 中断和陷入处理\n\n## 微内核操作系统的优点\n\n1. 提高了系统的可扩展性\n2. 增强了系统的可靠性\n3. 可移植性强\n4. 提供对分布式系统的支持\n5. 融入了面向对象技术\n\n## 微内核操作系统存在的问题\n\n较之早期的操作系统，运行效率较低","slug":"OS结构设计P-24-P-33","published":1,"updated":"2021-04-13T03:30:53.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckojvxerj0016boe24jbw59w7","content":"<h1 id=\"OS结构设计——读书报告\"><a href=\"#OS结构设计——读书报告\" class=\"headerlink\" title=\"OS结构设计——读书报告\"></a>OS结构设计——读书报告</h1><hr>\n<h1 id=\"传统操作系统结构\"><a href=\"#传统操作系统结构\" class=\"headerlink\" title=\"传统操作系统结构\"></a>传统操作系统结构</h1><ol>\n<li>无结构操作系统</li>\n<li>模块化结构OS</li>\n<li>分层式结构OS</li>\n</ol>\n<span id=\"more\"></span>\n<hr>\n<h2 id=\"无结构操作系统\"><a href=\"#无结构操作系统\" class=\"headerlink\" title=\"无结构操作系统\"></a>无结构操作系统</h2><p>特点：</p>\n<ul>\n<li>复杂且混乱，无结构，被称为整体系统结构</li>\n<li>每个过程可以任意地相互调用其他过程</li>\n</ul>\n<h2 id=\"模块化结构OS\"><a href=\"#模块化结构OS\" class=\"headerlink\" title=\"模块化结构OS\"></a>模块化结构OS</h2><ol>\n<li><p>模块化程序设计级数的基本概念</p>\n<blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li>操作系统<ul>\n<li>进程管理<ul>\n<li>进程控制</li>\n<li>进程调度</li>\n<li>···</li>\n</ul>\n</li>\n<li>存储器管理<ul>\n<li>内存分配</li>\n<li>内存保护</li>\n</ul>\n</li>\n<li>文件管理<ul>\n<li>磁盘管理</li>\n<li>目录管理</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</blockquote></li>\n<li><p>模块独立性</p>\n<ul>\n<li>内聚性，指模块内部各部分间联系的紧密程度。内聚性越高，模块独立性越强。</li>\n<li>耦合度，指模块间相互联系和相互影响的程度。耦合度越低，模块独立性越好。</li>\n</ul>\n</li>\n<li><p>模块接口法的优缺点</p>\n<blockquote>\n<p>优点</p>\n</blockquote>\n<ul>\n<li>提高OS设计的正确性、可理解性和可维护性</li>\n<li>增强OS的可适应性</li>\n<li>加速OS的开发过程</li>\n</ul>\n<blockquote>\n<p>缺点</p>\n</blockquote>\n<ul>\n<li>各模块接口规定很难满足设计完成之后对接口的实际需求</li>\n<li>设计时，各模块设计齐头并进，无法寻找一个可靠的决定顺序，造成各种决定的无序性</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"分层式结构OS\"><a href=\"#分层式结构OS\" class=\"headerlink\" title=\"分层式结构OS\"></a>分层式结构OS</h2><ol>\n<li><p>分层式结构的基本概念</p>\n<ul>\n<li>将“决定顺序”的无序性变为有序性</li>\n<li>基本原则：每一层设计都建立在可靠的基础之上</li>\n<li>每一层仅能使用其底层所提供的功能和服务</li>\n</ul>\n</li>\n<li><p>分层结构的优缺点</p>\n<blockquote>\n<p>优点</p>\n</blockquote>\n<ul>\n<li>易保证系统的正确性</li>\n<li>易扩充和易维护性</li>\n</ul>\n<blockquote>\n<p>缺点</p>\n</blockquote>\n<ul>\n<li>系统效率降低</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h1 id=\"客户-服务器模式（Client-Server-Model）简介\"><a href=\"#客户-服务器模式（Client-Server-Model）简介\" class=\"headerlink\" title=\"客户/服务器模式（Client/Server Model）简介\"></a>客户/服务器模式（Client/Server Model）简介</h1><h2 id=\"客户-服务器模式模式由来、组成和类型\"><a href=\"#客户-服务器模式模式由来、组成和类型\" class=\"headerlink\" title=\"客户/服务器模式模式由来、组成和类型\"></a>客户/服务器模式模式由来、组成和类型</h2><ul>\n<li>客户机：</li>\n<li>服务器</li>\n<li>网络系统</li>\n</ul>\n<h2 id=\"客户-服务器之间的交互\"><a href=\"#客户-服务器之间的交互\" class=\"headerlink\" title=\"客户/服务器之间的交互\"></a>客户/服务器之间的交互</h2><ol>\n<li>客户发送请求消息</li>\n<li>服务器接收消息</li>\n<li>服务器回送消息</li>\n<li>客户机接收消息</li>\n</ol>\n<h2 id=\"客户-服务器模式的优点\"><a href=\"#客户-服务器模式的优点\" class=\"headerlink\" title=\"客户/服务器模式的优点\"></a>客户/服务器模式的优点</h2><ol>\n<li>数据的分布处理和存储</li>\n<li>便于集中管理</li>\n<li>灵活性和可扩充性</li>\n<li>易于改编应用软件</li>\n</ol>\n<hr>\n<h1 id=\"面向对象的程序设计（Object-Orientated-Programming）技术简介\"><a href=\"#面向对象的程序设计（Object-Orientated-Programming）技术简介\" class=\"headerlink\" title=\"面向对象的程序设计（Object-Orientated Programming）技术简介\"></a>面向对象的程序设计（Object-Orientated Programming）技术简介</h1><h2 id=\"面向对象的基本概念\"><a href=\"#面向对象的基本概念\" class=\"headerlink\" title=\"面向对象的基本概念\"></a>面向对象的基本概念</h2><ol>\n<li>对象</li>\n<li>对象类</li>\n<li>继承</li>\n</ol>\n<h2 id=\"面向对象技术的优点\"><a href=\"#面向对象技术的优点\" class=\"headerlink\" title=\"面向对象技术的优点\"></a>面向对象技术的优点</h2><ol>\n<li>通过<code>重用</code>提高产品质量和生产率</li>\n<li>使系统具有更好的易修改性和易扩展性</li>\n<li>更易于保证系统的<code>正确性</code>和<code>可靠性</code></li>\n</ol>\n<hr>\n<h1 id=\"微内核OS结构\"><a href=\"#微内核OS结构\" class=\"headerlink\" title=\"微内核OS结构\"></a>微内核OS结构</h1><h2 id=\"微内核操作系统的基本概念\"><a href=\"#微内核操作系统的基本概念\" class=\"headerlink\" title=\"微内核操作系统的基本概念\"></a>微内核操作系统的基本概念</h2><ol>\n<li>足够小的内核</li>\n<li>基于客户/服务器模式</li>\n<li>应用<code>机制与策略分离</code>原理</li>\n<li>采用面向对象技术</li>\n</ol>\n<h2 id=\"微内核的基本功能\"><a href=\"#微内核的基本功能\" class=\"headerlink\" title=\"微内核的基本功能\"></a>微内核的基本功能</h2><ol>\n<li>进程（线程）管理</li>\n<li>低级存储管理</li>\n<li>中断和陷入处理</li>\n</ol>\n<h2 id=\"微内核操作系统的优点\"><a href=\"#微内核操作系统的优点\" class=\"headerlink\" title=\"微内核操作系统的优点\"></a>微内核操作系统的优点</h2><ol>\n<li>提高了系统的可扩展性</li>\n<li>增强了系统的可靠性</li>\n<li>可移植性强</li>\n<li>提供对分布式系统的支持</li>\n<li>融入了面向对象技术</li>\n</ol>\n<h2 id=\"微内核操作系统存在的问题\"><a href=\"#微内核操作系统存在的问题\" class=\"headerlink\" title=\"微内核操作系统存在的问题\"></a>微内核操作系统存在的问题</h2><p>较之早期的操作系统，运行效率较低</p>\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","site":{"data":{}},"excerpt":"OS结构设计——读书报告\n\n\n\n传统操作系统结构\n 1. 无结构操作系统\n 2. 模块化结构OS\n 3. 分层式结构OS\n\n\n\n\n无结构操作系统\n特点：\n\n * 复杂且混乱，无结构，被称为整体系统结构\n * 每个过程可以任意地相互调用其他过程\n\n模块化结构OS\n 1. 模块化程序设计级数的基本概念\n    \n     * 操作系统 * 进程管理 * 进程控制\n           * 进程调度\n           * ···\n          \n          \n        * 存储器管理 * 内存分配\n           * 内存保护\n          \n          ","more":"<hr>\n<h2 id=\"无结构操作系统\"><a href=\"#无结构操作系统\" class=\"headerlink\" title=\"无结构操作系统\"></a>无结构操作系统</h2><p>特点：</p>\n<ul>\n<li>复杂且混乱，无结构，被称为整体系统结构</li>\n<li>每个过程可以任意地相互调用其他过程</li>\n</ul>\n<h2 id=\"模块化结构OS\"><a href=\"#模块化结构OS\" class=\"headerlink\" title=\"模块化结构OS\"></a>模块化结构OS</h2><ol>\n<li><p>模块化程序设计级数的基本概念</p>\n<blockquote class=\"pullquote mindmap mindmap-md\"><ul>\n<li>操作系统<ul>\n<li>进程管理<ul>\n<li>进程控制</li>\n<li>进程调度</li>\n<li>···</li>\n</ul>\n</li>\n<li>存储器管理<ul>\n<li>内存分配</li>\n<li>内存保护</li>\n</ul>\n</li>\n<li>文件管理<ul>\n<li>磁盘管理</li>\n<li>目录管理</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</blockquote></li>\n<li><p>模块独立性</p>\n<ul>\n<li>内聚性，指模块内部各部分间联系的紧密程度。内聚性越高，模块独立性越强。</li>\n<li>耦合度，指模块间相互联系和相互影响的程度。耦合度越低，模块独立性越好。</li>\n</ul>\n</li>\n<li><p>模块接口法的优缺点</p>\n<blockquote>\n<p>优点</p>\n</blockquote>\n<ul>\n<li>提高OS设计的正确性、可理解性和可维护性</li>\n<li>增强OS的可适应性</li>\n<li>加速OS的开发过程</li>\n</ul>\n<blockquote>\n<p>缺点</p>\n</blockquote>\n<ul>\n<li>各模块接口规定很难满足设计完成之后对接口的实际需求</li>\n<li>设计时，各模块设计齐头并进，无法寻找一个可靠的决定顺序，造成各种决定的无序性</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"分层式结构OS\"><a href=\"#分层式结构OS\" class=\"headerlink\" title=\"分层式结构OS\"></a>分层式结构OS</h2><ol>\n<li><p>分层式结构的基本概念</p>\n<ul>\n<li>将“决定顺序”的无序性变为有序性</li>\n<li>基本原则：每一层设计都建立在可靠的基础之上</li>\n<li>每一层仅能使用其底层所提供的功能和服务</li>\n</ul>\n</li>\n<li><p>分层结构的优缺点</p>\n<blockquote>\n<p>优点</p>\n</blockquote>\n<ul>\n<li>易保证系统的正确性</li>\n<li>易扩充和易维护性</li>\n</ul>\n<blockquote>\n<p>缺点</p>\n</blockquote>\n<ul>\n<li>系统效率降低</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h1 id=\"客户-服务器模式（Client-Server-Model）简介\"><a href=\"#客户-服务器模式（Client-Server-Model）简介\" class=\"headerlink\" title=\"客户/服务器模式（Client/Server Model）简介\"></a>客户/服务器模式（Client/Server Model）简介</h1><h2 id=\"客户-服务器模式模式由来、组成和类型\"><a href=\"#客户-服务器模式模式由来、组成和类型\" class=\"headerlink\" title=\"客户/服务器模式模式由来、组成和类型\"></a>客户/服务器模式模式由来、组成和类型</h2><ul>\n<li>客户机：</li>\n<li>服务器</li>\n<li>网络系统</li>\n</ul>\n<h2 id=\"客户-服务器之间的交互\"><a href=\"#客户-服务器之间的交互\" class=\"headerlink\" title=\"客户/服务器之间的交互\"></a>客户/服务器之间的交互</h2><ol>\n<li>客户发送请求消息</li>\n<li>服务器接收消息</li>\n<li>服务器回送消息</li>\n<li>客户机接收消息</li>\n</ol>\n<h2 id=\"客户-服务器模式的优点\"><a href=\"#客户-服务器模式的优点\" class=\"headerlink\" title=\"客户/服务器模式的优点\"></a>客户/服务器模式的优点</h2><ol>\n<li>数据的分布处理和存储</li>\n<li>便于集中管理</li>\n<li>灵活性和可扩充性</li>\n<li>易于改编应用软件</li>\n</ol>\n<hr>\n<h1 id=\"面向对象的程序设计（Object-Orientated-Programming）技术简介\"><a href=\"#面向对象的程序设计（Object-Orientated-Programming）技术简介\" class=\"headerlink\" title=\"面向对象的程序设计（Object-Orientated Programming）技术简介\"></a>面向对象的程序设计（Object-Orientated Programming）技术简介</h1><h2 id=\"面向对象的基本概念\"><a href=\"#面向对象的基本概念\" class=\"headerlink\" title=\"面向对象的基本概念\"></a>面向对象的基本概念</h2><ol>\n<li>对象</li>\n<li>对象类</li>\n<li>继承</li>\n</ol>\n<h2 id=\"面向对象技术的优点\"><a href=\"#面向对象技术的优点\" class=\"headerlink\" title=\"面向对象技术的优点\"></a>面向对象技术的优点</h2><ol>\n<li>通过<code>重用</code>提高产品质量和生产率</li>\n<li>使系统具有更好的易修改性和易扩展性</li>\n<li>更易于保证系统的<code>正确性</code>和<code>可靠性</code></li>\n</ol>\n<hr>\n<h1 id=\"微内核OS结构\"><a href=\"#微内核OS结构\" class=\"headerlink\" title=\"微内核OS结构\"></a>微内核OS结构</h1><h2 id=\"微内核操作系统的基本概念\"><a href=\"#微内核操作系统的基本概念\" class=\"headerlink\" title=\"微内核操作系统的基本概念\"></a>微内核操作系统的基本概念</h2><ol>\n<li>足够小的内核</li>\n<li>基于客户/服务器模式</li>\n<li>应用<code>机制与策略分离</code>原理</li>\n<li>采用面向对象技术</li>\n</ol>\n<h2 id=\"微内核的基本功能\"><a href=\"#微内核的基本功能\" class=\"headerlink\" title=\"微内核的基本功能\"></a>微内核的基本功能</h2><ol>\n<li>进程（线程）管理</li>\n<li>低级存储管理</li>\n<li>中断和陷入处理</li>\n</ol>\n<h2 id=\"微内核操作系统的优点\"><a href=\"#微内核操作系统的优点\" class=\"headerlink\" title=\"微内核操作系统的优点\"></a>微内核操作系统的优点</h2><ol>\n<li>提高了系统的可扩展性</li>\n<li>增强了系统的可靠性</li>\n<li>可移植性强</li>\n<li>提供对分布式系统的支持</li>\n<li>融入了面向对象技术</li>\n</ol>\n<h2 id=\"微内核操作系统存在的问题\"><a href=\"#微内核操作系统存在的问题\" class=\"headerlink\" title=\"微内核操作系统存在的问题\"></a>微内核操作系统存在的问题</h2><p>较之早期的操作系统，运行效率较低</p>"},{"title":"Matlab实验3-1","date":"2021-04-22T09:39:00.000Z","_content":"\n## 矩阵特征多项式、特征值、特征向量，稀疏矩阵\n\n1. 测试函数poly, poly2str, eig\n\n```Matlab\nclc;\nclear;\nformat short g\nA = [1, 2, 3; 4, 5, 6; 7, 8, 9];\np = poly(A)\npoly2str(p, 'x')\nd = eig(A)\n[V, D] = eig(A)\nA * V - V * D\n```\n\n2. 测试函数sparse, spdiags\n\n```Matlab\nA = [0, 0, 5, 0; 3, 0, 3, 0; 0, 0, 0, 1; 0, 4, 3, 0]\nS1 = sparse(A)\nfull(S1)\n```\n\n## 专题实验（迭代法求解线性方程组）\n\n1. 编写Jacobi迭代格式解线性方程组的函数；\n2. 编写Gauss-Seidel迭代格式求解线性方程组的函数；\n3. 建议用矩阵形式编写，也可以用原始格式。\n4. 对下面四个例题进行实验\n\n<table>\n<tr>\n    <td>(1){%katex%}\n\\left\\{\n\\begin{aligned}\n& 10x_1-x_2-2x_3=7.2\\\\\n& -x_1+10x_2-2x_3=8.3\\\\\n& -x_1-x_2+5x_3=4.2\\\\\n\\end{aligned}\n\\right.\n{%endkatex%}</td>\n    <td>(2){%katex%}\n\\left\\{\n\\begin{aligned}\n& 10x_1-x_2-2x_3=7.2\\\\\n& -x_1+10x_2-2x_3=8.3\\\\\n& -x_1-x_2+0.5x_3=4.2\\\\\n\\end{aligned}\n\\right.\n{%endkatex%}</td>\n</tr>\n<tr>\n    <td>(3){%katex%}\n\\left\\{\n\\begin{aligned}\n& x_1-9x_2-10x_3=1\\\\\n& -9x_1+x_2+5x_3=0\\\\\n& 8x_1+7x_2+x_3=4\\\\\n\\end{aligned}\n\\right.\n{%endkatex%}</td>\n    <td>(4){%katex%}\n\\left\\{\n\\begin{aligned}\n& 5x_1-x_2-3x_3=-1\\\\\n& -x_1+2x_2+4x_3=0\\\\\n& -3x_1+4x_2+15x_3=4\\\\\n\\end{aligned}\n\\right.\n{%endkatex%}</td>\n</tr>\n</table>\n\n\n### Jacobi\n\n#### 源代码\n\n```TestJacobi.m```\n```Matlab\nA1 = [10, -1, -2; -1, 10, -2; -1, -1, 5];\nb1 = [7.2; 8.3; 4.2];\nans1 = myJacobi(A1, b1)\n\nA2 = [10, -1, -2; -1, 10, -2; -1, -1, 0.5];\nb2 = [7.2; 8.3; 4.2];\nans2 = myJacobi(A2, b2)\n\nA3 = [1, -9, -10; -9, 1, 5; 8, 7, 1];\nb3 = [1; 0; 4];\nans3 = myJacobi(A3, b3)\n\nA4 = [5, -1, -3; -1, 2, 4; -3, 4, 15];\nb4 = [-1; 0; 4];\nans4 = myJacobi(A4, b4)\n\n```\n\n```myJacobi.m```\n```Matlab\nfunction x = myJacobi(A, b, X0, mytol)\n\n    % A为系数矩阵.\n    % b为右端常向量.\n    % X0为初始层，默认取0.\n    % mytol表示允许误差, 要求默认值为1e-6.\n\n    % 判断参数\n    if nargin == 3\n        mytol = 1.0e-6;\n    elseif nargin == 2\n        mytol = 1.0e-6;\n        N = length(b); %解向量的维数\n        X0 = zeros(N, 1); %迭代初始值\n    elseif nargin < 2\n        error('输入参数不足');\n        return\n    end\n\n    % 判断系数矩阵是否是方阵\n    [A_row, A_col] = size(A);\n    [b_row, b_col] = size(b);\n\n    if A_row ~= A_col\n        error('系数矩阵不是方阵');\n        x = zeros(A_row, 1);\n        return\n    end\n\n    % 判断b是否为常向量\n    if b_col ~= 1\n        disp('b不是常向量');\n        x = zeros(A_row, 1);\n        return;\n    end\n\n    % 判断常向量是否匹配\n    if A_row ~= b_row\n        disp('系数矩阵与常向量不匹配');\n        x = zeros(A_row, 1);\n        return;\n    end\n\n    % 判断系数矩阵是否可逆\n    if abs(det(A)) < mytol\n        disp('系数矩阵不可逆');\n        x = zeros(A_row, 1);\n        return\n    end\n\n    D = diag(diag(A)); % 求A的对角矩阵\n    L = -tril(A, -1); % 求A的下三角矩阵\n    U = -triu(A, 1); % 求A的上三角矩阵\n    B = D \\ (L + U); % Jacobi迭代矩阵\n\n    e = abs(eig(B)); % 求特征值，判断是否收敛\n\n    if e > 1\n        disp('不收敛')\n        x = zeros(A_row, 1);\n        return;\n    end\n\n    f = D \\ b;\n    x = B .* X0 + f;\n    n = 1; % 迭代次数\n\n    while norm(x - X0) >= mytol % 进行迭代\n        X0 = x;\n        x = B * X0 + f;\n        n = n + 1;\n\n    end\n\n    x = x(:, 1);\nend\n```\n\n#### 运行结果\n\n```\n>> TestJacobi\n\nans1 =\n\n    1.1000\n    1.2000\n    1.3000\n\n\nans2 =\n\n   24.5000\n   24.6000\n  106.6000\n\n不收敛\n\nans3 =\n\n     0\n     0\n     0\n\n\nans4 =\n\n   -0.0984\n   -1.1639\n    0.5574\n```\n\n\n### Gauss-Seidel\n\n#### 源代码\n\n```TestGS.m```\n```matlab\nA1 = [10, -1, -2; -1, 10, -2; -1, -1, 5];\nb1 = [7.2; 8.3; 4.2];\nans1 = myGS(A1, b1)\n\nA2 = [10, -1, -2; -1, 10, -2; -1, -1, 0.5];\nb2 = [7.2; 8.3; 4.2];\nans2 = myGS(A2, b2)\n\nA3 = [1, -9, -10; -9, 1, 5; 8, 7, 1];\nb3 = [1; 0; 4];\nans3 = myGS(A3, b3)\n\nA4 = [5, -1, -3; -1, 2, 4; -3, 4, 15];\nb4 = [-1; 0; 4];\nans4 = myGS(A4, b4)\n\n```\n\n```myGS.m```\n```matlab\nfunction x = myGS(A, b, X0, mytol)\n\n    % A为系数矩阵.\n    % b为右端常向量.\n    % X0为初始层，默认取0.\n    % mytol表示允许误差, 要求默认值为1e-6.\n    % A为系数矩阵.\n    % b为右端常向量.\n    % X0为初始层，默认取0.\n    % mytol表示允许误差, 要求默认值为1e-6.\n\n    % 判断参数\n    if nargin == 3\n        mytol = 1.0e-6;\n    elseif nargin == 2\n        mytol = 1.0e-6;\n        N = length(b); % 解向量的维数\n        X0 = zeros(N, 1); % 迭代初始值\n    elseif nargin < 2\n        error('输入参数不足');\n        return\n    end\n\n    % 判断系数矩阵是否是方阵\n    [A_row, A_col] = size(A);\n    [b_row, b_col] = size(b);\n\n    if A_row ~= A_col\n        error('系数矩阵不是方阵');\n        x = zeros(A_row, 1);\n        return\n    end\n\n    % 判断b是否为常向量\n    if b_col ~= 1\n        disp('b不是常向量');\n        x = zeros(A_row, 1);\n        return;\n    end\n\n    % 判断常向量是否匹配\n    if A_row ~= b_row\n        disp('系数矩阵与常向量不匹配');\n        x = zeros(A_row, 1);\n        return;\n    end\n\n    % 判断系数矩阵是否可逆\n    if abs(det(A)) < mytol\n        disp('系数矩阵不可逆');\n        x = zeros(A_row, 1);\n        return\n    end\n\n    %将矩阵分裂为A=D-L-U\n    D = diag(diag(A));\n    L = -tril(A, -1); %下三角\n    U = -triu(A, 1); %上三角\n\n    g = (D - L) \\ b;\n    B = (D - L) \\ U;\n\n    % TODO:判断收敛\n\n    x = B * X0 + g;\n\n    while norm(x - X0) >= mytol\n        X0 = x;\n        x = B * X0 + g;\n    end\n\nend\n```\n\n#### 运行结果\n\n```\n>> TestGS\n\nans1 =\n\n    1.1000\n    1.2000\n    1.3000\n\n\nans2 =\n\n   24.5000\n   24.6000\n  106.6000\n\n\nans3 =\n\n  -Inf\n  -Inf\n   Inf\n\n\nans4 =\n\n   -0.0984\n   -1.1639\n    0.5574\n```","source":"_posts/Matlab实验3-1.md","raw":"---\ntitle: Matlab实验3-1\ndate: 2021-04-22 17:39:00\ntags: Matlab\n---\n\n## 矩阵特征多项式、特征值、特征向量，稀疏矩阵\n\n1. 测试函数poly, poly2str, eig\n\n```Matlab\nclc;\nclear;\nformat short g\nA = [1, 2, 3; 4, 5, 6; 7, 8, 9];\np = poly(A)\npoly2str(p, 'x')\nd = eig(A)\n[V, D] = eig(A)\nA * V - V * D\n```\n\n2. 测试函数sparse, spdiags\n\n```Matlab\nA = [0, 0, 5, 0; 3, 0, 3, 0; 0, 0, 0, 1; 0, 4, 3, 0]\nS1 = sparse(A)\nfull(S1)\n```\n\n## 专题实验（迭代法求解线性方程组）\n\n1. 编写Jacobi迭代格式解线性方程组的函数；\n2. 编写Gauss-Seidel迭代格式求解线性方程组的函数；\n3. 建议用矩阵形式编写，也可以用原始格式。\n4. 对下面四个例题进行实验\n\n<table>\n<tr>\n    <td>(1){%katex%}\n\\left\\{\n\\begin{aligned}\n& 10x_1-x_2-2x_3=7.2\\\\\n& -x_1+10x_2-2x_3=8.3\\\\\n& -x_1-x_2+5x_3=4.2\\\\\n\\end{aligned}\n\\right.\n{%endkatex%}</td>\n    <td>(2){%katex%}\n\\left\\{\n\\begin{aligned}\n& 10x_1-x_2-2x_3=7.2\\\\\n& -x_1+10x_2-2x_3=8.3\\\\\n& -x_1-x_2+0.5x_3=4.2\\\\\n\\end{aligned}\n\\right.\n{%endkatex%}</td>\n</tr>\n<tr>\n    <td>(3){%katex%}\n\\left\\{\n\\begin{aligned}\n& x_1-9x_2-10x_3=1\\\\\n& -9x_1+x_2+5x_3=0\\\\\n& 8x_1+7x_2+x_3=4\\\\\n\\end{aligned}\n\\right.\n{%endkatex%}</td>\n    <td>(4){%katex%}\n\\left\\{\n\\begin{aligned}\n& 5x_1-x_2-3x_3=-1\\\\\n& -x_1+2x_2+4x_3=0\\\\\n& -3x_1+4x_2+15x_3=4\\\\\n\\end{aligned}\n\\right.\n{%endkatex%}</td>\n</tr>\n</table>\n\n\n### Jacobi\n\n#### 源代码\n\n```TestJacobi.m```\n```Matlab\nA1 = [10, -1, -2; -1, 10, -2; -1, -1, 5];\nb1 = [7.2; 8.3; 4.2];\nans1 = myJacobi(A1, b1)\n\nA2 = [10, -1, -2; -1, 10, -2; -1, -1, 0.5];\nb2 = [7.2; 8.3; 4.2];\nans2 = myJacobi(A2, b2)\n\nA3 = [1, -9, -10; -9, 1, 5; 8, 7, 1];\nb3 = [1; 0; 4];\nans3 = myJacobi(A3, b3)\n\nA4 = [5, -1, -3; -1, 2, 4; -3, 4, 15];\nb4 = [-1; 0; 4];\nans4 = myJacobi(A4, b4)\n\n```\n\n```myJacobi.m```\n```Matlab\nfunction x = myJacobi(A, b, X0, mytol)\n\n    % A为系数矩阵.\n    % b为右端常向量.\n    % X0为初始层，默认取0.\n    % mytol表示允许误差, 要求默认值为1e-6.\n\n    % 判断参数\n    if nargin == 3\n        mytol = 1.0e-6;\n    elseif nargin == 2\n        mytol = 1.0e-6;\n        N = length(b); %解向量的维数\n        X0 = zeros(N, 1); %迭代初始值\n    elseif nargin < 2\n        error('输入参数不足');\n        return\n    end\n\n    % 判断系数矩阵是否是方阵\n    [A_row, A_col] = size(A);\n    [b_row, b_col] = size(b);\n\n    if A_row ~= A_col\n        error('系数矩阵不是方阵');\n        x = zeros(A_row, 1);\n        return\n    end\n\n    % 判断b是否为常向量\n    if b_col ~= 1\n        disp('b不是常向量');\n        x = zeros(A_row, 1);\n        return;\n    end\n\n    % 判断常向量是否匹配\n    if A_row ~= b_row\n        disp('系数矩阵与常向量不匹配');\n        x = zeros(A_row, 1);\n        return;\n    end\n\n    % 判断系数矩阵是否可逆\n    if abs(det(A)) < mytol\n        disp('系数矩阵不可逆');\n        x = zeros(A_row, 1);\n        return\n    end\n\n    D = diag(diag(A)); % 求A的对角矩阵\n    L = -tril(A, -1); % 求A的下三角矩阵\n    U = -triu(A, 1); % 求A的上三角矩阵\n    B = D \\ (L + U); % Jacobi迭代矩阵\n\n    e = abs(eig(B)); % 求特征值，判断是否收敛\n\n    if e > 1\n        disp('不收敛')\n        x = zeros(A_row, 1);\n        return;\n    end\n\n    f = D \\ b;\n    x = B .* X0 + f;\n    n = 1; % 迭代次数\n\n    while norm(x - X0) >= mytol % 进行迭代\n        X0 = x;\n        x = B * X0 + f;\n        n = n + 1;\n\n    end\n\n    x = x(:, 1);\nend\n```\n\n#### 运行结果\n\n```\n>> TestJacobi\n\nans1 =\n\n    1.1000\n    1.2000\n    1.3000\n\n\nans2 =\n\n   24.5000\n   24.6000\n  106.6000\n\n不收敛\n\nans3 =\n\n     0\n     0\n     0\n\n\nans4 =\n\n   -0.0984\n   -1.1639\n    0.5574\n```\n\n\n### Gauss-Seidel\n\n#### 源代码\n\n```TestGS.m```\n```matlab\nA1 = [10, -1, -2; -1, 10, -2; -1, -1, 5];\nb1 = [7.2; 8.3; 4.2];\nans1 = myGS(A1, b1)\n\nA2 = [10, -1, -2; -1, 10, -2; -1, -1, 0.5];\nb2 = [7.2; 8.3; 4.2];\nans2 = myGS(A2, b2)\n\nA3 = [1, -9, -10; -9, 1, 5; 8, 7, 1];\nb3 = [1; 0; 4];\nans3 = myGS(A3, b3)\n\nA4 = [5, -1, -3; -1, 2, 4; -3, 4, 15];\nb4 = [-1; 0; 4];\nans4 = myGS(A4, b4)\n\n```\n\n```myGS.m```\n```matlab\nfunction x = myGS(A, b, X0, mytol)\n\n    % A为系数矩阵.\n    % b为右端常向量.\n    % X0为初始层，默认取0.\n    % mytol表示允许误差, 要求默认值为1e-6.\n    % A为系数矩阵.\n    % b为右端常向量.\n    % X0为初始层，默认取0.\n    % mytol表示允许误差, 要求默认值为1e-6.\n\n    % 判断参数\n    if nargin == 3\n        mytol = 1.0e-6;\n    elseif nargin == 2\n        mytol = 1.0e-6;\n        N = length(b); % 解向量的维数\n        X0 = zeros(N, 1); % 迭代初始值\n    elseif nargin < 2\n        error('输入参数不足');\n        return\n    end\n\n    % 判断系数矩阵是否是方阵\n    [A_row, A_col] = size(A);\n    [b_row, b_col] = size(b);\n\n    if A_row ~= A_col\n        error('系数矩阵不是方阵');\n        x = zeros(A_row, 1);\n        return\n    end\n\n    % 判断b是否为常向量\n    if b_col ~= 1\n        disp('b不是常向量');\n        x = zeros(A_row, 1);\n        return;\n    end\n\n    % 判断常向量是否匹配\n    if A_row ~= b_row\n        disp('系数矩阵与常向量不匹配');\n        x = zeros(A_row, 1);\n        return;\n    end\n\n    % 判断系数矩阵是否可逆\n    if abs(det(A)) < mytol\n        disp('系数矩阵不可逆');\n        x = zeros(A_row, 1);\n        return\n    end\n\n    %将矩阵分裂为A=D-L-U\n    D = diag(diag(A));\n    L = -tril(A, -1); %下三角\n    U = -triu(A, 1); %上三角\n\n    g = (D - L) \\ b;\n    B = (D - L) \\ U;\n\n    % TODO:判断收敛\n\n    x = B * X0 + g;\n\n    while norm(x - X0) >= mytol\n        X0 = x;\n        x = B * X0 + g;\n    end\n\nend\n```\n\n#### 运行结果\n\n```\n>> TestGS\n\nans1 =\n\n    1.1000\n    1.2000\n    1.3000\n\n\nans2 =\n\n   24.5000\n   24.6000\n  106.6000\n\n\nans3 =\n\n  -Inf\n  -Inf\n   Inf\n\n\nans4 =\n\n   -0.0984\n   -1.1639\n    0.5574\n```","slug":"Matlab实验3-1","published":1,"updated":"2021-04-25T15:36:44.926Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckojvxerj0017boe241yqc1pc","content":"<h2 id=\"矩阵特征多项式、特征值、特征向量，稀疏矩阵\"><a href=\"#矩阵特征多项式、特征值、特征向量，稀疏矩阵\" class=\"headerlink\" title=\"矩阵特征多项式、特征值、特征向量，稀疏矩阵\"></a>矩阵特征多项式、特征值、特征向量，稀疏矩阵</h2><ol>\n<li>测试函数poly, poly2str, eig</li>\n</ol>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clc;</span><br><span class=\"line\">clear;</span><br><span class=\"line\">format short g</span><br><span class=\"line\">A = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>; <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>; <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>];</span><br><span class=\"line\">p = poly(A)</span><br><span class=\"line\">poly2str(p, <span class=\"string\">&#x27;x&#x27;</span>)</span><br><span class=\"line\">d = eig(A)</span><br><span class=\"line\">[V, D] = eig(A)</span><br><span class=\"line\">A * V - V * D</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>测试函数sparse, spdiags</li>\n</ol>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A = [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">5</span>, <span class=\"number\">0</span>; <span class=\"number\">3</span>, <span class=\"number\">0</span>, <span class=\"number\">3</span>, <span class=\"number\">0</span>; <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>; <span class=\"number\">0</span>, <span class=\"number\">4</span>, <span class=\"number\">3</span>, <span class=\"number\">0</span>]</span><br><span class=\"line\">S1 = sparse(A)</span><br><span class=\"line\">full(S1)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"专题实验（迭代法求解线性方程组）\"><a href=\"#专题实验（迭代法求解线性方程组）\" class=\"headerlink\" title=\"专题实验（迭代法求解线性方程组）\"></a>专题实验（迭代法求解线性方程组）</h2><ol>\n<li>编写Jacobi迭代格式解线性方程组的函数；</li>\n<li>编写Gauss-Seidel迭代格式求解线性方程组的函数；</li>\n<li>建议用矩阵形式编写，也可以用原始格式。</li>\n<li>对下面四个例题进行实验</li>\n</ol>\n<table>\n<tr>\n    <td>(1)<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.24999999999999992em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mn>10</mn><msub><mi>x</mi><mn>1</mn></msub><mo>−</mo><msub><mi>x</mi><mn>2</mn></msub><mo>−</mo><mn>2</mn><msub><mi>x</mi><mn>3</mn></msub><mo>=</mo><mn>7.2</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>−</mo><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><mn>10</mn><msub><mi>x</mi><mn>2</mn></msub><mo>−</mo><mn>2</mn><msub><mi>x</mi><mn>3</mn></msub><mo>=</mo><mn>8.3</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>−</mo><msub><mi>x</mi><mn>1</mn></msub><mo>−</mo><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><mn>5</mn><msub><mi>x</mi><mn>3</mn></msub><mo>=</mo><mn>4.2</mn></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding=\"application/x-tex\">\\left\\{\n\\begin{aligned}\n&amp; 10x_1-x_2-2x_3=7.2\\\\\n&amp; -x_1+10x_2-2x_3=8.3\\\\\n&amp; -x_1-x_2+5x_3=4.2\\\\\n\\end{aligned}\n\\right.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:4.500000000000002em;vertical-align:-2.000000000000001em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.35002em;\"><span style=\"top:-2.19999em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎩</span></span></span><span style=\"top:-2.19499em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-2.20499em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-3.15001em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎨</span></span></span><span style=\"top:-4.2950099999999996em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-4.30501em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-4.60002em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎧</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8500199999999998em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.5000000000000004em;\"><span style=\"top:-4.5em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.4999999999999991em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.000000000000001em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.5000000000000004em;\"><span style=\"top:-4.66em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">7</span><span class=\"mord\">.</span><span class=\"mord\">2</span></span></span><span style=\"top:-3.16em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">8</span><span class=\"mord\">.</span><span class=\"mord\">3</span></span></span><span style=\"top:-1.6599999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">5</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">4</span><span class=\"mord\">.</span><span class=\"mord\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.000000000000001em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></td>\n    <td>(2)<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.24999999999999992em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mn>10</mn><msub><mi>x</mi><mn>1</mn></msub><mo>−</mo><msub><mi>x</mi><mn>2</mn></msub><mo>−</mo><mn>2</mn><msub><mi>x</mi><mn>3</mn></msub><mo>=</mo><mn>7.2</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>−</mo><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><mn>10</mn><msub><mi>x</mi><mn>2</mn></msub><mo>−</mo><mn>2</mn><msub><mi>x</mi><mn>3</mn></msub><mo>=</mo><mn>8.3</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>−</mo><msub><mi>x</mi><mn>1</mn></msub><mo>−</mo><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><mn>0.5</mn><msub><mi>x</mi><mn>3</mn></msub><mo>=</mo><mn>4.2</mn></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding=\"application/x-tex\">\\left\\{\n\\begin{aligned}\n&amp; 10x_1-x_2-2x_3=7.2\\\\\n&amp; -x_1+10x_2-2x_3=8.3\\\\\n&amp; -x_1-x_2+0.5x_3=4.2\\\\\n\\end{aligned}\n\\right.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:4.500000000000002em;vertical-align:-2.000000000000001em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.35002em;\"><span style=\"top:-2.19999em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎩</span></span></span><span style=\"top:-2.19499em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-2.20499em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-3.15001em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎨</span></span></span><span style=\"top:-4.2950099999999996em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-4.30501em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-4.60002em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎧</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8500199999999998em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.5000000000000004em;\"><span style=\"top:-4.5em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.4999999999999991em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.000000000000001em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.5000000000000004em;\"><span style=\"top:-4.66em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">7</span><span class=\"mord\">.</span><span class=\"mord\">2</span></span></span><span style=\"top:-3.16em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">8</span><span class=\"mord\">.</span><span class=\"mord\">3</span></span></span><span style=\"top:-1.6599999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">0</span><span class=\"mord\">.</span><span class=\"mord\">5</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">4</span><span class=\"mord\">.</span><span class=\"mord\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.000000000000001em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></td>\n</tr>\n<tr>\n    <td>(3)<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.24999999999999992em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><msub><mi>x</mi><mn>1</mn></msub><mo>−</mo><mn>9</mn><msub><mi>x</mi><mn>2</mn></msub><mo>−</mo><mn>10</mn><msub><mi>x</mi><mn>3</mn></msub><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>−</mo><mn>9</mn><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><mn>5</mn><msub><mi>x</mi><mn>3</mn></msub><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mn>8</mn><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><mn>7</mn><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><msub><mi>x</mi><mn>3</mn></msub><mo>=</mo><mn>4</mn></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding=\"application/x-tex\">\\left\\{\n\\begin{aligned}\n&amp; x_1-9x_2-10x_3=1\\\\\n&amp; -9x_1+x_2+5x_3=0\\\\\n&amp; 8x_1+7x_2+x_3=4\\\\\n\\end{aligned}\n\\right.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:4.500000000000002em;vertical-align:-2.000000000000001em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.35002em;\"><span style=\"top:-2.19999em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎩</span></span></span><span style=\"top:-2.19499em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-2.20499em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-3.15001em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎨</span></span></span><span style=\"top:-4.2950099999999996em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-4.30501em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-4.60002em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎧</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8500199999999998em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.5000000000000004em;\"><span style=\"top:-4.5em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.4999999999999991em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.000000000000001em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.5000000000000004em;\"><span style=\"top:-4.66em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">9</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-3.16em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">9</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">5</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">0</span></span></span><span style=\"top:-1.6599999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\">8</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">7</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.000000000000001em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></td>\n    <td>(4)<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.24999999999999992em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mn>5</mn><msub><mi>x</mi><mn>1</mn></msub><mo>−</mo><msub><mi>x</mi><mn>2</mn></msub><mo>−</mo><mn>3</mn><msub><mi>x</mi><mn>3</mn></msub><mo>=</mo><mo>−</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>−</mo><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><mn>2</mn><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><mn>4</mn><msub><mi>x</mi><mn>3</mn></msub><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>−</mo><mn>3</mn><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><mn>4</mn><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><mn>15</mn><msub><mi>x</mi><mn>3</mn></msub><mo>=</mo><mn>4</mn></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding=\"application/x-tex\">\\left\\{\n\\begin{aligned}\n&amp; 5x_1-x_2-3x_3=-1\\\\\n&amp; -x_1+2x_2+4x_3=0\\\\\n&amp; -3x_1+4x_2+15x_3=4\\\\\n\\end{aligned}\n\\right.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:4.500000000000002em;vertical-align:-2.000000000000001em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.35002em;\"><span style=\"top:-2.19999em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎩</span></span></span><span style=\"top:-2.19499em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-2.20499em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-3.15001em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎨</span></span></span><span style=\"top:-4.2950099999999996em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-4.30501em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-4.60002em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎧</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8500199999999998em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.5000000000000004em;\"><span style=\"top:-4.5em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.4999999999999991em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.000000000000001em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.5000000000000004em;\"><span style=\"top:-4.66em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\">5</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">3</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span></span></span><span style=\"top:-3.16em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">4</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">0</span></span></span><span style=\"top:-1.6599999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">3</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">4</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mord\">5</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.000000000000001em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></td>\n</tr>\n</table>\n\n\n<h3 id=\"Jacobi\"><a href=\"#Jacobi\" class=\"headerlink\" title=\"Jacobi\"></a>Jacobi</h3><h4 id=\"源代码\"><a href=\"#源代码\" class=\"headerlink\" title=\"源代码\"></a>源代码</h4><p><code>TestJacobi.m</code></p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A1 = [<span class=\"number\">10</span>, <span class=\"number\">-1</span>, <span class=\"number\">-2</span>; <span class=\"number\">-1</span>, <span class=\"number\">10</span>, <span class=\"number\">-2</span>; <span class=\"number\">-1</span>, <span class=\"number\">-1</span>, <span class=\"number\">5</span>];</span><br><span class=\"line\">b1 = [<span class=\"number\">7.2</span>; <span class=\"number\">8.3</span>; <span class=\"number\">4.2</span>];</span><br><span class=\"line\">ans1 = myJacobi(A1, b1)</span><br><span class=\"line\"></span><br><span class=\"line\">A2 = [<span class=\"number\">10</span>, <span class=\"number\">-1</span>, <span class=\"number\">-2</span>; <span class=\"number\">-1</span>, <span class=\"number\">10</span>, <span class=\"number\">-2</span>; <span class=\"number\">-1</span>, <span class=\"number\">-1</span>, <span class=\"number\">0.5</span>];</span><br><span class=\"line\">b2 = [<span class=\"number\">7.2</span>; <span class=\"number\">8.3</span>; <span class=\"number\">4.2</span>];</span><br><span class=\"line\">ans2 = myJacobi(A2, b2)</span><br><span class=\"line\"></span><br><span class=\"line\">A3 = [<span class=\"number\">1</span>, <span class=\"number\">-9</span>, <span class=\"number\">-10</span>; <span class=\"number\">-9</span>, <span class=\"number\">1</span>, <span class=\"number\">5</span>; <span class=\"number\">8</span>, <span class=\"number\">7</span>, <span class=\"number\">1</span>];</span><br><span class=\"line\">b3 = [<span class=\"number\">1</span>; <span class=\"number\">0</span>; <span class=\"number\">4</span>];</span><br><span class=\"line\">ans3 = myJacobi(A3, b3)</span><br><span class=\"line\"></span><br><span class=\"line\">A4 = [<span class=\"number\">5</span>, <span class=\"number\">-1</span>, <span class=\"number\">-3</span>; <span class=\"number\">-1</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>; <span class=\"number\">-3</span>, <span class=\"number\">4</span>, <span class=\"number\">15</span>];</span><br><span class=\"line\">b4 = [<span class=\"number\">-1</span>; <span class=\"number\">0</span>; <span class=\"number\">4</span>];</span><br><span class=\"line\">ans4 = myJacobi(A4, b4)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><code>myJacobi.m</code></p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">x</span> = <span class=\"title\">myJacobi</span><span class=\"params\">(A, b, X0, mytol)</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">% A为系数矩阵.</span></span><br><span class=\"line\">    <span class=\"comment\">% b为右端常向量.</span></span><br><span class=\"line\">    <span class=\"comment\">% X0为初始层，默认取0.</span></span><br><span class=\"line\">    <span class=\"comment\">% mytol表示允许误差, 要求默认值为1e-6.</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">% 判断参数</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> nargin == <span class=\"number\">3</span></span><br><span class=\"line\">        mytol = <span class=\"number\">1.0e-6</span>;</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> nargin == <span class=\"number\">2</span></span><br><span class=\"line\">        mytol = <span class=\"number\">1.0e-6</span>;</span><br><span class=\"line\">        N = <span class=\"built_in\">length</span>(b); <span class=\"comment\">%解向量的维数</span></span><br><span class=\"line\">        X0 = <span class=\"built_in\">zeros</span>(N, <span class=\"number\">1</span>); <span class=\"comment\">%迭代初始值</span></span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> nargin &lt; <span class=\"number\">2</span></span><br><span class=\"line\">        error(<span class=\"string\">&#x27;输入参数不足&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">% 判断系数矩阵是否是方阵</span></span><br><span class=\"line\">    [A_row, A_col] = <span class=\"built_in\">size</span>(A);</span><br><span class=\"line\">    [b_row, b_col] = <span class=\"built_in\">size</span>(b);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> A_row ~= A_col</span><br><span class=\"line\">        error(<span class=\"string\">&#x27;系数矩阵不是方阵&#x27;</span>);</span><br><span class=\"line\">        x = <span class=\"built_in\">zeros</span>(A_row, <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">% 判断b是否为常向量</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> b_col ~= <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"built_in\">disp</span>(<span class=\"string\">&#x27;b不是常向量&#x27;</span>);</span><br><span class=\"line\">        x = <span class=\"built_in\">zeros</span>(A_row, <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">% 判断常向量是否匹配</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> A_row ~= b_row</span><br><span class=\"line\">        <span class=\"built_in\">disp</span>(<span class=\"string\">&#x27;系数矩阵与常向量不匹配&#x27;</span>);</span><br><span class=\"line\">        x = <span class=\"built_in\">zeros</span>(A_row, <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">% 判断系数矩阵是否可逆</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">abs</span>(det(A)) &lt; mytol</span><br><span class=\"line\">        <span class=\"built_in\">disp</span>(<span class=\"string\">&#x27;系数矩阵不可逆&#x27;</span>);</span><br><span class=\"line\">        x = <span class=\"built_in\">zeros</span>(A_row, <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    D = <span class=\"built_in\">diag</span>(<span class=\"built_in\">diag</span>(A)); <span class=\"comment\">% 求A的对角矩阵</span></span><br><span class=\"line\">    L = -<span class=\"built_in\">tril</span>(A, <span class=\"number\">-1</span>); <span class=\"comment\">% 求A的下三角矩阵</span></span><br><span class=\"line\">    U = -<span class=\"built_in\">triu</span>(A, <span class=\"number\">1</span>); <span class=\"comment\">% 求A的上三角矩阵</span></span><br><span class=\"line\">    B = D \\ (L + U); <span class=\"comment\">% Jacobi迭代矩阵</span></span><br><span class=\"line\"></span><br><span class=\"line\">    e = <span class=\"built_in\">abs</span>(eig(B)); <span class=\"comment\">% 求特征值，判断是否收敛</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> e &gt; <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"built_in\">disp</span>(<span class=\"string\">&#x27;不收敛&#x27;</span>)</span><br><span class=\"line\">        x = <span class=\"built_in\">zeros</span>(A_row, <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    f = D \\ b;</span><br><span class=\"line\">    x = B .* X0 + f;</span><br><span class=\"line\">    n = <span class=\"number\">1</span>; <span class=\"comment\">% 迭代次数</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> norm(x - X0) &gt;= mytol <span class=\"comment\">% 进行迭代</span></span><br><span class=\"line\">        X0 = x;</span><br><span class=\"line\">        x = B * X0 + f;</span><br><span class=\"line\">        n = n + <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    x = x(:, <span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"运行结果\"><a href=\"#运行结果\" class=\"headerlink\" title=\"运行结果\"></a>运行结果</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt; TestJacobi</span><br><span class=\"line\"></span><br><span class=\"line\">ans1 &#x3D;</span><br><span class=\"line\"></span><br><span class=\"line\">    1.1000</span><br><span class=\"line\">    1.2000</span><br><span class=\"line\">    1.3000</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">ans2 &#x3D;</span><br><span class=\"line\"></span><br><span class=\"line\">   24.5000</span><br><span class=\"line\">   24.6000</span><br><span class=\"line\">  106.6000</span><br><span class=\"line\"></span><br><span class=\"line\">不收敛</span><br><span class=\"line\"></span><br><span class=\"line\">ans3 &#x3D;</span><br><span class=\"line\"></span><br><span class=\"line\">     0</span><br><span class=\"line\">     0</span><br><span class=\"line\">     0</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">ans4 &#x3D;</span><br><span class=\"line\"></span><br><span class=\"line\">   -0.0984</span><br><span class=\"line\">   -1.1639</span><br><span class=\"line\">    0.5574</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"Gauss-Seidel\"><a href=\"#Gauss-Seidel\" class=\"headerlink\" title=\"Gauss-Seidel\"></a>Gauss-Seidel</h3><h4 id=\"源代码-1\"><a href=\"#源代码-1\" class=\"headerlink\" title=\"源代码\"></a>源代码</h4><p><code>TestGS.m</code></p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A1 = [<span class=\"number\">10</span>, <span class=\"number\">-1</span>, <span class=\"number\">-2</span>; <span class=\"number\">-1</span>, <span class=\"number\">10</span>, <span class=\"number\">-2</span>; <span class=\"number\">-1</span>, <span class=\"number\">-1</span>, <span class=\"number\">5</span>];</span><br><span class=\"line\">b1 = [<span class=\"number\">7.2</span>; <span class=\"number\">8.3</span>; <span class=\"number\">4.2</span>];</span><br><span class=\"line\">ans1 = myGS(A1, b1)</span><br><span class=\"line\"></span><br><span class=\"line\">A2 = [<span class=\"number\">10</span>, <span class=\"number\">-1</span>, <span class=\"number\">-2</span>; <span class=\"number\">-1</span>, <span class=\"number\">10</span>, <span class=\"number\">-2</span>; <span class=\"number\">-1</span>, <span class=\"number\">-1</span>, <span class=\"number\">0.5</span>];</span><br><span class=\"line\">b2 = [<span class=\"number\">7.2</span>; <span class=\"number\">8.3</span>; <span class=\"number\">4.2</span>];</span><br><span class=\"line\">ans2 = myGS(A2, b2)</span><br><span class=\"line\"></span><br><span class=\"line\">A3 = [<span class=\"number\">1</span>, <span class=\"number\">-9</span>, <span class=\"number\">-10</span>; <span class=\"number\">-9</span>, <span class=\"number\">1</span>, <span class=\"number\">5</span>; <span class=\"number\">8</span>, <span class=\"number\">7</span>, <span class=\"number\">1</span>];</span><br><span class=\"line\">b3 = [<span class=\"number\">1</span>; <span class=\"number\">0</span>; <span class=\"number\">4</span>];</span><br><span class=\"line\">ans3 = myGS(A3, b3)</span><br><span class=\"line\"></span><br><span class=\"line\">A4 = [<span class=\"number\">5</span>, <span class=\"number\">-1</span>, <span class=\"number\">-3</span>; <span class=\"number\">-1</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>; <span class=\"number\">-3</span>, <span class=\"number\">4</span>, <span class=\"number\">15</span>];</span><br><span class=\"line\">b4 = [<span class=\"number\">-1</span>; <span class=\"number\">0</span>; <span class=\"number\">4</span>];</span><br><span class=\"line\">ans4 = myGS(A4, b4)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><code>myGS.m</code></p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">x</span> = <span class=\"title\">myGS</span><span class=\"params\">(A, b, X0, mytol)</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">% A为系数矩阵.</span></span><br><span class=\"line\">    <span class=\"comment\">% b为右端常向量.</span></span><br><span class=\"line\">    <span class=\"comment\">% X0为初始层，默认取0.</span></span><br><span class=\"line\">    <span class=\"comment\">% mytol表示允许误差, 要求默认值为1e-6.</span></span><br><span class=\"line\">    <span class=\"comment\">% A为系数矩阵.</span></span><br><span class=\"line\">    <span class=\"comment\">% b为右端常向量.</span></span><br><span class=\"line\">    <span class=\"comment\">% X0为初始层，默认取0.</span></span><br><span class=\"line\">    <span class=\"comment\">% mytol表示允许误差, 要求默认值为1e-6.</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">% 判断参数</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> nargin == <span class=\"number\">3</span></span><br><span class=\"line\">        mytol = <span class=\"number\">1.0e-6</span>;</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> nargin == <span class=\"number\">2</span></span><br><span class=\"line\">        mytol = <span class=\"number\">1.0e-6</span>;</span><br><span class=\"line\">        N = <span class=\"built_in\">length</span>(b); <span class=\"comment\">% 解向量的维数</span></span><br><span class=\"line\">        X0 = <span class=\"built_in\">zeros</span>(N, <span class=\"number\">1</span>); <span class=\"comment\">% 迭代初始值</span></span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> nargin &lt; <span class=\"number\">2</span></span><br><span class=\"line\">        error(<span class=\"string\">&#x27;输入参数不足&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">% 判断系数矩阵是否是方阵</span></span><br><span class=\"line\">    [A_row, A_col] = <span class=\"built_in\">size</span>(A);</span><br><span class=\"line\">    [b_row, b_col] = <span class=\"built_in\">size</span>(b);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> A_row ~= A_col</span><br><span class=\"line\">        error(<span class=\"string\">&#x27;系数矩阵不是方阵&#x27;</span>);</span><br><span class=\"line\">        x = <span class=\"built_in\">zeros</span>(A_row, <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">% 判断b是否为常向量</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> b_col ~= <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"built_in\">disp</span>(<span class=\"string\">&#x27;b不是常向量&#x27;</span>);</span><br><span class=\"line\">        x = <span class=\"built_in\">zeros</span>(A_row, <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">% 判断常向量是否匹配</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> A_row ~= b_row</span><br><span class=\"line\">        <span class=\"built_in\">disp</span>(<span class=\"string\">&#x27;系数矩阵与常向量不匹配&#x27;</span>);</span><br><span class=\"line\">        x = <span class=\"built_in\">zeros</span>(A_row, <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">% 判断系数矩阵是否可逆</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">abs</span>(det(A)) &lt; mytol</span><br><span class=\"line\">        <span class=\"built_in\">disp</span>(<span class=\"string\">&#x27;系数矩阵不可逆&#x27;</span>);</span><br><span class=\"line\">        x = <span class=\"built_in\">zeros</span>(A_row, <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">%将矩阵分裂为A=D-L-U</span></span><br><span class=\"line\">    D = <span class=\"built_in\">diag</span>(<span class=\"built_in\">diag</span>(A));</span><br><span class=\"line\">    L = -<span class=\"built_in\">tril</span>(A, <span class=\"number\">-1</span>); <span class=\"comment\">%下三角</span></span><br><span class=\"line\">    U = -<span class=\"built_in\">triu</span>(A, <span class=\"number\">1</span>); <span class=\"comment\">%上三角</span></span><br><span class=\"line\"></span><br><span class=\"line\">    g = (D - L) \\ b;</span><br><span class=\"line\">    B = (D - L) \\ U;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">% <span class=\"doctag\">TODO:</span>判断收敛</span></span><br><span class=\"line\"></span><br><span class=\"line\">    x = B * X0 + g;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> norm(x - X0) &gt;= mytol</span><br><span class=\"line\">        X0 = x;</span><br><span class=\"line\">        x = B * X0 + g;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"运行结果-1\"><a href=\"#运行结果-1\" class=\"headerlink\" title=\"运行结果\"></a>运行结果</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt; TestGS</span><br><span class=\"line\"></span><br><span class=\"line\">ans1 &#x3D;</span><br><span class=\"line\"></span><br><span class=\"line\">    1.1000</span><br><span class=\"line\">    1.2000</span><br><span class=\"line\">    1.3000</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">ans2 &#x3D;</span><br><span class=\"line\"></span><br><span class=\"line\">   24.5000</span><br><span class=\"line\">   24.6000</span><br><span class=\"line\">  106.6000</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">ans3 &#x3D;</span><br><span class=\"line\"></span><br><span class=\"line\">  -Inf</span><br><span class=\"line\">  -Inf</span><br><span class=\"line\">   Inf</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">ans4 &#x3D;</span><br><span class=\"line\"></span><br><span class=\"line\">   -0.0984</span><br><span class=\"line\">   -1.1639</span><br><span class=\"line\">    0.5574</span><br></pre></td></tr></table></figure><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","site":{"data":{}},"excerpt":"矩阵特征多项式、特征值、特征向量，稀疏矩阵\n 1. 测试函数poly, poly2str, eig\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\nclc;\nclear;\nformat short g\nA = [1, 2, 3; 4, 5, 6; 7, 8, 9];\np = poly(A)\npoly2str(p, 'x')\nd = eig(A)\n[V, D] = eig(A)\nA * V - V * D\n\n\n 2. 测试函数sparse, spdiags\n\n1\n2\n3\n\n\nA = [0, 0, 5, 0; 3, 0, 3, 0; 0, 0, 0, 1; 0, 4, 3, 0]\nS1 = sparse","more":"<h2 id=\"矩阵特征多项式、特征值、特征向量，稀疏矩阵\"><a href=\"#矩阵特征多项式、特征值、特征向量，稀疏矩阵\" class=\"headerlink\" title=\"矩阵特征多项式、特征值、特征向量，稀疏矩阵\"></a>矩阵特征多项式、特征值、特征向量，稀疏矩阵</h2><ol>\n<li>测试函数poly, poly2str, eig</li>\n</ol>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clc;</span><br><span class=\"line\">clear;</span><br><span class=\"line\">format short g</span><br><span class=\"line\">A = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>; <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>; <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>];</span><br><span class=\"line\">p = poly(A)</span><br><span class=\"line\">poly2str(p, <span class=\"string\">&#x27;x&#x27;</span>)</span><br><span class=\"line\">d = eig(A)</span><br><span class=\"line\">[V, D] = eig(A)</span><br><span class=\"line\">A * V - V * D</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>测试函数sparse, spdiags</li>\n</ol>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A = [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">5</span>, <span class=\"number\">0</span>; <span class=\"number\">3</span>, <span class=\"number\">0</span>, <span class=\"number\">3</span>, <span class=\"number\">0</span>; <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>; <span class=\"number\">0</span>, <span class=\"number\">4</span>, <span class=\"number\">3</span>, <span class=\"number\">0</span>]</span><br><span class=\"line\">S1 = sparse(A)</span><br><span class=\"line\">full(S1)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"专题实验（迭代法求解线性方程组）\"><a href=\"#专题实验（迭代法求解线性方程组）\" class=\"headerlink\" title=\"专题实验（迭代法求解线性方程组）\"></a>专题实验（迭代法求解线性方程组）</h2><ol>\n<li>编写Jacobi迭代格式解线性方程组的函数；</li>\n<li>编写Gauss-Seidel迭代格式求解线性方程组的函数；</li>\n<li>建议用矩阵形式编写，也可以用原始格式。</li>\n<li>对下面四个例题进行实验</li>\n</ol>\n<table>\n<tr>\n    <td>(1)<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.24999999999999992em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mn>10</mn><msub><mi>x</mi><mn>1</mn></msub><mo>−</mo><msub><mi>x</mi><mn>2</mn></msub><mo>−</mo><mn>2</mn><msub><mi>x</mi><mn>3</mn></msub><mo>=</mo><mn>7.2</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>−</mo><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><mn>10</mn><msub><mi>x</mi><mn>2</mn></msub><mo>−</mo><mn>2</mn><msub><mi>x</mi><mn>3</mn></msub><mo>=</mo><mn>8.3</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>−</mo><msub><mi>x</mi><mn>1</mn></msub><mo>−</mo><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><mn>5</mn><msub><mi>x</mi><mn>3</mn></msub><mo>=</mo><mn>4.2</mn></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding=\"application/x-tex\">\\left\\{\n\\begin{aligned}\n&amp; 10x_1-x_2-2x_3=7.2\\\\\n&amp; -x_1+10x_2-2x_3=8.3\\\\\n&amp; -x_1-x_2+5x_3=4.2\\\\\n\\end{aligned}\n\\right.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:4.500000000000002em;vertical-align:-2.000000000000001em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.35002em;\"><span style=\"top:-2.19999em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎩</span></span></span><span style=\"top:-2.19499em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-2.20499em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-3.15001em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎨</span></span></span><span style=\"top:-4.2950099999999996em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-4.30501em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-4.60002em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎧</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8500199999999998em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.5000000000000004em;\"><span style=\"top:-4.5em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.4999999999999991em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.000000000000001em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.5000000000000004em;\"><span style=\"top:-4.66em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">7</span><span class=\"mord\">.</span><span class=\"mord\">2</span></span></span><span style=\"top:-3.16em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">8</span><span class=\"mord\">.</span><span class=\"mord\">3</span></span></span><span style=\"top:-1.6599999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">5</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">4</span><span class=\"mord\">.</span><span class=\"mord\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.000000000000001em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></td>\n    <td>(2)<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.24999999999999992em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mn>10</mn><msub><mi>x</mi><mn>1</mn></msub><mo>−</mo><msub><mi>x</mi><mn>2</mn></msub><mo>−</mo><mn>2</mn><msub><mi>x</mi><mn>3</mn></msub><mo>=</mo><mn>7.2</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>−</mo><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><mn>10</mn><msub><mi>x</mi><mn>2</mn></msub><mo>−</mo><mn>2</mn><msub><mi>x</mi><mn>3</mn></msub><mo>=</mo><mn>8.3</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>−</mo><msub><mi>x</mi><mn>1</mn></msub><mo>−</mo><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><mn>0.5</mn><msub><mi>x</mi><mn>3</mn></msub><mo>=</mo><mn>4.2</mn></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding=\"application/x-tex\">\\left\\{\n\\begin{aligned}\n&amp; 10x_1-x_2-2x_3=7.2\\\\\n&amp; -x_1+10x_2-2x_3=8.3\\\\\n&amp; -x_1-x_2+0.5x_3=4.2\\\\\n\\end{aligned}\n\\right.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:4.500000000000002em;vertical-align:-2.000000000000001em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.35002em;\"><span style=\"top:-2.19999em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎩</span></span></span><span style=\"top:-2.19499em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-2.20499em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-3.15001em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎨</span></span></span><span style=\"top:-4.2950099999999996em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-4.30501em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-4.60002em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎧</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8500199999999998em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.5000000000000004em;\"><span style=\"top:-4.5em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.4999999999999991em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.000000000000001em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.5000000000000004em;\"><span style=\"top:-4.66em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">7</span><span class=\"mord\">.</span><span class=\"mord\">2</span></span></span><span style=\"top:-3.16em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">8</span><span class=\"mord\">.</span><span class=\"mord\">3</span></span></span><span style=\"top:-1.6599999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">0</span><span class=\"mord\">.</span><span class=\"mord\">5</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">4</span><span class=\"mord\">.</span><span class=\"mord\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.000000000000001em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></td>\n</tr>\n<tr>\n    <td>(3)<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.24999999999999992em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><msub><mi>x</mi><mn>1</mn></msub><mo>−</mo><mn>9</mn><msub><mi>x</mi><mn>2</mn></msub><mo>−</mo><mn>10</mn><msub><mi>x</mi><mn>3</mn></msub><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>−</mo><mn>9</mn><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><mn>5</mn><msub><mi>x</mi><mn>3</mn></msub><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mn>8</mn><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><mn>7</mn><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><msub><mi>x</mi><mn>3</mn></msub><mo>=</mo><mn>4</mn></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding=\"application/x-tex\">\\left\\{\n\\begin{aligned}\n&amp; x_1-9x_2-10x_3=1\\\\\n&amp; -9x_1+x_2+5x_3=0\\\\\n&amp; 8x_1+7x_2+x_3=4\\\\\n\\end{aligned}\n\\right.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:4.500000000000002em;vertical-align:-2.000000000000001em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.35002em;\"><span style=\"top:-2.19999em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎩</span></span></span><span style=\"top:-2.19499em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-2.20499em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-3.15001em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎨</span></span></span><span style=\"top:-4.2950099999999996em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-4.30501em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-4.60002em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎧</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8500199999999998em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.5000000000000004em;\"><span style=\"top:-4.5em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.4999999999999991em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.000000000000001em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.5000000000000004em;\"><span style=\"top:-4.66em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">9</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-3.16em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">9</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">5</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">0</span></span></span><span style=\"top:-1.6599999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\">8</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">7</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.000000000000001em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></td>\n    <td>(4)<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.24999999999999992em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mn>5</mn><msub><mi>x</mi><mn>1</mn></msub><mo>−</mo><msub><mi>x</mi><mn>2</mn></msub><mo>−</mo><mn>3</mn><msub><mi>x</mi><mn>3</mn></msub><mo>=</mo><mo>−</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>−</mo><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><mn>2</mn><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><mn>4</mn><msub><mi>x</mi><mn>3</mn></msub><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>−</mo><mn>3</mn><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><mn>4</mn><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><mn>15</mn><msub><mi>x</mi><mn>3</mn></msub><mo>=</mo><mn>4</mn></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding=\"application/x-tex\">\\left\\{\n\\begin{aligned}\n&amp; 5x_1-x_2-3x_3=-1\\\\\n&amp; -x_1+2x_2+4x_3=0\\\\\n&amp; -3x_1+4x_2+15x_3=4\\\\\n\\end{aligned}\n\\right.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:4.500000000000002em;vertical-align:-2.000000000000001em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.35002em;\"><span style=\"top:-2.19999em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎩</span></span></span><span style=\"top:-2.19499em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-2.20499em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-3.15001em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎨</span></span></span><span style=\"top:-4.2950099999999996em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-4.30501em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-4.60002em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎧</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8500199999999998em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.5000000000000004em;\"><span style=\"top:-4.5em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.4999999999999991em;\"><span class=\"pstrut\" style=\"height:2.84em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.000000000000001em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.5000000000000004em;\"><span style=\"top:-4.66em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord\">5</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">3</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span></span></span><span style=\"top:-3.16em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">4</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">0</span></span></span><span style=\"top:-1.6599999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">3</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">4</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mord\">5</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.000000000000001em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></td>\n</tr>\n</table>\n\n\n<h3 id=\"Jacobi\"><a href=\"#Jacobi\" class=\"headerlink\" title=\"Jacobi\"></a>Jacobi</h3><h4 id=\"源代码\"><a href=\"#源代码\" class=\"headerlink\" title=\"源代码\"></a>源代码</h4><p><code>TestJacobi.m</code></p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A1 = [<span class=\"number\">10</span>, <span class=\"number\">-1</span>, <span class=\"number\">-2</span>; <span class=\"number\">-1</span>, <span class=\"number\">10</span>, <span class=\"number\">-2</span>; <span class=\"number\">-1</span>, <span class=\"number\">-1</span>, <span class=\"number\">5</span>];</span><br><span class=\"line\">b1 = [<span class=\"number\">7.2</span>; <span class=\"number\">8.3</span>; <span class=\"number\">4.2</span>];</span><br><span class=\"line\">ans1 = myJacobi(A1, b1)</span><br><span class=\"line\"></span><br><span class=\"line\">A2 = [<span class=\"number\">10</span>, <span class=\"number\">-1</span>, <span class=\"number\">-2</span>; <span class=\"number\">-1</span>, <span class=\"number\">10</span>, <span class=\"number\">-2</span>; <span class=\"number\">-1</span>, <span class=\"number\">-1</span>, <span class=\"number\">0.5</span>];</span><br><span class=\"line\">b2 = [<span class=\"number\">7.2</span>; <span class=\"number\">8.3</span>; <span class=\"number\">4.2</span>];</span><br><span class=\"line\">ans2 = myJacobi(A2, b2)</span><br><span class=\"line\"></span><br><span class=\"line\">A3 = [<span class=\"number\">1</span>, <span class=\"number\">-9</span>, <span class=\"number\">-10</span>; <span class=\"number\">-9</span>, <span class=\"number\">1</span>, <span class=\"number\">5</span>; <span class=\"number\">8</span>, <span class=\"number\">7</span>, <span class=\"number\">1</span>];</span><br><span class=\"line\">b3 = [<span class=\"number\">1</span>; <span class=\"number\">0</span>; <span class=\"number\">4</span>];</span><br><span class=\"line\">ans3 = myJacobi(A3, b3)</span><br><span class=\"line\"></span><br><span class=\"line\">A4 = [<span class=\"number\">5</span>, <span class=\"number\">-1</span>, <span class=\"number\">-3</span>; <span class=\"number\">-1</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>; <span class=\"number\">-3</span>, <span class=\"number\">4</span>, <span class=\"number\">15</span>];</span><br><span class=\"line\">b4 = [<span class=\"number\">-1</span>; <span class=\"number\">0</span>; <span class=\"number\">4</span>];</span><br><span class=\"line\">ans4 = myJacobi(A4, b4)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><code>myJacobi.m</code></p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">x</span> = <span class=\"title\">myJacobi</span><span class=\"params\">(A, b, X0, mytol)</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">% A为系数矩阵.</span></span><br><span class=\"line\">    <span class=\"comment\">% b为右端常向量.</span></span><br><span class=\"line\">    <span class=\"comment\">% X0为初始层，默认取0.</span></span><br><span class=\"line\">    <span class=\"comment\">% mytol表示允许误差, 要求默认值为1e-6.</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">% 判断参数</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> nargin == <span class=\"number\">3</span></span><br><span class=\"line\">        mytol = <span class=\"number\">1.0e-6</span>;</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> nargin == <span class=\"number\">2</span></span><br><span class=\"line\">        mytol = <span class=\"number\">1.0e-6</span>;</span><br><span class=\"line\">        N = <span class=\"built_in\">length</span>(b); <span class=\"comment\">%解向量的维数</span></span><br><span class=\"line\">        X0 = <span class=\"built_in\">zeros</span>(N, <span class=\"number\">1</span>); <span class=\"comment\">%迭代初始值</span></span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> nargin &lt; <span class=\"number\">2</span></span><br><span class=\"line\">        error(<span class=\"string\">&#x27;输入参数不足&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">% 判断系数矩阵是否是方阵</span></span><br><span class=\"line\">    [A_row, A_col] = <span class=\"built_in\">size</span>(A);</span><br><span class=\"line\">    [b_row, b_col] = <span class=\"built_in\">size</span>(b);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> A_row ~= A_col</span><br><span class=\"line\">        error(<span class=\"string\">&#x27;系数矩阵不是方阵&#x27;</span>);</span><br><span class=\"line\">        x = <span class=\"built_in\">zeros</span>(A_row, <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">% 判断b是否为常向量</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> b_col ~= <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"built_in\">disp</span>(<span class=\"string\">&#x27;b不是常向量&#x27;</span>);</span><br><span class=\"line\">        x = <span class=\"built_in\">zeros</span>(A_row, <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">% 判断常向量是否匹配</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> A_row ~= b_row</span><br><span class=\"line\">        <span class=\"built_in\">disp</span>(<span class=\"string\">&#x27;系数矩阵与常向量不匹配&#x27;</span>);</span><br><span class=\"line\">        x = <span class=\"built_in\">zeros</span>(A_row, <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">% 判断系数矩阵是否可逆</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">abs</span>(det(A)) &lt; mytol</span><br><span class=\"line\">        <span class=\"built_in\">disp</span>(<span class=\"string\">&#x27;系数矩阵不可逆&#x27;</span>);</span><br><span class=\"line\">        x = <span class=\"built_in\">zeros</span>(A_row, <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    D = <span class=\"built_in\">diag</span>(<span class=\"built_in\">diag</span>(A)); <span class=\"comment\">% 求A的对角矩阵</span></span><br><span class=\"line\">    L = -<span class=\"built_in\">tril</span>(A, <span class=\"number\">-1</span>); <span class=\"comment\">% 求A的下三角矩阵</span></span><br><span class=\"line\">    U = -<span class=\"built_in\">triu</span>(A, <span class=\"number\">1</span>); <span class=\"comment\">% 求A的上三角矩阵</span></span><br><span class=\"line\">    B = D \\ (L + U); <span class=\"comment\">% Jacobi迭代矩阵</span></span><br><span class=\"line\"></span><br><span class=\"line\">    e = <span class=\"built_in\">abs</span>(eig(B)); <span class=\"comment\">% 求特征值，判断是否收敛</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> e &gt; <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"built_in\">disp</span>(<span class=\"string\">&#x27;不收敛&#x27;</span>)</span><br><span class=\"line\">        x = <span class=\"built_in\">zeros</span>(A_row, <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    f = D \\ b;</span><br><span class=\"line\">    x = B .* X0 + f;</span><br><span class=\"line\">    n = <span class=\"number\">1</span>; <span class=\"comment\">% 迭代次数</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> norm(x - X0) &gt;= mytol <span class=\"comment\">% 进行迭代</span></span><br><span class=\"line\">        X0 = x;</span><br><span class=\"line\">        x = B * X0 + f;</span><br><span class=\"line\">        n = n + <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    x = x(:, <span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"运行结果\"><a href=\"#运行结果\" class=\"headerlink\" title=\"运行结果\"></a>运行结果</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt; TestJacobi</span><br><span class=\"line\"></span><br><span class=\"line\">ans1 &#x3D;</span><br><span class=\"line\"></span><br><span class=\"line\">    1.1000</span><br><span class=\"line\">    1.2000</span><br><span class=\"line\">    1.3000</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">ans2 &#x3D;</span><br><span class=\"line\"></span><br><span class=\"line\">   24.5000</span><br><span class=\"line\">   24.6000</span><br><span class=\"line\">  106.6000</span><br><span class=\"line\"></span><br><span class=\"line\">不收敛</span><br><span class=\"line\"></span><br><span class=\"line\">ans3 &#x3D;</span><br><span class=\"line\"></span><br><span class=\"line\">     0</span><br><span class=\"line\">     0</span><br><span class=\"line\">     0</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">ans4 &#x3D;</span><br><span class=\"line\"></span><br><span class=\"line\">   -0.0984</span><br><span class=\"line\">   -1.1639</span><br><span class=\"line\">    0.5574</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"Gauss-Seidel\"><a href=\"#Gauss-Seidel\" class=\"headerlink\" title=\"Gauss-Seidel\"></a>Gauss-Seidel</h3><h4 id=\"源代码-1\"><a href=\"#源代码-1\" class=\"headerlink\" title=\"源代码\"></a>源代码</h4><p><code>TestGS.m</code></p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A1 = [<span class=\"number\">10</span>, <span class=\"number\">-1</span>, <span class=\"number\">-2</span>; <span class=\"number\">-1</span>, <span class=\"number\">10</span>, <span class=\"number\">-2</span>; <span class=\"number\">-1</span>, <span class=\"number\">-1</span>, <span class=\"number\">5</span>];</span><br><span class=\"line\">b1 = [<span class=\"number\">7.2</span>; <span class=\"number\">8.3</span>; <span class=\"number\">4.2</span>];</span><br><span class=\"line\">ans1 = myGS(A1, b1)</span><br><span class=\"line\"></span><br><span class=\"line\">A2 = [<span class=\"number\">10</span>, <span class=\"number\">-1</span>, <span class=\"number\">-2</span>; <span class=\"number\">-1</span>, <span class=\"number\">10</span>, <span class=\"number\">-2</span>; <span class=\"number\">-1</span>, <span class=\"number\">-1</span>, <span class=\"number\">0.5</span>];</span><br><span class=\"line\">b2 = [<span class=\"number\">7.2</span>; <span class=\"number\">8.3</span>; <span class=\"number\">4.2</span>];</span><br><span class=\"line\">ans2 = myGS(A2, b2)</span><br><span class=\"line\"></span><br><span class=\"line\">A3 = [<span class=\"number\">1</span>, <span class=\"number\">-9</span>, <span class=\"number\">-10</span>; <span class=\"number\">-9</span>, <span class=\"number\">1</span>, <span class=\"number\">5</span>; <span class=\"number\">8</span>, <span class=\"number\">7</span>, <span class=\"number\">1</span>];</span><br><span class=\"line\">b3 = [<span class=\"number\">1</span>; <span class=\"number\">0</span>; <span class=\"number\">4</span>];</span><br><span class=\"line\">ans3 = myGS(A3, b3)</span><br><span class=\"line\"></span><br><span class=\"line\">A4 = [<span class=\"number\">5</span>, <span class=\"number\">-1</span>, <span class=\"number\">-3</span>; <span class=\"number\">-1</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>; <span class=\"number\">-3</span>, <span class=\"number\">4</span>, <span class=\"number\">15</span>];</span><br><span class=\"line\">b4 = [<span class=\"number\">-1</span>; <span class=\"number\">0</span>; <span class=\"number\">4</span>];</span><br><span class=\"line\">ans4 = myGS(A4, b4)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><code>myGS.m</code></p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">x</span> = <span class=\"title\">myGS</span><span class=\"params\">(A, b, X0, mytol)</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">% A为系数矩阵.</span></span><br><span class=\"line\">    <span class=\"comment\">% b为右端常向量.</span></span><br><span class=\"line\">    <span class=\"comment\">% X0为初始层，默认取0.</span></span><br><span class=\"line\">    <span class=\"comment\">% mytol表示允许误差, 要求默认值为1e-6.</span></span><br><span class=\"line\">    <span class=\"comment\">% A为系数矩阵.</span></span><br><span class=\"line\">    <span class=\"comment\">% b为右端常向量.</span></span><br><span class=\"line\">    <span class=\"comment\">% X0为初始层，默认取0.</span></span><br><span class=\"line\">    <span class=\"comment\">% mytol表示允许误差, 要求默认值为1e-6.</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">% 判断参数</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> nargin == <span class=\"number\">3</span></span><br><span class=\"line\">        mytol = <span class=\"number\">1.0e-6</span>;</span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> nargin == <span class=\"number\">2</span></span><br><span class=\"line\">        mytol = <span class=\"number\">1.0e-6</span>;</span><br><span class=\"line\">        N = <span class=\"built_in\">length</span>(b); <span class=\"comment\">% 解向量的维数</span></span><br><span class=\"line\">        X0 = <span class=\"built_in\">zeros</span>(N, <span class=\"number\">1</span>); <span class=\"comment\">% 迭代初始值</span></span><br><span class=\"line\">    <span class=\"keyword\">elseif</span> nargin &lt; <span class=\"number\">2</span></span><br><span class=\"line\">        error(<span class=\"string\">&#x27;输入参数不足&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">% 判断系数矩阵是否是方阵</span></span><br><span class=\"line\">    [A_row, A_col] = <span class=\"built_in\">size</span>(A);</span><br><span class=\"line\">    [b_row, b_col] = <span class=\"built_in\">size</span>(b);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> A_row ~= A_col</span><br><span class=\"line\">        error(<span class=\"string\">&#x27;系数矩阵不是方阵&#x27;</span>);</span><br><span class=\"line\">        x = <span class=\"built_in\">zeros</span>(A_row, <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">% 判断b是否为常向量</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> b_col ~= <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"built_in\">disp</span>(<span class=\"string\">&#x27;b不是常向量&#x27;</span>);</span><br><span class=\"line\">        x = <span class=\"built_in\">zeros</span>(A_row, <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">% 判断常向量是否匹配</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> A_row ~= b_row</span><br><span class=\"line\">        <span class=\"built_in\">disp</span>(<span class=\"string\">&#x27;系数矩阵与常向量不匹配&#x27;</span>);</span><br><span class=\"line\">        x = <span class=\"built_in\">zeros</span>(A_row, <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">% 判断系数矩阵是否可逆</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">abs</span>(det(A)) &lt; mytol</span><br><span class=\"line\">        <span class=\"built_in\">disp</span>(<span class=\"string\">&#x27;系数矩阵不可逆&#x27;</span>);</span><br><span class=\"line\">        x = <span class=\"built_in\">zeros</span>(A_row, <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">%将矩阵分裂为A=D-L-U</span></span><br><span class=\"line\">    D = <span class=\"built_in\">diag</span>(<span class=\"built_in\">diag</span>(A));</span><br><span class=\"line\">    L = -<span class=\"built_in\">tril</span>(A, <span class=\"number\">-1</span>); <span class=\"comment\">%下三角</span></span><br><span class=\"line\">    U = -<span class=\"built_in\">triu</span>(A, <span class=\"number\">1</span>); <span class=\"comment\">%上三角</span></span><br><span class=\"line\"></span><br><span class=\"line\">    g = (D - L) \\ b;</span><br><span class=\"line\">    B = (D - L) \\ U;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">% <span class=\"doctag\">TODO:</span>判断收敛</span></span><br><span class=\"line\"></span><br><span class=\"line\">    x = B * X0 + g;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> norm(x - X0) &gt;= mytol</span><br><span class=\"line\">        X0 = x;</span><br><span class=\"line\">        x = B * X0 + g;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"运行结果-1\"><a href=\"#运行结果-1\" class=\"headerlink\" title=\"运行结果\"></a>运行结果</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt; TestGS</span><br><span class=\"line\"></span><br><span class=\"line\">ans1 &#x3D;</span><br><span class=\"line\"></span><br><span class=\"line\">    1.1000</span><br><span class=\"line\">    1.2000</span><br><span class=\"line\">    1.3000</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">ans2 &#x3D;</span><br><span class=\"line\"></span><br><span class=\"line\">   24.5000</span><br><span class=\"line\">   24.6000</span><br><span class=\"line\">  106.6000</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">ans3 &#x3D;</span><br><span class=\"line\"></span><br><span class=\"line\">  -Inf</span><br><span class=\"line\">  -Inf</span><br><span class=\"line\">   Inf</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">ans4 &#x3D;</span><br><span class=\"line\"></span><br><span class=\"line\">   -0.0984</span><br><span class=\"line\">   -1.1639</span><br><span class=\"line\">    0.5574</span><br></pre></td></tr></table></figure>"},{"title":"Video Demo","date":"2021-03-15T14:57:04.000Z","_content":"\n\n## 测试Bilibili视频播放\n\n<!-- more -->\n\n\n<iframe src=\"//player.bilibili.com/player.html?aid=840643631&bvid=BV1154y1X7b9&cid=190708236&page=1\" allowfullscreen=\"allowfullscreen\" width=\"100%\" height=\"500\" scrolling=\"no\" frameborder=\"0\" sandbox=\"allow-top-navigation allow-same-origin allow-forms allow-scripts\"></iframe>\n","source":"_posts/Video-Demo.md","raw":"---\ntitle: Video Demo\ndate: 2021-03-15 22:57:04\ntags: demo\n---\n\n\n## 测试Bilibili视频播放\n\n<!-- more -->\n\n\n<iframe src=\"//player.bilibili.com/player.html?aid=840643631&bvid=BV1154y1X7b9&cid=190708236&page=1\" allowfullscreen=\"allowfullscreen\" width=\"100%\" height=\"500\" scrolling=\"no\" frameborder=\"0\" sandbox=\"allow-top-navigation allow-same-origin allow-forms allow-scripts\"></iframe>\n","slug":"Video-Demo","published":1,"updated":"2021-04-13T03:31:00.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckojvxerk0019boe29wziepqr","content":"<h2 id=\"测试Bilibili视频播放\"><a href=\"#测试Bilibili视频播放\" class=\"headerlink\" title=\"测试Bilibili视频播放\"></a>测试Bilibili视频播放</h2><span id=\"more\"></span>\n\n\n<iframe src=\"//player.bilibili.com/player.html?aid=840643631&bvid=BV1154y1X7b9&cid=190708236&page=1\" allowfullscreen=\"allowfullscreen\" width=\"100%\" height=\"500\" scrolling=\"no\" frameborder=\"0\" sandbox=\"allow-top-navigation allow-same-origin allow-forms allow-scripts\"></iframe>\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","site":{"data":{}},"excerpt":"测试Bilibili视频播放","more":"<iframe src=\"//player.bilibili.com/player.html?aid=840643631&bvid=BV1154y1X7b9&cid=190708236&page=1\" allowfullscreen=\"allowfullscreen\" width=\"100%\" height=\"500\" scrolling=\"no\" frameborder=\"0\" sandbox=\"allow-top-navigation allow-same-origin allow-forms allow-scripts\"></iframe>"},{"title":"二叉树(Binary Tree)","date":"2020-10-23T03:20:10.000Z","_content":"\n### 10.23 二叉树BinaryTree\n\n#### 上机任务\n\n\n<center><img src=\"https://s3.ax1x.com/2021/03/13/6wNztK.md.png\" width=\"50%\"></center>\n\n```cpp\n#include <iostream>\n#include <queue>\n\nusing namespace std;\n\ntypedef struct node{\n    char data;\n    node *parent,*left,*right;\n}Treenode,*BiTree;\n\ntypedef struct BinaryTree{\n    Treenode *root;\n    int deepth;\n    int num;\n};\n\nvoid CreatTree(BiTree &t){\n    char c;\n    cin>>c;\n    if (c == '*'){\n        t = NULL;\n    } else{\n        t = new (node);\n        t->data = c;\n        CreatTree(t->left);\n        CreatTree(t->right);\n    }\n    return;\n}\n\n\nvoid DFS(node* node)\n{\n    if (node==NULL){\n        return;;\n    }\n    cout<<node->data<<\"->\";\n    if (node->left!=NULL)\n        DFS(node->left);\n    if (node->right!=NULL)\n        DFS(node->right);\n}\n\nvoid prettyPrintTree(node* node, string prefix = \"\", bool isLeft = true) {\n    if (node == NULL) {\n        cout << \"Empty tree\";\n        return;\n    }\n    if(node->right) {\n        prettyPrintTree(node->right, prefix + (isLeft ? \"│   \" : \"    \"), false);\n    }\n    cout << prefix + (isLeft ? \"└── \" : \"┌── \") + node->data + \"\\n\";\n    if (node->left) {\n        prettyPrintTree(node->left, prefix + (isLeft ? \"    \" : \"│   \"), true);\n    }\n}\n\nvoid Mirror(Treenode *node){\n    if (node == NULL){\n        return;\n    }\n    swap(node->left,node->right);\n    Mirror(node->left);\n    Mirror(node->right);\n}\n\nint TreeDepth(Treenode *node){\n    if(node==NULL)\n        return 0;\n    int left=TreeDepth(node->left)+1;\n    int right=TreeDepth(node->right)+1;\n    return left>right?left:right;\n}\n\nint leaf(Treenode *node,int &sum){\n    if (node==NULL){\n        return 0;\n    }\n    if (node->left == NULL&&node->right == NULL){\n        sum++;\n    }\n    if (node->left!=NULL)\n        leaf(node->left,sum);\n    if (node->right!=NULL)\n        leaf(node->right,sum);\n    return sum;\n}\n\nint main() {\n    int sum=0;      //叶子数量\n    BinaryTree t;\n    CreatTree(t.root);\n    DFS(t.root);\n    cout<<endl;\n    prettyPrintTree(t.root);\n    leaf(t.root,sum);\n    cout<<\"叶子个数为：\"<<sum<<endl;\n    cout<<\"深度为：\"<<TreeDepth(t.root)<<endl;\n    Mirror(t.root);\n    DFS(t.root);\n    cout<<endl;\n    prettyPrintTree(t.root);\n    return 0;\n}\n//ABD*F***CE***\n```\n<!-- more -->\n| 完成的✅        | 没完成的❌        |\n| -------------- | ---------------- |\n| 建立BinaryTree | 中序遍历         |\n| 前序遍历       | 后序遍历         |\n| 前序输出       | （逆）波兰表达式 |\n| 镜像反转       |                  |\n\n<img src=\"https://s3.ax1x.com/2021/03/13/6wUBu9.md.png\">\n\n*****","source":"_posts/二叉树-Binary-Tree.md","raw":"---\ntitle: 二叉树(Binary Tree)\ndate: 2020-10-23 11:20:10\ntags: \n- 数据结构\n- C++\n---\n\n### 10.23 二叉树BinaryTree\n\n#### 上机任务\n\n\n<center><img src=\"https://s3.ax1x.com/2021/03/13/6wNztK.md.png\" width=\"50%\"></center>\n\n```cpp\n#include <iostream>\n#include <queue>\n\nusing namespace std;\n\ntypedef struct node{\n    char data;\n    node *parent,*left,*right;\n}Treenode,*BiTree;\n\ntypedef struct BinaryTree{\n    Treenode *root;\n    int deepth;\n    int num;\n};\n\nvoid CreatTree(BiTree &t){\n    char c;\n    cin>>c;\n    if (c == '*'){\n        t = NULL;\n    } else{\n        t = new (node);\n        t->data = c;\n        CreatTree(t->left);\n        CreatTree(t->right);\n    }\n    return;\n}\n\n\nvoid DFS(node* node)\n{\n    if (node==NULL){\n        return;;\n    }\n    cout<<node->data<<\"->\";\n    if (node->left!=NULL)\n        DFS(node->left);\n    if (node->right!=NULL)\n        DFS(node->right);\n}\n\nvoid prettyPrintTree(node* node, string prefix = \"\", bool isLeft = true) {\n    if (node == NULL) {\n        cout << \"Empty tree\";\n        return;\n    }\n    if(node->right) {\n        prettyPrintTree(node->right, prefix + (isLeft ? \"│   \" : \"    \"), false);\n    }\n    cout << prefix + (isLeft ? \"└── \" : \"┌── \") + node->data + \"\\n\";\n    if (node->left) {\n        prettyPrintTree(node->left, prefix + (isLeft ? \"    \" : \"│   \"), true);\n    }\n}\n\nvoid Mirror(Treenode *node){\n    if (node == NULL){\n        return;\n    }\n    swap(node->left,node->right);\n    Mirror(node->left);\n    Mirror(node->right);\n}\n\nint TreeDepth(Treenode *node){\n    if(node==NULL)\n        return 0;\n    int left=TreeDepth(node->left)+1;\n    int right=TreeDepth(node->right)+1;\n    return left>right?left:right;\n}\n\nint leaf(Treenode *node,int &sum){\n    if (node==NULL){\n        return 0;\n    }\n    if (node->left == NULL&&node->right == NULL){\n        sum++;\n    }\n    if (node->left!=NULL)\n        leaf(node->left,sum);\n    if (node->right!=NULL)\n        leaf(node->right,sum);\n    return sum;\n}\n\nint main() {\n    int sum=0;      //叶子数量\n    BinaryTree t;\n    CreatTree(t.root);\n    DFS(t.root);\n    cout<<endl;\n    prettyPrintTree(t.root);\n    leaf(t.root,sum);\n    cout<<\"叶子个数为：\"<<sum<<endl;\n    cout<<\"深度为：\"<<TreeDepth(t.root)<<endl;\n    Mirror(t.root);\n    DFS(t.root);\n    cout<<endl;\n    prettyPrintTree(t.root);\n    return 0;\n}\n//ABD*F***CE***\n```\n<!-- more -->\n| 完成的✅        | 没完成的❌        |\n| -------------- | ---------------- |\n| 建立BinaryTree | 中序遍历         |\n| 前序遍历       | 后序遍历         |\n| 前序输出       | （逆）波兰表达式 |\n| 镜像反转       |                  |\n\n<img src=\"https://s3.ax1x.com/2021/03/13/6wUBu9.md.png\">\n\n*****","slug":"二叉树-Binary-Tree","published":1,"updated":"2021-04-13T12:53:20.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckojvxerl001bboe2gnwohu9j","content":"<h3 id=\"10-23-二叉树BinaryTree\"><a href=\"#10-23-二叉树BinaryTree\" class=\"headerlink\" title=\"10.23 二叉树BinaryTree\"></a>10.23 二叉树BinaryTree</h3><h4 id=\"上机任务\"><a href=\"#上机任务\" class=\"headerlink\" title=\"上机任务\"></a>上机任务</h4><center><img src=\"https://s3.ax1x.com/2021/03/13/6wNztK.md.png\" width=\"50%\"></center>\n\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;queue&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> data;</span><br><span class=\"line\">    node *parent,*left,*right;</span><br><span class=\"line\">&#125;Treenode,*BiTree;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">BinaryTree</span>&#123;</span></span><br><span class=\"line\">    Treenode *root;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> deepth;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> num;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">CreatTree</span><span class=\"params\">(BiTree &amp;t)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> c;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;c;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (c == <span class=\"string\">&#x27;*&#x27;</span>)&#123;</span><br><span class=\"line\">        t = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        t = <span class=\"keyword\">new</span> (node);</span><br><span class=\"line\">        t-&gt;data = c;</span><br><span class=\"line\">        CreatTree(t-&gt;left);</span><br><span class=\"line\">        CreatTree(t-&gt;right);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">DFS</span><span class=\"params\">(node* node)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (node==<span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;node-&gt;data&lt;&lt;<span class=\"string\">&quot;-&gt;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (node-&gt;left!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">        DFS(node-&gt;left);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (node-&gt;right!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">        DFS(node-&gt;right);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">prettyPrintTree</span><span class=\"params\">(node* node, <span class=\"built_in\">string</span> prefix = <span class=\"string\">&quot;&quot;</span>, <span class=\"keyword\">bool</span> isLeft = <span class=\"literal\">true</span>)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (node == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;Empty tree&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(node-&gt;right) &#123;</span><br><span class=\"line\">        prettyPrintTree(node-&gt;right, prefix + (isLeft ? <span class=\"string\">&quot;│   &quot;</span> : <span class=\"string\">&quot;    &quot;</span>), <span class=\"literal\">false</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; prefix + (isLeft ? <span class=\"string\">&quot;└── &quot;</span> : <span class=\"string\">&quot;┌── &quot;</span>) + node-&gt;data + <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (node-&gt;left) &#123;</span><br><span class=\"line\">        prettyPrintTree(node-&gt;left, prefix + (isLeft ? <span class=\"string\">&quot;    &quot;</span> : <span class=\"string\">&quot;│   &quot;</span>), <span class=\"literal\">true</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Mirror</span><span class=\"params\">(Treenode *node)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (node == <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    swap(node-&gt;left,node-&gt;right);</span><br><span class=\"line\">    Mirror(node-&gt;left);</span><br><span class=\"line\">    Mirror(node-&gt;right);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">TreeDepth</span><span class=\"params\">(Treenode *node)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(node==<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> left=TreeDepth(node-&gt;left)+<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> right=TreeDepth(node-&gt;right)+<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> left&gt;right?left:right;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">leaf</span><span class=\"params\">(Treenode *node,<span class=\"keyword\">int</span> &amp;sum)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (node==<span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (node-&gt;left == <span class=\"literal\">NULL</span>&amp;&amp;node-&gt;right == <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        sum++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (node-&gt;left!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">        leaf(node-&gt;left,sum);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (node-&gt;right!=<span class=\"literal\">NULL</span>)</span><br><span class=\"line\">        leaf(node-&gt;right,sum);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> sum=<span class=\"number\">0</span>;      <span class=\"comment\">//叶子数量</span></span><br><span class=\"line\">    BinaryTree t;</span><br><span class=\"line\">    CreatTree(t.root);</span><br><span class=\"line\">    DFS(t.root);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    prettyPrintTree(t.root);</span><br><span class=\"line\">    leaf(t.root,sum);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;叶子个数为：&quot;</span>&lt;&lt;sum&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;深度为：&quot;</span>&lt;&lt;TreeDepth(t.root)&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    Mirror(t.root);</span><br><span class=\"line\">    DFS(t.root);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    prettyPrintTree(t.root);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//ABD*F***CE***</span></span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n<table>\n<thead>\n<tr>\n<th>完成的✅</th>\n<th>没完成的❌</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>建立BinaryTree</td>\n<td>中序遍历</td>\n</tr>\n<tr>\n<td>前序遍历</td>\n<td>后序遍历</td>\n</tr>\n<tr>\n<td>前序输出</td>\n<td>（逆）波兰表达式</td>\n</tr>\n<tr>\n<td>镜像反转</td>\n<td></td>\n</tr>\n</tbody></table>\n<img src=\"https://s3.ax1x.com/2021/03/13/6wUBu9.md.png\">\n\n<hr>\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","site":{"data":{}},"excerpt":"10.23 二叉树BinaryTree\n上机任务\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95","more":"<table>\n<thead>\n<tr>\n<th>完成的✅</th>\n<th>没完成的❌</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>建立BinaryTree</td>\n<td>中序遍历</td>\n</tr>\n<tr>\n<td>前序遍历</td>\n<td>后序遍历</td>\n</tr>\n<tr>\n<td>前序输出</td>\n<td>（逆）波兰表达式</td>\n</tr>\n<tr>\n<td>镜像反转</td>\n<td></td>\n</tr>\n</tbody></table>\n<img src=\"https://s3.ax1x.com/2021/03/13/6wUBu9.md.png\">\n\n<hr>"},{"title":"分时操作系统与实时操作系统的比较","date":"2021-03-12T06:47:05.000Z","_content":"\n## 3.19操作系统作业\n\n\n### 分时操作系统与实时操作系统的比较\n\n#### 简介\n>计算机操作系统从20世纪50年代中期第二代计算机的单道批处理系统到20世纪60年代中期第三代计算机的多道批处理系统（IBM公司研发的OS/360系统是第一个能运行多道程序的批处理系统），都主要致力于提高资源利用率和系统吞吐量。但人们对人机交互的需求却一直未能得到有效解决，因此一种新型OS——分时OS就应运而生了，紧接着实时OS也在工业、军事等领域的需求下也随之诞生。现在我们所使用的操作系统都属于这两类。\n\n---\n<!-- more -->\n# 分时操作系统\n\n#### 为解决批处理系统中无交互手段、调试程序困难等缺点，出现了分时操作系统。\n\n### 工作方式\n\n* 一台主机连接了若干个终端\n* 每个终端（近程或远程）有一个用户在使用\n* 每个用户交互式地向系统提出命令请求\n* 系统接收每个用户的命令\n* 采用```时间片轮转```方式处理各用户的服务请求\n* 通过交互方式在终端上向用户显示结果\n* 用户根据上步结果发出下道命令\n\n### 分时操作系统实现（条件）\n\n关键：及时接受、及时处理\n\n* 系统中配置多路卡，以便主机及时接收各用户输入的命令或数据\n* 每个终端配备缓存，以便暂存用户数据\n* 用户作业直接输入内存，可确保系统及时响应用户要求\n* 采用时间片轮转法，使一台主机同时为多个用户服务，且保证足够快的响应时间\n\n### 时间片\n\n操作系统将CPU的时间划分成若干各片段，称为时间片\n\n### 时间片轮转法\n\n操作系统以时间片为单位，轮流为每个终端用户服务，每次服务一个时间片。其特点是利用人的错觉，使人感觉不到。\n\n### 特点\n\n* 多路性\n* 交互性\n* 独立性\n* 及时性\n\n>典型的分时系统是MUTICS和UNIX\n\n---\n\n# 实时操作系统\n\n\n#### 能及时响应外部事件的请求，在规定时限内完成对该事件的处理。\n\n### 分类\n1. 第一类：实施过程控制系统\n   >工业控制、军事控制\n2. 第二类：实时通信（信息）处理系统\n   >电讯、银行、飞机订票、股市行情\n3. 多媒体系统\n   >将文本、图像、音频、视频等信息集中在一个文件中，形成多媒体文件。多媒体播放系统必须为实时处理系统。\n4. 嵌入式系统\n   >嵌入在各智能仪器和设备中的芯片，可对设备进行控制或对其中信息做处理，需要实时控制或处理。\n\n### 主要追求目标\n\n* 对外部请求在严格时间范围内作出反应（及时响应）\n* 高可靠性（采用双工制：两台完全相同的计算机）\n* 安全性\n* 完整性\n\n### 特点\n\n* 多路性\n* 交互性\n* 独立性\n* 及时性\n* 可靠性\n\n---\n\n# 分时系统与实时系统比较\n\n* 多路性：两者都具有多路性。软实时与分时系统中的多路性表现为系统按分时原则为多个任务终端用户服务；硬实时则指系统周期性地对多路现场信息进行采集以及对多个对象或多个执行机构进行控制。\n\n* 独立性：两者都具有独立性。每个终端用户在向分时系统提出服务请求时，是彼此独立的操作，互不干扰；而在实时控制系统中信息的采集和对对象的控制，也彼此互不干扰。\n\n* 及时性：实时信息系统对实时性的要求与分时系统类似，都是以人所能接受的等待时间来确定；而实时控制系统的及时性，则是以控制对象所要求的开始截止时间或完成截止时间来确定的，一般为秒级、百毫秒级直至毫秒级，甚至有的要低于100微秒。\n\n* 交互性：实时信息处理系统具有交互性，但这里人与系统的交互，仅限于访问系统中某些特定的专用服务程序。它不像分时系统那样能向终端用户提供数据处理服务、资源共享等服务。\n\n* 可靠性：分时系统要求系统可靠，相比之下，实时系统则要求系统高度可靠。因为任何差错都可能带来巨大的经济损失甚至无法预料的灾难性后果。因此，在实时系统中，采取了多级容错措施来保证系统的安全及数据的安全。","source":"_posts/分时操作系统与实时操作系统的比较.md","raw":"---\ntitle: 分时操作系统与实时操作系统的比较\ndate: 2021-03-12 14:47:05\ntags: 操作系统\n---\n\n## 3.19操作系统作业\n\n\n### 分时操作系统与实时操作系统的比较\n\n#### 简介\n>计算机操作系统从20世纪50年代中期第二代计算机的单道批处理系统到20世纪60年代中期第三代计算机的多道批处理系统（IBM公司研发的OS/360系统是第一个能运行多道程序的批处理系统），都主要致力于提高资源利用率和系统吞吐量。但人们对人机交互的需求却一直未能得到有效解决，因此一种新型OS——分时OS就应运而生了，紧接着实时OS也在工业、军事等领域的需求下也随之诞生。现在我们所使用的操作系统都属于这两类。\n\n---\n<!-- more -->\n# 分时操作系统\n\n#### 为解决批处理系统中无交互手段、调试程序困难等缺点，出现了分时操作系统。\n\n### 工作方式\n\n* 一台主机连接了若干个终端\n* 每个终端（近程或远程）有一个用户在使用\n* 每个用户交互式地向系统提出命令请求\n* 系统接收每个用户的命令\n* 采用```时间片轮转```方式处理各用户的服务请求\n* 通过交互方式在终端上向用户显示结果\n* 用户根据上步结果发出下道命令\n\n### 分时操作系统实现（条件）\n\n关键：及时接受、及时处理\n\n* 系统中配置多路卡，以便主机及时接收各用户输入的命令或数据\n* 每个终端配备缓存，以便暂存用户数据\n* 用户作业直接输入内存，可确保系统及时响应用户要求\n* 采用时间片轮转法，使一台主机同时为多个用户服务，且保证足够快的响应时间\n\n### 时间片\n\n操作系统将CPU的时间划分成若干各片段，称为时间片\n\n### 时间片轮转法\n\n操作系统以时间片为单位，轮流为每个终端用户服务，每次服务一个时间片。其特点是利用人的错觉，使人感觉不到。\n\n### 特点\n\n* 多路性\n* 交互性\n* 独立性\n* 及时性\n\n>典型的分时系统是MUTICS和UNIX\n\n---\n\n# 实时操作系统\n\n\n#### 能及时响应外部事件的请求，在规定时限内完成对该事件的处理。\n\n### 分类\n1. 第一类：实施过程控制系统\n   >工业控制、军事控制\n2. 第二类：实时通信（信息）处理系统\n   >电讯、银行、飞机订票、股市行情\n3. 多媒体系统\n   >将文本、图像、音频、视频等信息集中在一个文件中，形成多媒体文件。多媒体播放系统必须为实时处理系统。\n4. 嵌入式系统\n   >嵌入在各智能仪器和设备中的芯片，可对设备进行控制或对其中信息做处理，需要实时控制或处理。\n\n### 主要追求目标\n\n* 对外部请求在严格时间范围内作出反应（及时响应）\n* 高可靠性（采用双工制：两台完全相同的计算机）\n* 安全性\n* 完整性\n\n### 特点\n\n* 多路性\n* 交互性\n* 独立性\n* 及时性\n* 可靠性\n\n---\n\n# 分时系统与实时系统比较\n\n* 多路性：两者都具有多路性。软实时与分时系统中的多路性表现为系统按分时原则为多个任务终端用户服务；硬实时则指系统周期性地对多路现场信息进行采集以及对多个对象或多个执行机构进行控制。\n\n* 独立性：两者都具有独立性。每个终端用户在向分时系统提出服务请求时，是彼此独立的操作，互不干扰；而在实时控制系统中信息的采集和对对象的控制，也彼此互不干扰。\n\n* 及时性：实时信息系统对实时性的要求与分时系统类似，都是以人所能接受的等待时间来确定；而实时控制系统的及时性，则是以控制对象所要求的开始截止时间或完成截止时间来确定的，一般为秒级、百毫秒级直至毫秒级，甚至有的要低于100微秒。\n\n* 交互性：实时信息处理系统具有交互性，但这里人与系统的交互，仅限于访问系统中某些特定的专用服务程序。它不像分时系统那样能向终端用户提供数据处理服务、资源共享等服务。\n\n* 可靠性：分时系统要求系统可靠，相比之下，实时系统则要求系统高度可靠。因为任何差错都可能带来巨大的经济损失甚至无法预料的灾难性后果。因此，在实时系统中，采取了多级容错措施来保证系统的安全及数据的安全。","slug":"分时操作系统与实时操作系统的比较","published":1,"updated":"2021-04-13T03:31:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckojvxerl001dboe282t30a0s","content":"<h2 id=\"3-19操作系统作业\"><a href=\"#3-19操作系统作业\" class=\"headerlink\" title=\"3.19操作系统作业\"></a>3.19操作系统作业</h2><h3 id=\"分时操作系统与实时操作系统的比较\"><a href=\"#分时操作系统与实时操作系统的比较\" class=\"headerlink\" title=\"分时操作系统与实时操作系统的比较\"></a>分时操作系统与实时操作系统的比较</h3><h4 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h4><blockquote>\n<p>计算机操作系统从20世纪50年代中期第二代计算机的单道批处理系统到20世纪60年代中期第三代计算机的多道批处理系统（IBM公司研发的OS/360系统是第一个能运行多道程序的批处理系统），都主要致力于提高资源利用率和系统吞吐量。但人们对人机交互的需求却一直未能得到有效解决，因此一种新型OS——分时OS就应运而生了，紧接着实时OS也在工业、军事等领域的需求下也随之诞生。现在我们所使用的操作系统都属于这两类。</p>\n</blockquote>\n<hr>\n<span id=\"more\"></span>\n<h1 id=\"分时操作系统\"><a href=\"#分时操作系统\" class=\"headerlink\" title=\"分时操作系统\"></a>分时操作系统</h1><h4 id=\"为解决批处理系统中无交互手段、调试程序困难等缺点，出现了分时操作系统。\"><a href=\"#为解决批处理系统中无交互手段、调试程序困难等缺点，出现了分时操作系统。\" class=\"headerlink\" title=\"为解决批处理系统中无交互手段、调试程序困难等缺点，出现了分时操作系统。\"></a>为解决批处理系统中无交互手段、调试程序困难等缺点，出现了分时操作系统。</h4><h3 id=\"工作方式\"><a href=\"#工作方式\" class=\"headerlink\" title=\"工作方式\"></a>工作方式</h3><ul>\n<li>一台主机连接了若干个终端</li>\n<li>每个终端（近程或远程）有一个用户在使用</li>\n<li>每个用户交互式地向系统提出命令请求</li>\n<li>系统接收每个用户的命令</li>\n<li>采用<code>时间片轮转</code>方式处理各用户的服务请求</li>\n<li>通过交互方式在终端上向用户显示结果</li>\n<li>用户根据上步结果发出下道命令</li>\n</ul>\n<h3 id=\"分时操作系统实现（条件）\"><a href=\"#分时操作系统实现（条件）\" class=\"headerlink\" title=\"分时操作系统实现（条件）\"></a>分时操作系统实现（条件）</h3><p>关键：及时接受、及时处理</p>\n<ul>\n<li>系统中配置多路卡，以便主机及时接收各用户输入的命令或数据</li>\n<li>每个终端配备缓存，以便暂存用户数据</li>\n<li>用户作业直接输入内存，可确保系统及时响应用户要求</li>\n<li>采用时间片轮转法，使一台主机同时为多个用户服务，且保证足够快的响应时间</li>\n</ul>\n<h3 id=\"时间片\"><a href=\"#时间片\" class=\"headerlink\" title=\"时间片\"></a>时间片</h3><p>操作系统将CPU的时间划分成若干各片段，称为时间片</p>\n<h3 id=\"时间片轮转法\"><a href=\"#时间片轮转法\" class=\"headerlink\" title=\"时间片轮转法\"></a>时间片轮转法</h3><p>操作系统以时间片为单位，轮流为每个终端用户服务，每次服务一个时间片。其特点是利用人的错觉，使人感觉不到。</p>\n<h3 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h3><ul>\n<li>多路性</li>\n<li>交互性</li>\n<li>独立性</li>\n<li>及时性</li>\n</ul>\n<blockquote>\n<p>典型的分时系统是MUTICS和UNIX</p>\n</blockquote>\n<hr>\n<h1 id=\"实时操作系统\"><a href=\"#实时操作系统\" class=\"headerlink\" title=\"实时操作系统\"></a>实时操作系统</h1><h4 id=\"能及时响应外部事件的请求，在规定时限内完成对该事件的处理。\"><a href=\"#能及时响应外部事件的请求，在规定时限内完成对该事件的处理。\" class=\"headerlink\" title=\"能及时响应外部事件的请求，在规定时限内完成对该事件的处理。\"></a>能及时响应外部事件的请求，在规定时限内完成对该事件的处理。</h4><h3 id=\"分类\"><a href=\"#分类\" class=\"headerlink\" title=\"分类\"></a>分类</h3><ol>\n<li>第一类：实施过程控制系统<blockquote>\n<p>工业控制、军事控制</p>\n</blockquote>\n</li>\n<li>第二类：实时通信（信息）处理系统<blockquote>\n<p>电讯、银行、飞机订票、股市行情</p>\n</blockquote>\n</li>\n<li>多媒体系统<blockquote>\n<p>将文本、图像、音频、视频等信息集中在一个文件中，形成多媒体文件。多媒体播放系统必须为实时处理系统。</p>\n</blockquote>\n</li>\n<li>嵌入式系统<blockquote>\n<p>嵌入在各智能仪器和设备中的芯片，可对设备进行控制或对其中信息做处理，需要实时控制或处理。</p>\n</blockquote>\n</li>\n</ol>\n<h3 id=\"主要追求目标\"><a href=\"#主要追求目标\" class=\"headerlink\" title=\"主要追求目标\"></a>主要追求目标</h3><ul>\n<li>对外部请求在严格时间范围内作出反应（及时响应）</li>\n<li>高可靠性（采用双工制：两台完全相同的计算机）</li>\n<li>安全性</li>\n<li>完整性</li>\n</ul>\n<h3 id=\"特点-1\"><a href=\"#特点-1\" class=\"headerlink\" title=\"特点\"></a>特点</h3><ul>\n<li>多路性</li>\n<li>交互性</li>\n<li>独立性</li>\n<li>及时性</li>\n<li>可靠性</li>\n</ul>\n<hr>\n<h1 id=\"分时系统与实时系统比较\"><a href=\"#分时系统与实时系统比较\" class=\"headerlink\" title=\"分时系统与实时系统比较\"></a>分时系统与实时系统比较</h1><ul>\n<li><p>多路性：两者都具有多路性。软实时与分时系统中的多路性表现为系统按分时原则为多个任务终端用户服务；硬实时则指系统周期性地对多路现场信息进行采集以及对多个对象或多个执行机构进行控制。</p>\n</li>\n<li><p>独立性：两者都具有独立性。每个终端用户在向分时系统提出服务请求时，是彼此独立的操作，互不干扰；而在实时控制系统中信息的采集和对对象的控制，也彼此互不干扰。</p>\n</li>\n<li><p>及时性：实时信息系统对实时性的要求与分时系统类似，都是以人所能接受的等待时间来确定；而实时控制系统的及时性，则是以控制对象所要求的开始截止时间或完成截止时间来确定的，一般为秒级、百毫秒级直至毫秒级，甚至有的要低于100微秒。</p>\n</li>\n<li><p>交互性：实时信息处理系统具有交互性，但这里人与系统的交互，仅限于访问系统中某些特定的专用服务程序。它不像分时系统那样能向终端用户提供数据处理服务、资源共享等服务。</p>\n</li>\n<li><p>可靠性：分时系统要求系统可靠，相比之下，实时系统则要求系统高度可靠。因为任何差错都可能带来巨大的经济损失甚至无法预料的灾难性后果。因此，在实时系统中，采取了多级容错措施来保证系统的安全及数据的安全。</p>\n</li>\n</ul>\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","site":{"data":{}},"excerpt":"3.19操作系统作业\n分时操作系统与实时操作系统的比较\n简介\n计算机操作系统从20世纪50年代中期第二代计算机的单道批处理系统到20世纪60年代中期第三代计算机的多道批处理系统（IBM公司研发的OS/360系统是第一个能运行多道程序的批处理系统），都主要致力于提高资源利用率和系统吞吐量。但人们对人机交互的需求却一直未能得到有效解决，因此一种新型OS——分时OS就应运而生了，紧接着实时OS也在工业、军事等领域的需求下也随之诞生。现在我们所使用的操作系统都属于这两类。\n\n\n\n\n分时操作系统\n为解决批处理系统中无交互手段、调试程序困难等缺点，出现了分时操作系统。\n工作方式\n * 一台主机连接了若干个","more":"<h1 id=\"分时操作系统\"><a href=\"#分时操作系统\" class=\"headerlink\" title=\"分时操作系统\"></a>分时操作系统</h1><h4 id=\"为解决批处理系统中无交互手段、调试程序困难等缺点，出现了分时操作系统。\"><a href=\"#为解决批处理系统中无交互手段、调试程序困难等缺点，出现了分时操作系统。\" class=\"headerlink\" title=\"为解决批处理系统中无交互手段、调试程序困难等缺点，出现了分时操作系统。\"></a>为解决批处理系统中无交互手段、调试程序困难等缺点，出现了分时操作系统。</h4><h3 id=\"工作方式\"><a href=\"#工作方式\" class=\"headerlink\" title=\"工作方式\"></a>工作方式</h3><ul>\n<li>一台主机连接了若干个终端</li>\n<li>每个终端（近程或远程）有一个用户在使用</li>\n<li>每个用户交互式地向系统提出命令请求</li>\n<li>系统接收每个用户的命令</li>\n<li>采用<code>时间片轮转</code>方式处理各用户的服务请求</li>\n<li>通过交互方式在终端上向用户显示结果</li>\n<li>用户根据上步结果发出下道命令</li>\n</ul>\n<h3 id=\"分时操作系统实现（条件）\"><a href=\"#分时操作系统实现（条件）\" class=\"headerlink\" title=\"分时操作系统实现（条件）\"></a>分时操作系统实现（条件）</h3><p>关键：及时接受、及时处理</p>\n<ul>\n<li>系统中配置多路卡，以便主机及时接收各用户输入的命令或数据</li>\n<li>每个终端配备缓存，以便暂存用户数据</li>\n<li>用户作业直接输入内存，可确保系统及时响应用户要求</li>\n<li>采用时间片轮转法，使一台主机同时为多个用户服务，且保证足够快的响应时间</li>\n</ul>\n<h3 id=\"时间片\"><a href=\"#时间片\" class=\"headerlink\" title=\"时间片\"></a>时间片</h3><p>操作系统将CPU的时间划分成若干各片段，称为时间片</p>\n<h3 id=\"时间片轮转法\"><a href=\"#时间片轮转法\" class=\"headerlink\" title=\"时间片轮转法\"></a>时间片轮转法</h3><p>操作系统以时间片为单位，轮流为每个终端用户服务，每次服务一个时间片。其特点是利用人的错觉，使人感觉不到。</p>\n<h3 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h3><ul>\n<li>多路性</li>\n<li>交互性</li>\n<li>独立性</li>\n<li>及时性</li>\n</ul>\n<blockquote>\n<p>典型的分时系统是MUTICS和UNIX</p>\n</blockquote>\n<hr>\n<h1 id=\"实时操作系统\"><a href=\"#实时操作系统\" class=\"headerlink\" title=\"实时操作系统\"></a>实时操作系统</h1><h4 id=\"能及时响应外部事件的请求，在规定时限内完成对该事件的处理。\"><a href=\"#能及时响应外部事件的请求，在规定时限内完成对该事件的处理。\" class=\"headerlink\" title=\"能及时响应外部事件的请求，在规定时限内完成对该事件的处理。\"></a>能及时响应外部事件的请求，在规定时限内完成对该事件的处理。</h4><h3 id=\"分类\"><a href=\"#分类\" class=\"headerlink\" title=\"分类\"></a>分类</h3><ol>\n<li>第一类：实施过程控制系统<blockquote>\n<p>工业控制、军事控制</p>\n</blockquote>\n</li>\n<li>第二类：实时通信（信息）处理系统<blockquote>\n<p>电讯、银行、飞机订票、股市行情</p>\n</blockquote>\n</li>\n<li>多媒体系统<blockquote>\n<p>将文本、图像、音频、视频等信息集中在一个文件中，形成多媒体文件。多媒体播放系统必须为实时处理系统。</p>\n</blockquote>\n</li>\n<li>嵌入式系统<blockquote>\n<p>嵌入在各智能仪器和设备中的芯片，可对设备进行控制或对其中信息做处理，需要实时控制或处理。</p>\n</blockquote>\n</li>\n</ol>\n<h3 id=\"主要追求目标\"><a href=\"#主要追求目标\" class=\"headerlink\" title=\"主要追求目标\"></a>主要追求目标</h3><ul>\n<li>对外部请求在严格时间范围内作出反应（及时响应）</li>\n<li>高可靠性（采用双工制：两台完全相同的计算机）</li>\n<li>安全性</li>\n<li>完整性</li>\n</ul>\n<h3 id=\"特点-1\"><a href=\"#特点-1\" class=\"headerlink\" title=\"特点\"></a>特点</h3><ul>\n<li>多路性</li>\n<li>交互性</li>\n<li>独立性</li>\n<li>及时性</li>\n<li>可靠性</li>\n</ul>\n<hr>\n<h1 id=\"分时系统与实时系统比较\"><a href=\"#分时系统与实时系统比较\" class=\"headerlink\" title=\"分时系统与实时系统比较\"></a>分时系统与实时系统比较</h1><ul>\n<li><p>多路性：两者都具有多路性。软实时与分时系统中的多路性表现为系统按分时原则为多个任务终端用户服务；硬实时则指系统周期性地对多路现场信息进行采集以及对多个对象或多个执行机构进行控制。</p>\n</li>\n<li><p>独立性：两者都具有独立性。每个终端用户在向分时系统提出服务请求时，是彼此独立的操作，互不干扰；而在实时控制系统中信息的采集和对对象的控制，也彼此互不干扰。</p>\n</li>\n<li><p>及时性：实时信息系统对实时性的要求与分时系统类似，都是以人所能接受的等待时间来确定；而实时控制系统的及时性，则是以控制对象所要求的开始截止时间或完成截止时间来确定的，一般为秒级、百毫秒级直至毫秒级，甚至有的要低于100微秒。</p>\n</li>\n<li><p>交互性：实时信息处理系统具有交互性，但这里人与系统的交互，仅限于访问系统中某些特定的专用服务程序。它不像分时系统那样能向终端用户提供数据处理服务、资源共享等服务。</p>\n</li>\n<li><p>可靠性：分时系统要求系统可靠，相比之下，实时系统则要求系统高度可靠。因为任何差错都可能带来巨大的经济损失甚至无法预料的灾难性后果。因此，在实时系统中，采取了多级容错措施来保证系统的安全及数据的安全。</p>\n</li>\n</ul>"},{"title":"操作系统第二章作业","date":"2021-04-13T02:20:32.000Z","_content":"\n# 第二章作业\n\n---\n## 版权声明\n\n- 版权声明：本文为AYXYJ原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接和本声明。\n本文链接：[链接地址](https://blog.csdn.net/weixin_39531549/article/details/100857716)\n\n- 版权声明：本文为qq_33583069原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接和本声明。\n本文链接：[链接地址](https://blog.csdn.net/qq_33583069/article/details/106097992)\n\n---\n## 正文\n\n1. 利用信号量机制来解决任意前驱图所描述的并发执行的过程。（前趋图可自行设计）\n\n<!-- more -->\n\n<center><img src=\"https://z3.ax1x.com/2021/04/13/cyejsS.jpg\" width=\"70%\"></center>\n\n\n```\nvar a,b,c,d,e,f,g:semaphore:=0,0,0,0,0,0,0;\nbegin\nCobegin\nbegin S1;signal(a);signal(b);end;\nbegin wait(a);s2; signal(c); signal(d); end;\nbegin wait(b);s3; signal(e); end;\nbegin wait(c);s4; signal(f); end;\nbegin wait(d);s5; signal(g); end;\nbegin wait(e);wait(f);wait(g);s6; end;\nCoend\nend\n```\n\n2. 图书馆阅览室问题\n   >问题描述：假定阅览室最多可同时容纳100个人阅读，读者进入时，必须在阅览室门口的一个登记表上登记，内容包括姓名. 座号等，离开时要撤掉登记内容。用P、 V操作描述读者进程的同步算法。\n\n```\nvar mutex,res:semaphore;\nmutex:=1; res:=100;\n\nProcedure reader(readerID);\n{\n\tP(res);\n\tP(mutex);\n\tregistrationInformation(readerID);\n\tV(mutex);\n\treading();\n\tP(mutex);\n\tcancelRecord(readerID);\n\tV(mutex);\n\tV(res);\n}\n```\n\n3. 吃水果问题\n   >问题描述：桌上有一只盘子，每次只能放一个水果，爸爸专向盘中放苹果，妈妈专向盘中放桔子，儿子专等吃盘里的桔子，女儿专等吃盘里的苹果。只要盘子空，则爸爸或妈妈可向盘中放水果，仅当盘中有自己需要的水果时，儿子或女儿可从中取出，请给出四人之间的同步关系，并用PV操作实现四人正确活动的程序。\n\n```\nvar mutex,empty,orange,apple:Semaphore;\nmutex = 1; empty = 1; orange = 0; apple = 0;\n\nCobegin\n{\n　　 father                    //父亲进程\n    {\n　　　　while (true)\n       {\n　　　　　　　　   P(empty);\n                P(mutex);\n                向盘中放苹果;\n                V(mutex);\n                V(apple);\n        }\n    }\n    mother                    //母亲进程\n    {\n　　　　while (true)\n       {\n　　　　　　　　　 P(empty); \n                P(mutex);\n                向盘中放桔子;\n                V(mutex);\n                V(orange);\n        }\n    }\n    daughter                  //女儿进程\n    {\n　　　　while (true)\n       {\n　　　　　　      P(apple);\n                P(mutex);\n                取盘中苹果;\n                V(mutex);\n                V(empty);\n        }\n    }\n    son                            //儿子进程\n    {\n　　　　while (true)\n       {\n                P(orange);\n                P(mutex);\n                取盘中桔子;\n                V(mutex);\n                V(empty);\n        }\n    }\n}\nCoend\n```\n   \n4. 理发师问题(Dijkstra  1965)\n   >问题描述：一个理发店由一个有几张椅子的等候室和一个放有一张理发椅的理发室组成。若没有要理发的顾客，则理发师就去睡觉；若一顾客走进理发店且所有的椅子都被占用了，则该顾客就离开理发店；若理发师正在为人理发，则该顾客就找一张空椅子坐下等待；若理发师在睡觉，则顾客就唤醒他，设计一个协调理发师和顾客的程序。\n\n```\nvar mutex,Wait,barbers:Semaphore;\nvar custNum:Int;\nmutex = 1; Wait = 0; babers = 0;\ncustNum = 0;\n\nCostumer()\n{\n　　while(true)\n　　{\n        P(mutex);\n        if(custNum>0)\n　　　　　{\n            if(custNum<N)\n　　　　　　　{\n                V(mutex);\n                CustNum++；\n            }\n　　　　　　　else \n　　　　　　　　{\n                V(mutex);\n                离开;\n             }\n　　　　　}\n　　　　else\n　　　　{\n            V(mutex);\n            V(barbers);\n            理发;\n            离开;\n            P(mutex);        \n            custNum--;      \n            V(mutex);       \n            V(wait);        \n　　　　}\n　　}\n}\n\nBarber()\n{\n　　while(true)\n　　{\n        P(mutex);            \n        if(custNum ==0)    　　　　 \n        {\n            V(mutex);        \n            P(barbers);        　　     \n        }\n　　　　else\n　　　　{\n            V(mutex);        \n            理发;\n　　　　}\n　　}\n}\n```\n\n5. 司机—售票员问题\n   \n设公共汽车上，司机和售票员的活动分别是：\n   \n|   司机   |  售票员  |\n| :------: | :------: |\n| 启动车辆 | 上下乘客 |\n| 正常行驶 |  关车门  |\n| 到站停车 |   售票   |\n|          |  开车门  |\n|          | 上下乘客 |\n\n在汽车不断到站，停车，行驶过程中，请描述这两个活动的同步关系。（售票员通过关车门控制司机启动车辆；司机通过到站停车控制售票员开车门）。\n\n```\nvar door,stop:Semaphore;\ndoor = 0; stop = 0;\n\nvoid conductor()\n{\n\twhile(true)\n\t{\n        上下乘客;\n\t\t关车门;\n\t\tsignal(door);\n\t\t售票;\n\t\twait(stop);\n\t\t开车门;\n        上下乘客;\n\t}\n}\nvoid driver()\n{\n\twhile(true)\n\t{\n\t\twait(door);\n\t\t正常行驶;\n\t\tsignal(stop);\n\t}\n}\n```\n\n6. 对哲学进餐问题给出两种（第1、 3）解决死锁方法的程序描述。\n\n- 方案一\n  >至多允许有四位哲学家同时去拿左边的筷子，然后在允许拿右边的筷子，最终能保证至少有一位哲学家能够进餐，并在用毕时能同时释放他用过的两只筷子，从而使更多的哲学家能够进餐\n- 方案二\n  >仅当哲学家的左，右两只筷子均可用时，才允许他拿起筷子进餐\n- 方案三\n  >规定奇数号的哲学家先拿起他左边的筷子，然后再去拿他右边的筷子；而偶数号的哲学家则先拿起他右边的筷子，然后再去拿他左边的筷子。按此规定，将是1、2号哲学家竞争1号筷子，3、4号哲学家竞争3号筷子。即五个哲学家都竞争奇数号筷子，获得后，再去竞争偶数号筷子，最后总会有一个哲学家能获得两支筷子而进餐\n\n\n7. 用P、V操作来实现receive 原语:( 参见教材 p80-81)\n\n```\n//R:接收进程名,b:欲接收信息所在内存地址\n//s-b=n; s-m=0; b-mutex=1; m-mutex=1;\nReceive(R,b)\nCobegin\nBegin\n    根据R找发送进程;\n    如果没有找到\n        return error;\n    申请空缓冲区P(s-b);\n    p(b-mutex);\n    清空缓冲区;\n    把消息从b处复制到空缓冲区;\n    V(b-mutex);\n    P(m-mutex);\n    Receive程序查找其消息缓冲区，将第一个消息缓冲区中内容，消息，正文，长度，发送到接收区b;\n    V(m-mutex);\n    V(s-m);\nEnd\nCoend\n\n```\n","source":"_posts/操作系统第二章作业.md","raw":"---\ntitle: 操作系统第二章作业\ndate: 2021-04-13 10:20:32\ntags: 操作系统\n---\n\n# 第二章作业\n\n---\n## 版权声明\n\n- 版权声明：本文为AYXYJ原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接和本声明。\n本文链接：[链接地址](https://blog.csdn.net/weixin_39531549/article/details/100857716)\n\n- 版权声明：本文为qq_33583069原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接和本声明。\n本文链接：[链接地址](https://blog.csdn.net/qq_33583069/article/details/106097992)\n\n---\n## 正文\n\n1. 利用信号量机制来解决任意前驱图所描述的并发执行的过程。（前趋图可自行设计）\n\n<!-- more -->\n\n<center><img src=\"https://z3.ax1x.com/2021/04/13/cyejsS.jpg\" width=\"70%\"></center>\n\n\n```\nvar a,b,c,d,e,f,g:semaphore:=0,0,0,0,0,0,0;\nbegin\nCobegin\nbegin S1;signal(a);signal(b);end;\nbegin wait(a);s2; signal(c); signal(d); end;\nbegin wait(b);s3; signal(e); end;\nbegin wait(c);s4; signal(f); end;\nbegin wait(d);s5; signal(g); end;\nbegin wait(e);wait(f);wait(g);s6; end;\nCoend\nend\n```\n\n2. 图书馆阅览室问题\n   >问题描述：假定阅览室最多可同时容纳100个人阅读，读者进入时，必须在阅览室门口的一个登记表上登记，内容包括姓名. 座号等，离开时要撤掉登记内容。用P、 V操作描述读者进程的同步算法。\n\n```\nvar mutex,res:semaphore;\nmutex:=1; res:=100;\n\nProcedure reader(readerID);\n{\n\tP(res);\n\tP(mutex);\n\tregistrationInformation(readerID);\n\tV(mutex);\n\treading();\n\tP(mutex);\n\tcancelRecord(readerID);\n\tV(mutex);\n\tV(res);\n}\n```\n\n3. 吃水果问题\n   >问题描述：桌上有一只盘子，每次只能放一个水果，爸爸专向盘中放苹果，妈妈专向盘中放桔子，儿子专等吃盘里的桔子，女儿专等吃盘里的苹果。只要盘子空，则爸爸或妈妈可向盘中放水果，仅当盘中有自己需要的水果时，儿子或女儿可从中取出，请给出四人之间的同步关系，并用PV操作实现四人正确活动的程序。\n\n```\nvar mutex,empty,orange,apple:Semaphore;\nmutex = 1; empty = 1; orange = 0; apple = 0;\n\nCobegin\n{\n　　 father                    //父亲进程\n    {\n　　　　while (true)\n       {\n　　　　　　　　   P(empty);\n                P(mutex);\n                向盘中放苹果;\n                V(mutex);\n                V(apple);\n        }\n    }\n    mother                    //母亲进程\n    {\n　　　　while (true)\n       {\n　　　　　　　　　 P(empty); \n                P(mutex);\n                向盘中放桔子;\n                V(mutex);\n                V(orange);\n        }\n    }\n    daughter                  //女儿进程\n    {\n　　　　while (true)\n       {\n　　　　　　      P(apple);\n                P(mutex);\n                取盘中苹果;\n                V(mutex);\n                V(empty);\n        }\n    }\n    son                            //儿子进程\n    {\n　　　　while (true)\n       {\n                P(orange);\n                P(mutex);\n                取盘中桔子;\n                V(mutex);\n                V(empty);\n        }\n    }\n}\nCoend\n```\n   \n4. 理发师问题(Dijkstra  1965)\n   >问题描述：一个理发店由一个有几张椅子的等候室和一个放有一张理发椅的理发室组成。若没有要理发的顾客，则理发师就去睡觉；若一顾客走进理发店且所有的椅子都被占用了，则该顾客就离开理发店；若理发师正在为人理发，则该顾客就找一张空椅子坐下等待；若理发师在睡觉，则顾客就唤醒他，设计一个协调理发师和顾客的程序。\n\n```\nvar mutex,Wait,barbers:Semaphore;\nvar custNum:Int;\nmutex = 1; Wait = 0; babers = 0;\ncustNum = 0;\n\nCostumer()\n{\n　　while(true)\n　　{\n        P(mutex);\n        if(custNum>0)\n　　　　　{\n            if(custNum<N)\n　　　　　　　{\n                V(mutex);\n                CustNum++；\n            }\n　　　　　　　else \n　　　　　　　　{\n                V(mutex);\n                离开;\n             }\n　　　　　}\n　　　　else\n　　　　{\n            V(mutex);\n            V(barbers);\n            理发;\n            离开;\n            P(mutex);        \n            custNum--;      \n            V(mutex);       \n            V(wait);        \n　　　　}\n　　}\n}\n\nBarber()\n{\n　　while(true)\n　　{\n        P(mutex);            \n        if(custNum ==0)    　　　　 \n        {\n            V(mutex);        \n            P(barbers);        　　     \n        }\n　　　　else\n　　　　{\n            V(mutex);        \n            理发;\n　　　　}\n　　}\n}\n```\n\n5. 司机—售票员问题\n   \n设公共汽车上，司机和售票员的活动分别是：\n   \n|   司机   |  售票员  |\n| :------: | :------: |\n| 启动车辆 | 上下乘客 |\n| 正常行驶 |  关车门  |\n| 到站停车 |   售票   |\n|          |  开车门  |\n|          | 上下乘客 |\n\n在汽车不断到站，停车，行驶过程中，请描述这两个活动的同步关系。（售票员通过关车门控制司机启动车辆；司机通过到站停车控制售票员开车门）。\n\n```\nvar door,stop:Semaphore;\ndoor = 0; stop = 0;\n\nvoid conductor()\n{\n\twhile(true)\n\t{\n        上下乘客;\n\t\t关车门;\n\t\tsignal(door);\n\t\t售票;\n\t\twait(stop);\n\t\t开车门;\n        上下乘客;\n\t}\n}\nvoid driver()\n{\n\twhile(true)\n\t{\n\t\twait(door);\n\t\t正常行驶;\n\t\tsignal(stop);\n\t}\n}\n```\n\n6. 对哲学进餐问题给出两种（第1、 3）解决死锁方法的程序描述。\n\n- 方案一\n  >至多允许有四位哲学家同时去拿左边的筷子，然后在允许拿右边的筷子，最终能保证至少有一位哲学家能够进餐，并在用毕时能同时释放他用过的两只筷子，从而使更多的哲学家能够进餐\n- 方案二\n  >仅当哲学家的左，右两只筷子均可用时，才允许他拿起筷子进餐\n- 方案三\n  >规定奇数号的哲学家先拿起他左边的筷子，然后再去拿他右边的筷子；而偶数号的哲学家则先拿起他右边的筷子，然后再去拿他左边的筷子。按此规定，将是1、2号哲学家竞争1号筷子，3、4号哲学家竞争3号筷子。即五个哲学家都竞争奇数号筷子，获得后，再去竞争偶数号筷子，最后总会有一个哲学家能获得两支筷子而进餐\n\n\n7. 用P、V操作来实现receive 原语:( 参见教材 p80-81)\n\n```\n//R:接收进程名,b:欲接收信息所在内存地址\n//s-b=n; s-m=0; b-mutex=1; m-mutex=1;\nReceive(R,b)\nCobegin\nBegin\n    根据R找发送进程;\n    如果没有找到\n        return error;\n    申请空缓冲区P(s-b);\n    p(b-mutex);\n    清空缓冲区;\n    把消息从b处复制到空缓冲区;\n    V(b-mutex);\n    P(m-mutex);\n    Receive程序查找其消息缓冲区，将第一个消息缓冲区中内容，消息，正文，长度，发送到接收区b;\n    V(m-mutex);\n    V(s-m);\nEnd\nCoend\n\n```\n","slug":"操作系统第二章作业","published":1,"updated":"2021-04-20T02:27:58.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckojvxerm001gboe25yf015fn","content":"<h1 id=\"第二章作业\"><a href=\"#第二章作业\" class=\"headerlink\" title=\"第二章作业\"></a>第二章作业</h1><hr>\n<h2 id=\"版权声明\"><a href=\"#版权声明\" class=\"headerlink\" title=\"版权声明\"></a>版权声明</h2><ul>\n<li><p>版权声明：本文为AYXYJ原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接和本声明。<br>本文链接：<a href=\"https://blog.csdn.net/weixin_39531549/article/details/100857716\">链接地址</a></p>\n</li>\n<li><p>版权声明：本文为qq_33583069原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接和本声明。<br>本文链接：<a href=\"https://blog.csdn.net/qq_33583069/article/details/106097992\">链接地址</a></p>\n</li>\n</ul>\n<hr>\n<h2 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h2><ol>\n<li>利用信号量机制来解决任意前驱图所描述的并发执行的过程。（前趋图可自行设计）</li>\n</ol>\n<span id=\"more\"></span>\n\n<center><img src=\"https://z3.ax1x.com/2021/04/13/cyejsS.jpg\" width=\"70%\"></center>\n\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var a,b,c,d,e,f,g:semaphore:&#x3D;0,0,0,0,0,0,0;</span><br><span class=\"line\">begin</span><br><span class=\"line\">Cobegin</span><br><span class=\"line\">begin S1;signal(a);signal(b);end;</span><br><span class=\"line\">begin wait(a);s2; signal(c); signal(d); end;</span><br><span class=\"line\">begin wait(b);s3; signal(e); end;</span><br><span class=\"line\">begin wait(c);s4; signal(f); end;</span><br><span class=\"line\">begin wait(d);s5; signal(g); end;</span><br><span class=\"line\">begin wait(e);wait(f);wait(g);s6; end;</span><br><span class=\"line\">Coend</span><br><span class=\"line\">end</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>图书馆阅览室问题<blockquote>\n<p>问题描述：假定阅览室最多可同时容纳100个人阅读，读者进入时，必须在阅览室门口的一个登记表上登记，内容包括姓名. 座号等，离开时要撤掉登记内容。用P、 V操作描述读者进程的同步算法。</p>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var mutex,res:semaphore;</span><br><span class=\"line\">mutex:&#x3D;1; res:&#x3D;100;</span><br><span class=\"line\"></span><br><span class=\"line\">Procedure reader(readerID);</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tP(res);</span><br><span class=\"line\">\tP(mutex);</span><br><span class=\"line\">\tregistrationInformation(readerID);</span><br><span class=\"line\">\tV(mutex);</span><br><span class=\"line\">\treading();</span><br><span class=\"line\">\tP(mutex);</span><br><span class=\"line\">\tcancelRecord(readerID);</span><br><span class=\"line\">\tV(mutex);</span><br><span class=\"line\">\tV(res);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>吃水果问题<blockquote>\n<p>问题描述：桌上有一只盘子，每次只能放一个水果，爸爸专向盘中放苹果，妈妈专向盘中放桔子，儿子专等吃盘里的桔子，女儿专等吃盘里的苹果。只要盘子空，则爸爸或妈妈可向盘中放水果，仅当盘中有自己需要的水果时，儿子或女儿可从中取出，请给出四人之间的同步关系，并用PV操作实现四人正确活动的程序。</p>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var mutex,empty,orange,apple:Semaphore;</span><br><span class=\"line\">mutex &#x3D; 1; empty &#x3D; 1; orange &#x3D; 0; apple &#x3D; 0;</span><br><span class=\"line\"></span><br><span class=\"line\">Cobegin</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">　　 father                    &#x2F;&#x2F;父亲进程</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">　　　　while (true)</span><br><span class=\"line\">       &#123;</span><br><span class=\"line\">　　　　　　　　   P(empty);</span><br><span class=\"line\">                P(mutex);</span><br><span class=\"line\">                向盘中放苹果;</span><br><span class=\"line\">                V(mutex);</span><br><span class=\"line\">                V(apple);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    mother                    &#x2F;&#x2F;母亲进程</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">　　　　while (true)</span><br><span class=\"line\">       &#123;</span><br><span class=\"line\">　　　　　　　　　 P(empty); </span><br><span class=\"line\">                P(mutex);</span><br><span class=\"line\">                向盘中放桔子;</span><br><span class=\"line\">                V(mutex);</span><br><span class=\"line\">                V(orange);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    daughter                  &#x2F;&#x2F;女儿进程</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">　　　　while (true)</span><br><span class=\"line\">       &#123;</span><br><span class=\"line\">　　　　　　      P(apple);</span><br><span class=\"line\">                P(mutex);</span><br><span class=\"line\">                取盘中苹果;</span><br><span class=\"line\">                V(mutex);</span><br><span class=\"line\">                V(empty);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    son                            &#x2F;&#x2F;儿子进程</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">　　　　while (true)</span><br><span class=\"line\">       &#123;</span><br><span class=\"line\">                P(orange);</span><br><span class=\"line\">                P(mutex);</span><br><span class=\"line\">                取盘中桔子;</span><br><span class=\"line\">                V(mutex);</span><br><span class=\"line\">                V(empty);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Coend</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>理发师问题(Dijkstra  1965)<blockquote>\n<p>问题描述：一个理发店由一个有几张椅子的等候室和一个放有一张理发椅的理发室组成。若没有要理发的顾客，则理发师就去睡觉；若一顾客走进理发店且所有的椅子都被占用了，则该顾客就离开理发店；若理发师正在为人理发，则该顾客就找一张空椅子坐下等待；若理发师在睡觉，则顾客就唤醒他，设计一个协调理发师和顾客的程序。</p>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var mutex,Wait,barbers:Semaphore;</span><br><span class=\"line\">var custNum:Int;</span><br><span class=\"line\">mutex &#x3D; 1; Wait &#x3D; 0; babers &#x3D; 0;</span><br><span class=\"line\">custNum &#x3D; 0;</span><br><span class=\"line\"></span><br><span class=\"line\">Costumer()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">　　while(true)</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">        P(mutex);</span><br><span class=\"line\">        if(custNum&gt;0)</span><br><span class=\"line\">　　　　　&#123;</span><br><span class=\"line\">            if(custNum&lt;N)</span><br><span class=\"line\">　　　　　　　&#123;</span><br><span class=\"line\">                V(mutex);</span><br><span class=\"line\">                CustNum++；</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">　　　　　　　else </span><br><span class=\"line\">　　　　　　　　&#123;</span><br><span class=\"line\">                V(mutex);</span><br><span class=\"line\">                离开;</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">　　　　　&#125;</span><br><span class=\"line\">　　　　else</span><br><span class=\"line\">　　　　&#123;</span><br><span class=\"line\">            V(mutex);</span><br><span class=\"line\">            V(barbers);</span><br><span class=\"line\">            理发;</span><br><span class=\"line\">            离开;</span><br><span class=\"line\">            P(mutex);        </span><br><span class=\"line\">            custNum--;      </span><br><span class=\"line\">            V(mutex);       </span><br><span class=\"line\">            V(wait);        </span><br><span class=\"line\">　　　　&#125;</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Barber()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">　　while(true)</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">        P(mutex);            </span><br><span class=\"line\">        if(custNum &#x3D;&#x3D;0)    　　　　 </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            V(mutex);        </span><br><span class=\"line\">            P(barbers);        　　     </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">　　　　else</span><br><span class=\"line\">　　　　&#123;</span><br><span class=\"line\">            V(mutex);        </span><br><span class=\"line\">            理发;</span><br><span class=\"line\">　　　　&#125;</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"5\">\n<li>司机—售票员问题</li>\n</ol>\n<p>设公共汽车上，司机和售票员的活动分别是：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">司机</th>\n<th align=\"center\">售票员</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">启动车辆</td>\n<td align=\"center\">上下乘客</td>\n</tr>\n<tr>\n<td align=\"center\">正常行驶</td>\n<td align=\"center\">关车门</td>\n</tr>\n<tr>\n<td align=\"center\">到站停车</td>\n<td align=\"center\">售票</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\">开车门</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\">上下乘客</td>\n</tr>\n</tbody></table>\n<p>在汽车不断到站，停车，行驶过程中，请描述这两个活动的同步关系。（售票员通过关车门控制司机启动车辆；司机通过到站停车控制售票员开车门）。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var door,stop:Semaphore;</span><br><span class=\"line\">door &#x3D; 0; stop &#x3D; 0;</span><br><span class=\"line\"></span><br><span class=\"line\">void conductor()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\twhile(true)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">        上下乘客;</span><br><span class=\"line\">\t\t关车门;</span><br><span class=\"line\">\t\tsignal(door);</span><br><span class=\"line\">\t\t售票;</span><br><span class=\"line\">\t\twait(stop);</span><br><span class=\"line\">\t\t开车门;</span><br><span class=\"line\">        上下乘客;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">void driver()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\twhile(true)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\twait(door);</span><br><span class=\"line\">\t\t正常行驶;</span><br><span class=\"line\">\t\tsignal(stop);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"6\">\n<li>对哲学进餐问题给出两种（第1、 3）解决死锁方法的程序描述。</li>\n</ol>\n<ul>\n<li>方案一<blockquote>\n<p>至多允许有四位哲学家同时去拿左边的筷子，然后在允许拿右边的筷子，最终能保证至少有一位哲学家能够进餐，并在用毕时能同时释放他用过的两只筷子，从而使更多的哲学家能够进餐</p>\n</blockquote>\n</li>\n<li>方案二<blockquote>\n<p>仅当哲学家的左，右两只筷子均可用时，才允许他拿起筷子进餐</p>\n</blockquote>\n</li>\n<li>方案三<blockquote>\n<p>规定奇数号的哲学家先拿起他左边的筷子，然后再去拿他右边的筷子；而偶数号的哲学家则先拿起他右边的筷子，然后再去拿他左边的筷子。按此规定，将是1、2号哲学家竞争1号筷子，3、4号哲学家竞争3号筷子。即五个哲学家都竞争奇数号筷子，获得后，再去竞争偶数号筷子，最后总会有一个哲学家能获得两支筷子而进餐</p>\n</blockquote>\n</li>\n</ul>\n<ol start=\"7\">\n<li>用P、V操作来实现receive 原语:( 参见教材 p80-81)</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;R:接收进程名,b:欲接收信息所在内存地址</span><br><span class=\"line\">&#x2F;&#x2F;s-b&#x3D;n; s-m&#x3D;0; b-mutex&#x3D;1; m-mutex&#x3D;1;</span><br><span class=\"line\">Receive(R,b)</span><br><span class=\"line\">Cobegin</span><br><span class=\"line\">Begin</span><br><span class=\"line\">    根据R找发送进程;</span><br><span class=\"line\">    如果没有找到</span><br><span class=\"line\">        return error;</span><br><span class=\"line\">    申请空缓冲区P(s-b);</span><br><span class=\"line\">    p(b-mutex);</span><br><span class=\"line\">    清空缓冲区;</span><br><span class=\"line\">    把消息从b处复制到空缓冲区;</span><br><span class=\"line\">    V(b-mutex);</span><br><span class=\"line\">    P(m-mutex);</span><br><span class=\"line\">    Receive程序查找其消息缓冲区，将第一个消息缓冲区中内容，消息，正文，长度，发送到接收区b;</span><br><span class=\"line\">    V(m-mutex);</span><br><span class=\"line\">    V(s-m);</span><br><span class=\"line\">End</span><br><span class=\"line\">Coend</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","site":{"data":{}},"excerpt":"第二章作业\n\n\n\n版权声明\n * 版权声明：本文为AYXYJ原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接和本声明。\n   本文链接：链接地址\n   \n   \n * 版权声明：本文为qq_33583069原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接和本声明。\n   本文链接：链接地址\n   \n   \n\n\n\n\n正文\n 1. 利用信号量机制来解决任意前驱图所描述的并发执行的过程。（前趋图可自行设计）\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\nvar a,b,c,d,e,f,g:semaphore:=0,0,0,0,0,0,0;\n","more":"<center><img src=\"https://z3.ax1x.com/2021/04/13/cyejsS.jpg\" width=\"70%\"></center>\n\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var a,b,c,d,e,f,g:semaphore:&#x3D;0,0,0,0,0,0,0;</span><br><span class=\"line\">begin</span><br><span class=\"line\">Cobegin</span><br><span class=\"line\">begin S1;signal(a);signal(b);end;</span><br><span class=\"line\">begin wait(a);s2; signal(c); signal(d); end;</span><br><span class=\"line\">begin wait(b);s3; signal(e); end;</span><br><span class=\"line\">begin wait(c);s4; signal(f); end;</span><br><span class=\"line\">begin wait(d);s5; signal(g); end;</span><br><span class=\"line\">begin wait(e);wait(f);wait(g);s6; end;</span><br><span class=\"line\">Coend</span><br><span class=\"line\">end</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>图书馆阅览室问题<blockquote>\n<p>问题描述：假定阅览室最多可同时容纳100个人阅读，读者进入时，必须在阅览室门口的一个登记表上登记，内容包括姓名. 座号等，离开时要撤掉登记内容。用P、 V操作描述读者进程的同步算法。</p>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var mutex,res:semaphore;</span><br><span class=\"line\">mutex:&#x3D;1; res:&#x3D;100;</span><br><span class=\"line\"></span><br><span class=\"line\">Procedure reader(readerID);</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tP(res);</span><br><span class=\"line\">\tP(mutex);</span><br><span class=\"line\">\tregistrationInformation(readerID);</span><br><span class=\"line\">\tV(mutex);</span><br><span class=\"line\">\treading();</span><br><span class=\"line\">\tP(mutex);</span><br><span class=\"line\">\tcancelRecord(readerID);</span><br><span class=\"line\">\tV(mutex);</span><br><span class=\"line\">\tV(res);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>吃水果问题<blockquote>\n<p>问题描述：桌上有一只盘子，每次只能放一个水果，爸爸专向盘中放苹果，妈妈专向盘中放桔子，儿子专等吃盘里的桔子，女儿专等吃盘里的苹果。只要盘子空，则爸爸或妈妈可向盘中放水果，仅当盘中有自己需要的水果时，儿子或女儿可从中取出，请给出四人之间的同步关系，并用PV操作实现四人正确活动的程序。</p>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var mutex,empty,orange,apple:Semaphore;</span><br><span class=\"line\">mutex &#x3D; 1; empty &#x3D; 1; orange &#x3D; 0; apple &#x3D; 0;</span><br><span class=\"line\"></span><br><span class=\"line\">Cobegin</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">　　 father                    &#x2F;&#x2F;父亲进程</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">　　　　while (true)</span><br><span class=\"line\">       &#123;</span><br><span class=\"line\">　　　　　　　　   P(empty);</span><br><span class=\"line\">                P(mutex);</span><br><span class=\"line\">                向盘中放苹果;</span><br><span class=\"line\">                V(mutex);</span><br><span class=\"line\">                V(apple);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    mother                    &#x2F;&#x2F;母亲进程</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">　　　　while (true)</span><br><span class=\"line\">       &#123;</span><br><span class=\"line\">　　　　　　　　　 P(empty); </span><br><span class=\"line\">                P(mutex);</span><br><span class=\"line\">                向盘中放桔子;</span><br><span class=\"line\">                V(mutex);</span><br><span class=\"line\">                V(orange);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    daughter                  &#x2F;&#x2F;女儿进程</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">　　　　while (true)</span><br><span class=\"line\">       &#123;</span><br><span class=\"line\">　　　　　　      P(apple);</span><br><span class=\"line\">                P(mutex);</span><br><span class=\"line\">                取盘中苹果;</span><br><span class=\"line\">                V(mutex);</span><br><span class=\"line\">                V(empty);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    son                            &#x2F;&#x2F;儿子进程</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">　　　　while (true)</span><br><span class=\"line\">       &#123;</span><br><span class=\"line\">                P(orange);</span><br><span class=\"line\">                P(mutex);</span><br><span class=\"line\">                取盘中桔子;</span><br><span class=\"line\">                V(mutex);</span><br><span class=\"line\">                V(empty);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Coend</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>理发师问题(Dijkstra  1965)<blockquote>\n<p>问题描述：一个理发店由一个有几张椅子的等候室和一个放有一张理发椅的理发室组成。若没有要理发的顾客，则理发师就去睡觉；若一顾客走进理发店且所有的椅子都被占用了，则该顾客就离开理发店；若理发师正在为人理发，则该顾客就找一张空椅子坐下等待；若理发师在睡觉，则顾客就唤醒他，设计一个协调理发师和顾客的程序。</p>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var mutex,Wait,barbers:Semaphore;</span><br><span class=\"line\">var custNum:Int;</span><br><span class=\"line\">mutex &#x3D; 1; Wait &#x3D; 0; babers &#x3D; 0;</span><br><span class=\"line\">custNum &#x3D; 0;</span><br><span class=\"line\"></span><br><span class=\"line\">Costumer()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">　　while(true)</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">        P(mutex);</span><br><span class=\"line\">        if(custNum&gt;0)</span><br><span class=\"line\">　　　　　&#123;</span><br><span class=\"line\">            if(custNum&lt;N)</span><br><span class=\"line\">　　　　　　　&#123;</span><br><span class=\"line\">                V(mutex);</span><br><span class=\"line\">                CustNum++；</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">　　　　　　　else </span><br><span class=\"line\">　　　　　　　　&#123;</span><br><span class=\"line\">                V(mutex);</span><br><span class=\"line\">                离开;</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">　　　　　&#125;</span><br><span class=\"line\">　　　　else</span><br><span class=\"line\">　　　　&#123;</span><br><span class=\"line\">            V(mutex);</span><br><span class=\"line\">            V(barbers);</span><br><span class=\"line\">            理发;</span><br><span class=\"line\">            离开;</span><br><span class=\"line\">            P(mutex);        </span><br><span class=\"line\">            custNum--;      </span><br><span class=\"line\">            V(mutex);       </span><br><span class=\"line\">            V(wait);        </span><br><span class=\"line\">　　　　&#125;</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Barber()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">　　while(true)</span><br><span class=\"line\">　　&#123;</span><br><span class=\"line\">        P(mutex);            </span><br><span class=\"line\">        if(custNum &#x3D;&#x3D;0)    　　　　 </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            V(mutex);        </span><br><span class=\"line\">            P(barbers);        　　     </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">　　　　else</span><br><span class=\"line\">　　　　&#123;</span><br><span class=\"line\">            V(mutex);        </span><br><span class=\"line\">            理发;</span><br><span class=\"line\">　　　　&#125;</span><br><span class=\"line\">　　&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"5\">\n<li>司机—售票员问题</li>\n</ol>\n<p>设公共汽车上，司机和售票员的活动分别是：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">司机</th>\n<th align=\"center\">售票员</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">启动车辆</td>\n<td align=\"center\">上下乘客</td>\n</tr>\n<tr>\n<td align=\"center\">正常行驶</td>\n<td align=\"center\">关车门</td>\n</tr>\n<tr>\n<td align=\"center\">到站停车</td>\n<td align=\"center\">售票</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\">开车门</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\">上下乘客</td>\n</tr>\n</tbody></table>\n<p>在汽车不断到站，停车，行驶过程中，请描述这两个活动的同步关系。（售票员通过关车门控制司机启动车辆；司机通过到站停车控制售票员开车门）。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var door,stop:Semaphore;</span><br><span class=\"line\">door &#x3D; 0; stop &#x3D; 0;</span><br><span class=\"line\"></span><br><span class=\"line\">void conductor()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\twhile(true)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">        上下乘客;</span><br><span class=\"line\">\t\t关车门;</span><br><span class=\"line\">\t\tsignal(door);</span><br><span class=\"line\">\t\t售票;</span><br><span class=\"line\">\t\twait(stop);</span><br><span class=\"line\">\t\t开车门;</span><br><span class=\"line\">        上下乘客;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">void driver()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\twhile(true)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\twait(door);</span><br><span class=\"line\">\t\t正常行驶;</span><br><span class=\"line\">\t\tsignal(stop);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"6\">\n<li>对哲学进餐问题给出两种（第1、 3）解决死锁方法的程序描述。</li>\n</ol>\n<ul>\n<li>方案一<blockquote>\n<p>至多允许有四位哲学家同时去拿左边的筷子，然后在允许拿右边的筷子，最终能保证至少有一位哲学家能够进餐，并在用毕时能同时释放他用过的两只筷子，从而使更多的哲学家能够进餐</p>\n</blockquote>\n</li>\n<li>方案二<blockquote>\n<p>仅当哲学家的左，右两只筷子均可用时，才允许他拿起筷子进餐</p>\n</blockquote>\n</li>\n<li>方案三<blockquote>\n<p>规定奇数号的哲学家先拿起他左边的筷子，然后再去拿他右边的筷子；而偶数号的哲学家则先拿起他右边的筷子，然后再去拿他左边的筷子。按此规定，将是1、2号哲学家竞争1号筷子，3、4号哲学家竞争3号筷子。即五个哲学家都竞争奇数号筷子，获得后，再去竞争偶数号筷子，最后总会有一个哲学家能获得两支筷子而进餐</p>\n</blockquote>\n</li>\n</ul>\n<ol start=\"7\">\n<li>用P、V操作来实现receive 原语:( 参见教材 p80-81)</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;R:接收进程名,b:欲接收信息所在内存地址</span><br><span class=\"line\">&#x2F;&#x2F;s-b&#x3D;n; s-m&#x3D;0; b-mutex&#x3D;1; m-mutex&#x3D;1;</span><br><span class=\"line\">Receive(R,b)</span><br><span class=\"line\">Cobegin</span><br><span class=\"line\">Begin</span><br><span class=\"line\">    根据R找发送进程;</span><br><span class=\"line\">    如果没有找到</span><br><span class=\"line\">        return error;</span><br><span class=\"line\">    申请空缓冲区P(s-b);</span><br><span class=\"line\">    p(b-mutex);</span><br><span class=\"line\">    清空缓冲区;</span><br><span class=\"line\">    把消息从b处复制到空缓冲区;</span><br><span class=\"line\">    V(b-mutex);</span><br><span class=\"line\">    P(m-mutex);</span><br><span class=\"line\">    Receive程序查找其消息缓冲区，将第一个消息缓冲区中内容，消息，正文，长度，发送到接收区b;</span><br><span class=\"line\">    V(m-mutex);</span><br><span class=\"line\">    V(s-m);</span><br><span class=\"line\">End</span><br><span class=\"line\">Coend</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"数组与矩阵","date":"2020-10-13T15:23:11.000Z","_content":"\n*****\n\n### 10.13数组，矩阵（稀疏矩阵，特殊矩阵）\n\n#### 稀疏矩阵存储\n<!-- more -->\n```cpp\ntypedef struct {\n    int  i , j ;\n    int e;\n} Triple;\n\ntypedef struct{\n    Triple data[MAXSIZE+1];\n    int mu , nu , tu ;   //矩阵行数,列数,非零元个数\n} TSMatrix;\n\nvoid ReserveMatrix1(TSMatrix m,TSMatrix &n){        //一般转置，O(nu*tu)\n    int q;\n    n.tu = m.tu;\n    n.mu = m.nu;\n    n.nu = m.mu;\n    if (m.tu){\n        q = 1;\n        for (int col = 0; col < m.nu; ++col) {        //列遍历\n            for (int j = 0; j < m.tu; ++j) {\n                if (m.data[j].j == col){\n                    n.data[q].i = m.data[j].j;\n                    n.data[q].j = m.data[j].i;\n                    n.data[q].e = m.data[j].e;\n                    q++;\n                }\n            }\n        }\n    }\n}\n\nvoid  FastTransSMatrix(TSMatrix  M , TSMatrix &T)       //快速转置，O(nu+tu)\n{\n    int col,t,p,q,cpot[100],num[100];\n    T.mu = M.nu;  T.nu = M.mu ;  T.tu = M.tu;\n    if(T.tu) {//num[col]表示矩阵M中第col列中非0元的个数\n        for(col=0 ; col<M.nu ; col++)\n            num[col]=0;\n        for(t=0 ; t<M.tu ; t++)\n            ++num[ M.data[t].j ];\n        cpot[0]=0;\n        for(col=1 ; col<M.nu ; col++)\n            cpot[col] = cpot[col-1] + num[col-1];\n        for(p=0;p<M.tu;p++) {\n            col= M.data[p].j ;  q=cpot[ col ] ;\n            T.data[q].i=M.data[p].j ;\n            T.data[q].j=M.data[p].i ;\n            T.data[q].e=M.data[p].e ;\n            ++cpot[col] ; //cpot[col]表示M中col列下一个非0元在T.data中的位置\n        }//endfor\n    }//endif\n}\n\n\nvoid PrintMatrix(TSMatrix m){\n    int pp=0;\n    for (int i = 0; i < m.mu; ++i) {\n        for (int j = 0; j < m.nu; ++j) {\n            if ((m.data[pp].i == i)&&(m.data[pp].j == j)){\n                cout<<m.data[pp].e<<\" \";\n                pp++;\n            } else{\n                cout<<0<<\" \";\n            }\n        }\n        cout<<endl;\n    }\n}\n```\n\n```text\n    稀疏矩阵在转置时不能直接交换i，j的值，因为要考虑转置之后的顺序\n```\n\n*****","source":"_posts/数组与矩阵.md","raw":"---\ntitle: 数组与矩阵\ndate: 2020-10-13 23:23:11\ntags: \n- 数据结构\n- C++\n---\n\n*****\n\n### 10.13数组，矩阵（稀疏矩阵，特殊矩阵）\n\n#### 稀疏矩阵存储\n<!-- more -->\n```cpp\ntypedef struct {\n    int  i , j ;\n    int e;\n} Triple;\n\ntypedef struct{\n    Triple data[MAXSIZE+1];\n    int mu , nu , tu ;   //矩阵行数,列数,非零元个数\n} TSMatrix;\n\nvoid ReserveMatrix1(TSMatrix m,TSMatrix &n){        //一般转置，O(nu*tu)\n    int q;\n    n.tu = m.tu;\n    n.mu = m.nu;\n    n.nu = m.mu;\n    if (m.tu){\n        q = 1;\n        for (int col = 0; col < m.nu; ++col) {        //列遍历\n            for (int j = 0; j < m.tu; ++j) {\n                if (m.data[j].j == col){\n                    n.data[q].i = m.data[j].j;\n                    n.data[q].j = m.data[j].i;\n                    n.data[q].e = m.data[j].e;\n                    q++;\n                }\n            }\n        }\n    }\n}\n\nvoid  FastTransSMatrix(TSMatrix  M , TSMatrix &T)       //快速转置，O(nu+tu)\n{\n    int col,t,p,q,cpot[100],num[100];\n    T.mu = M.nu;  T.nu = M.mu ;  T.tu = M.tu;\n    if(T.tu) {//num[col]表示矩阵M中第col列中非0元的个数\n        for(col=0 ; col<M.nu ; col++)\n            num[col]=0;\n        for(t=0 ; t<M.tu ; t++)\n            ++num[ M.data[t].j ];\n        cpot[0]=0;\n        for(col=1 ; col<M.nu ; col++)\n            cpot[col] = cpot[col-1] + num[col-1];\n        for(p=0;p<M.tu;p++) {\n            col= M.data[p].j ;  q=cpot[ col ] ;\n            T.data[q].i=M.data[p].j ;\n            T.data[q].j=M.data[p].i ;\n            T.data[q].e=M.data[p].e ;\n            ++cpot[col] ; //cpot[col]表示M中col列下一个非0元在T.data中的位置\n        }//endfor\n    }//endif\n}\n\n\nvoid PrintMatrix(TSMatrix m){\n    int pp=0;\n    for (int i = 0; i < m.mu; ++i) {\n        for (int j = 0; j < m.nu; ++j) {\n            if ((m.data[pp].i == i)&&(m.data[pp].j == j)){\n                cout<<m.data[pp].e<<\" \";\n                pp++;\n            } else{\n                cout<<0<<\" \";\n            }\n        }\n        cout<<endl;\n    }\n}\n```\n\n```text\n    稀疏矩阵在转置时不能直接交换i，j的值，因为要考虑转置之后的顺序\n```\n\n*****","slug":"数组与矩阵","published":1,"updated":"2021-04-13T12:53:44.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckojvxern001iboe277qfguak","content":"<hr>\n<h3 id=\"10-13数组，矩阵（稀疏矩阵，特殊矩阵）\"><a href=\"#10-13数组，矩阵（稀疏矩阵，特殊矩阵）\" class=\"headerlink\" title=\"10.13数组，矩阵（稀疏矩阵，特殊矩阵）\"></a>10.13数组，矩阵（稀疏矩阵，特殊矩阵）</h3><h4 id=\"稀疏矩阵存储\"><a href=\"#稀疏矩阵存储\" class=\"headerlink\" title=\"稀疏矩阵存储\"></a>稀疏矩阵存储</h4><span id=\"more\"></span>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> &#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span>  i , j ;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> e;</span><br><span class=\"line\">&#125; Triple;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span>&#123;</span></span><br><span class=\"line\">    Triple data[MAXSIZE+<span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> mu , nu , tu ;   <span class=\"comment\">//矩阵行数,列数,非零元个数</span></span><br><span class=\"line\">&#125; TSMatrix;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ReserveMatrix1</span><span class=\"params\">(TSMatrix m,TSMatrix &amp;n)</span></span>&#123;        <span class=\"comment\">//一般转置，O(nu*tu)</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> q;</span><br><span class=\"line\">    n.tu = m.tu;</span><br><span class=\"line\">    n.mu = m.nu;</span><br><span class=\"line\">    n.nu = m.mu;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (m.tu)&#123;</span><br><span class=\"line\">        q = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> col = <span class=\"number\">0</span>; col &lt; m.nu; ++col) &#123;        <span class=\"comment\">//列遍历</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m.tu; ++j) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (m.data[j].j == col)&#123;</span><br><span class=\"line\">                    n.data[q].i = m.data[j].j;</span><br><span class=\"line\">                    n.data[q].j = m.data[j].i;</span><br><span class=\"line\">                    n.data[q].e = m.data[j].e;</span><br><span class=\"line\">                    q++;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span>  <span class=\"title\">FastTransSMatrix</span><span class=\"params\">(TSMatrix  M , TSMatrix &amp;T)</span>       <span class=\"comment\">//快速转置，O(nu+tu)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> col,t,p,q,cpot[<span class=\"number\">100</span>],num[<span class=\"number\">100</span>];</span><br><span class=\"line\">    T.mu = M.nu;  T.nu = M.mu ;  T.tu = M.tu;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(T.tu) &#123;<span class=\"comment\">//num[col]表示矩阵M中第col列中非0元的个数</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(col=<span class=\"number\">0</span> ; col&lt;M.nu ; col++)</span><br><span class=\"line\">            num[col]=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(t=<span class=\"number\">0</span> ; t&lt;M.tu ; t++)</span><br><span class=\"line\">            ++num[ M.data[t].j ];</span><br><span class=\"line\">        cpot[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(col=<span class=\"number\">1</span> ; col&lt;M.nu ; col++)</span><br><span class=\"line\">            cpot[col] = cpot[col<span class=\"number\">-1</span>] + num[col<span class=\"number\">-1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(p=<span class=\"number\">0</span>;p&lt;M.tu;p++) &#123;</span><br><span class=\"line\">            col= M.data[p].j ;  q=cpot[ col ] ;</span><br><span class=\"line\">            T.data[q].i=M.data[p].j ;</span><br><span class=\"line\">            T.data[q].j=M.data[p].i ;</span><br><span class=\"line\">            T.data[q].e=M.data[p].e ;</span><br><span class=\"line\">            ++cpot[col] ; <span class=\"comment\">//cpot[col]表示M中col列下一个非0元在T.data中的位置</span></span><br><span class=\"line\">        &#125;<span class=\"comment\">//endfor</span></span><br><span class=\"line\">    &#125;<span class=\"comment\">//endif</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">PrintMatrix</span><span class=\"params\">(TSMatrix m)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> pp=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; m.mu; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m.nu; ++j) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ((m.data[pp].i == i)&amp;&amp;(m.data[pp].j == j))&#123;</span><br><span class=\"line\">                <span class=\"built_in\">cout</span>&lt;&lt;m.data[pp].e&lt;&lt;<span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">                pp++;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"number\">0</span>&lt;&lt;<span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">稀疏矩阵在转置时不能直接交换i，j的值，因为要考虑转置之后的顺序</span><br></pre></td></tr></table></figure>\n\n<hr>\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","site":{"data":{}},"excerpt":"10.13数组，矩阵（稀疏矩阵，特殊矩阵）\n稀疏矩阵存储\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n\n\ntypedef struct {\n    int  i , j ;\n    int e;\n} Triple;\n\ntypedef struct{\n    T","more":"<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> &#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span>  i , j ;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> e;</span><br><span class=\"line\">&#125; Triple;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span>&#123;</span></span><br><span class=\"line\">    Triple data[MAXSIZE+<span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> mu , nu , tu ;   <span class=\"comment\">//矩阵行数,列数,非零元个数</span></span><br><span class=\"line\">&#125; TSMatrix;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ReserveMatrix1</span><span class=\"params\">(TSMatrix m,TSMatrix &amp;n)</span></span>&#123;        <span class=\"comment\">//一般转置，O(nu*tu)</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> q;</span><br><span class=\"line\">    n.tu = m.tu;</span><br><span class=\"line\">    n.mu = m.nu;</span><br><span class=\"line\">    n.nu = m.mu;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (m.tu)&#123;</span><br><span class=\"line\">        q = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> col = <span class=\"number\">0</span>; col &lt; m.nu; ++col) &#123;        <span class=\"comment\">//列遍历</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m.tu; ++j) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (m.data[j].j == col)&#123;</span><br><span class=\"line\">                    n.data[q].i = m.data[j].j;</span><br><span class=\"line\">                    n.data[q].j = m.data[j].i;</span><br><span class=\"line\">                    n.data[q].e = m.data[j].e;</span><br><span class=\"line\">                    q++;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span>  <span class=\"title\">FastTransSMatrix</span><span class=\"params\">(TSMatrix  M , TSMatrix &amp;T)</span>       <span class=\"comment\">//快速转置，O(nu+tu)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> col,t,p,q,cpot[<span class=\"number\">100</span>],num[<span class=\"number\">100</span>];</span><br><span class=\"line\">    T.mu = M.nu;  T.nu = M.mu ;  T.tu = M.tu;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(T.tu) &#123;<span class=\"comment\">//num[col]表示矩阵M中第col列中非0元的个数</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(col=<span class=\"number\">0</span> ; col&lt;M.nu ; col++)</span><br><span class=\"line\">            num[col]=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(t=<span class=\"number\">0</span> ; t&lt;M.tu ; t++)</span><br><span class=\"line\">            ++num[ M.data[t].j ];</span><br><span class=\"line\">        cpot[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(col=<span class=\"number\">1</span> ; col&lt;M.nu ; col++)</span><br><span class=\"line\">            cpot[col] = cpot[col<span class=\"number\">-1</span>] + num[col<span class=\"number\">-1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(p=<span class=\"number\">0</span>;p&lt;M.tu;p++) &#123;</span><br><span class=\"line\">            col= M.data[p].j ;  q=cpot[ col ] ;</span><br><span class=\"line\">            T.data[q].i=M.data[p].j ;</span><br><span class=\"line\">            T.data[q].j=M.data[p].i ;</span><br><span class=\"line\">            T.data[q].e=M.data[p].e ;</span><br><span class=\"line\">            ++cpot[col] ; <span class=\"comment\">//cpot[col]表示M中col列下一个非0元在T.data中的位置</span></span><br><span class=\"line\">        &#125;<span class=\"comment\">//endfor</span></span><br><span class=\"line\">    &#125;<span class=\"comment\">//endif</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">PrintMatrix</span><span class=\"params\">(TSMatrix m)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> pp=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; m.mu; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m.nu; ++j) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ((m.data[pp].i == i)&amp;&amp;(m.data[pp].j == j))&#123;</span><br><span class=\"line\">                <span class=\"built_in\">cout</span>&lt;&lt;m.data[pp].e&lt;&lt;<span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">                pp++;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"number\">0</span>&lt;&lt;<span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">稀疏矩阵在转置时不能直接交换i，j的值，因为要考虑转置之后的顺序</span><br></pre></td></tr></table></figure>\n\n<hr>"},{"title":"栈与队列","date":"2020-10-06T05:20:33.000Z","_content":"### 10.6栈与队列\n\n#### 栈\n\n<center><img src=\"https://s3.ax1x.com/2021/03/13/6waiCT.jpg\" width=\"50%\"></center>\n\n\n> 栈不存在的条件：base == NULL;\n>栈为空的条件： base == top;\n>栈满的条件：top-base == stacksize;\n\n1. 初始化栈\n<!-- more -->\n   <center><img src=\"https://s3.ax1x.com/2021/03/13/6waVKJ.md.png\" width=\"50%\" ></center>\n\n\n2. 获取栈顶元素 top()\n\n   <center><img src=\"https://s3.ax1x.com/2021/03/13/6waC5V.jpg\" width=\"50%\" ></center>\n\n\n3. 入栈 push()\n\n   <center><img src=\"https://s3.ax1x.com/2021/03/13/6wak2F.jpg\" width=\"50%\" ></center>\n\n\n4. 出栈 pop()\n\n   <center><img src=\"https://s3.ax1x.com/2021/03/13/6waF8U.md.jpg\" width=\"50%\" ></center>\n\n\n#### 练习一：十进制n转为r进制数\n\n```cpp\n    int n,d,r;\n    std::stack<int>(s);\n    std::cin>>n>>r;\n    while (n!=0){\n        d = n%r;\n        n = n/r;\n        s.push(d);\n    }\n    while (!s.empty()){\n        std::cout<<s.top();\n        s.pop();\n    }\n```\n\n#### 练习二：括号匹配\n\n```cpp\n    char a[20];\n    std::stack<char>(s);\n    cin>>a;\n    for (int i = 0; a[i] != '\\0'; ++i) {\n        if (s.empty()){\n            s.push(a[i]);\n        } else if (((s.top() == '(')&&(a[i] == ')'))||((s.top() == '[')&&(a[i] == ']'))||((s.top() == '{')&&(a[i] == '}'))){\n            s.pop();\n        } else if (a[i] == '('||a[i] == '['||a[i] == '{'){\n            s.push(a[i]);\n        }\n    }\n    if (s.empty()){\n        cout<<\"YES\";\n    } else{\n        cout<<\"NO\";\n    }\n```\n\n*****\n\n### 10.9 队列\n\n#### 队列\n\n> 空队列：front == rear\n> 满队列：(rear + 1) % max == front\n\n1. 循环队列的初始化\n\n    <center><img src=\"https://s3.ax1x.com/2021/03/13/6waZr9.md.png\" width=\"50%\">\n\n\n2. 入队\n\n    <center><img src=\"https://s3.ax1x.com/2021/03/13/6wauUx.png\" width=\"50%\">\n\n\n3. 出队\n\n    <center><img src=\"https://s3.ax1x.com/2021/03/13/6waK56.md.png\" width=\"50%\">\n\n\n*****\n\n### 10.9 上机\n\n#### 栈与队列的基本操作（内含进制转换与括号匹配[STL模版]）\n\n\n```cpp\n#include <iostream>\n#include <stack>\n//#include <queue>\n#include <iomanip>\n\n#pragma GCC optimize(2)\n\nusing namespace std;\n\ntypedef struct node {\n    int data;\n    node *next;\n}Qnode,Snode;\n\ntypedef struct{\n    Qnode *rear,*front;\n}Qlink;\n\ntypedef struct{\n    Snode *base,*top;\n}Slink;\n\nvoid InitStack(Slink &s){\n    s.top = s.base = NULL;\n}\n\nvoid push(Slink &s,int n){\n    Snode *p;\n    p = new (Snode);\n    p->data = n;\n    p->next = NULL;\n    if (s.base == NULL){\n        s.top = s.base = p;\n    } else{\n        s.top->next = p;\n        s.top = p;\n    }\n}\n\nvoid pop(Slink &s){\n    Snode *p;\n    p = s.base;\n    if ((s.base == s.top)&&(s.base != NULL)){\n        free(s.base);\n        s.base = s.top = NULL;\n        return;\n    }\n    while (p->next != s.top) p = p->next;\n    s.top = p;\n    free(p->next);\n    p->next =NULL;\n}\n\nint top(Slink s){\n    return s.top->data;\n}\n\nint empty(Slink s){\n    if (s.base == NULL)\n        return 1;\n    else\n        return 0;\n}\n\nvoid InitQue(Qlink &q){\n    Qnode *p = new (node);\n    p->next = NULL;\n    q.rear = q.front = p;\n}\n\nvoid InsertQue(Qlink &q,int n){\n    Qnode *p = new (node);\n    p->data = n;\n    p->next = NULL;\n    q.rear->next = p;\n    q.rear = p;\n}\n\nvoid DelQue(Qlink &q,int &e){\n    if (q.front == q.rear){\n        return;\n    }\n    Qnode *p;\n    p = q.front;\n    e = q.front->next->data;\n    q.front = q.front->next;\n    free(p);\n}\n\nvoid PrintQue(Qlink q){\n    Qnode *p;\n    p = q.front->next;\n    while (p != NULL){\n        cout<<p->data<<\" \";\n        p = p->next;\n    }\n}\n\nint main() {\n    int temp;\n    Qlink q;\n    InitQue(q);\n    cin>>temp;\n    for (int i = 0; i < temp; ++i) {\n        InsertQue(q,rand()%100);\n    }\n    cout<<\"输出队列：\"<<endl;\n    PrintQue(q);\n    DelQue(q,temp);\n    cout<<endl;\n    cout<<\"出队元素：\";\n    cout<<temp<<endl;\n    cout<<\"出队后队列：\"<<endl;\n    PrintQue(q);\n    cout<<endl;\n    //TODO:\n    Slink s;\n    InitStack(s);\n    cin>>temp;\n    for (int i = 0; i < temp; ++i) {\n        push(s,rand()%100);\n    }\n    cout<<\"压栈完成：\"<<endl;\n    for (int i = 0; i < temp; ++i) {\n        int t = top(s);\n        cout<<t<<\" \";\n        pop(s);\n    }\n    cout<<endl;\n    int n,r,d;\n    cout<<\"进制转换,输入十进制数n与目标进制r:\"<<endl;\n    InitStack(s);\n    cin>>n>>r;\n    while (n!=0){\n        d = n%r;\n        n = n/r;\n        push(s,d);\n    }\n    cout<<\"转换完成：\";\n    while (!empty(s)){\n        std::cout<<top(s);\n        pop(s);\n    }\n    cout<<\"(\"<<r<<\")\"<<endl;\n    cout<<\"括号匹配，输入一行括号：\"<<endl;\n    char a[100];\n    stack<char>(S);\n    cin>>a;\n    for (int i = 0; a[i] != '\\0'; ++i) {\n        if (S.empty()){\n            S.push(a[i]);\n        } else if (((S.top() == '(')&&(a[i] == ')'))||((S.top() == '[')&&(a[i] == ']'))||((S.top() == '{')&&(a[i] == '}'))){\n            S.pop();\n        } else if (a[i] == '('||a[i] == '['||a[i] == '{'){\n            S.push(a[i]);\n        }\n    }\n    if (S.empty()){\n        cout<<\"YES\";\n    } else{\n        cout<<\"NO\";\n    }\n}\n\n\n/*\n * //TODO:进制转换\n *     int n,d,r;\n    stack<int>(s);\n    cin>>n>>r;\n    while (n!=0){\n        d = n%r;\n        n = n/r;\n        s.push(d);\n    }\n    while (!s.empty()){\n        std::cout<<s.top();\n        s.pop();\n    }\n*/\n\n/*\n * //TODO:括号匹配\n * char a[20];\n    stack<char>(s);\n    cin>>a;\n    for (int i = 0; a[i] != '\\0'; ++i) {\n        if (s.empty()){\n            s.push(a[i]);\n        } else if (((s.top() == '(')&&(a[i] == ')'))||((s.top() == '[')&&(a[i] == ']'))||((s.top() == '{')&&(a[i] == '}'))){\n            s.pop();\n        } else if (a[i] == '('||a[i] == '['||a[i] == '{'){\n            s.push(a[i]);\n        }\n    }\n    if (s.empty()){\n        cout<<\"YES\";\n    } else{\n        cout<<\"NO\";\n    }\n*/\n```\n\n#### 栈实现计算表达式的值\n\n\n``使用STL模版```\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cctype>\n#include<stack>\n\n#pragma GCC optimize(2)\n\nusing namespace std;\n\n//stack<char> OPTR;\n//stack<double> OPND;\n\ntypedef struct node {\n    char data;\n    node *next;\n}Qnode,Snode;\n\ntypedef struct Cnode {\n    int data;\n    Cnode *next;\n}SnodeC;\n\ntypedef struct{\n    Qnode *rear,*front;\n}Qlink;\n\ntypedef struct{\n    SnodeC *base,*top;\n}SlinkC;\n\ntypedef struct {\n    Snode *base, *top;\n}Slink;\n\ntemplate<class T>\nvoid InitStack(T &s){\n    s.top = s.base = NULL;\n}\n\n//void InitStack(Slink &s){\n//    s.top = s.base = NULL;\n//}\n//\n//void InitStack(SlinkC &s){\n//    s.top = s.base = NULL;\n//}\n\nvoid push(Slink &s,int n){\n    Snode *p;\n    p = new (Snode);\n    p->data = n;\n    p->next = NULL;\n    if (s.base == NULL){\n        s.top = s.base = p;\n    } else{\n        s.top->next = p;\n        s.top = p;\n    }\n}\n\nvoid push(SlinkC &s,char n){\n    SnodeC *p;\n    p = new (SnodeC);\n    p->data = n;\n    p->next = NULL;\n    if (s.base == NULL){\n        s.top = s.base = p;\n    } else{\n        s.top->next = p;\n        s.top = p;\n    }\n}\n\nvoid pop(Slink &s){\n    Snode *p;\n    p = s.base;\n    if ((s.base == s.top)&&(s.base != NULL)){\n        free(s.base);\n        s.base = s.top = NULL;\n        return;\n    }\n    while (p->next != s.top) p = p->next;\n    s.top = p;\n    free(p->next);\n    p->next =NULL;\n}\n\nvoid pop(SlinkC &s){\n    SnodeC *p;\n    p = s.base;\n    if ((s.base == s.top)&&(s.base != NULL)){\n        free(s.base);\n        s.base = s.top = NULL;\n        return;\n    }\n    while (p->next != s.top) p = p->next;\n    s.top = p;\n    free(p->next);\n    p->next =NULL;\n}\n\nint top(Slink s){\n    return s.top->data;\n}\n\nchar top(SlinkC s){\n    return s.top->data;\n}\n\ntemplate<class T>\nint empty(T s){\n    if (s.base == NULL)\n        return 1;\n    else\n        return 0;\n}\n\nint getIndex(char theta)        //中文\"（\"与\"）\"不可用\n{\n    int index = 0;\n    switch (theta)\n    {\n        case '+':\n            index = 0;\n            break;\n        case '-':\n            index = 1;\n            break;\n        case '*':\n            index = 2;\n            break;\n        case '/':\n            index = 3;\n            break;\n        case '(':\n            index = 4;\n            break;\n        case ')':\n            index = 5;\n            break;\n        case '#':\n            index = 6;\n        default:break;\n    }\n    return index;\n}\n\nchar Precede(char theta1, char theta2)\n{\n    const char priority[][7] =          //优先度\n            {\n                    { '>','>','<','<','<','>','>' },\n                    { '>','>','<','<','<','>','>' },\n                    { '>','>','>','>','<','>','>' },\n                    { '>','>','>','>','<','>','>' },\n                    { '<','<','<','<','<','=','0' },\n                    { '>','>','>','>','0','>','>' },\n                    { '<','<','<','<','<','0','=' },\n            };\n\n    int index1 = getIndex(theta1);\n    int index2 = getIndex(theta2);\n    return priority[index1][index2];\n}\n\ndouble calculate(double b, char theta, double a)\n{\n    switch (theta)\n    {\n        case '+':\n            return b + a;\n        case '-':\n            return b - a;\n        case '*':\n            return b * a;\n        case '/':\n            return b / a;\n        default:\n            break;\n    }\n}\n\ndouble getAnswer(SlinkC &OPTR,Slink &OPND)\n{\n    push(OPTR,'#');\n    int counter = 0;            //用来记录数字的位数\n    char c = getchar();\n    while (c != '#' || top(OPTR) != '#')\n    {\n        if (isdigit(c))     //判断是否是数字\n        {\n            if (counter == 1)\n            {\n                double t = top(OPND);      //保留栈顶\n                pop(OPND);\n                push(OPND,t * 10 + (c - '0'));\n                counter = 1;\n            }\n            else\n            {\n                push(OPND,c - '0');\n                counter++;          //第二位也是数字，则counter变为1，弹出原有数字并压入新的数字\n            }\n            c = getchar();\n        }\n        else\n        {\n            counter = 0;        //数字结束\n            switch (Precede(top(OPTR), c))\n            {\n                case '<':\n                    push(OPTR,c);\n                    c = getchar();\n                    break;\n                case '=':\n                    pop(OPTR);\n                    c = getchar();\n                    break;\n                case '>':\n                    char theta = top(OPTR);\n                    pop(OPTR);\n                    double a = top(OPND);\n                    pop(OPND);\n                    double b = top(OPND);\n                    pop(OPND);\n                    push(OPND,calculate(b, theta, a));\n            }\n        }\n    }\n    return top(OPND);\n}\n\ntemplate<class T>\nvoid clearstack(T s)      //清空栈\n{\n    while (!empty(s))\n        pop(s);\n}\n\n\nint main()\n{\n    Slink OPND;\n    SlinkC OPTR;\n    InitStack(OPND);\n    InitStack(OPTR);\n    int t;\n    cin >> t;\n    getchar();\n    while (t--)\n    {\n        clearstack(OPND);\n        clearstack(OPTR);\n        double ans = getAnswer(OPTR,OPND);\n        cout << ans << endl<< endl;\n        getchar();\n    }\n    return 0;\n}\n```\n\n```未使用STL，正常做法```\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cctype>\n#include<stack>\n\n#pragma GCC optimize(2)\n\nusing namespace std;\n\nstack<char> OPTR;\nstack<double> OPND;\n\nint getIndex(char theta)        //将运算符转为下标\n{\n    int index = 0;\n    switch (theta)\n    {\n        case '+':\n            index = 0;\n            break;\n        case '-':\n            index = 1;\n            break;\n        case '*':\n            index = 2;\n            break;\n        case '/':\n            index = 3;\n            break;\n        case '(':\n            index = 4;\n            break;\n        case ')':\n            index = 5;\n            break;\n        case '#':\n            index = 6;\n        default:break;\n    }\n    return index;\n}\n\nchar Precede(char theta1, char theta2)          //计算优先度\n{\n    const char priority[][7] =\n            {\n                    { '>','>','<','<','<','>','>' },\n                    { '>','>','<','<','<','>','>' },\n                    { '>','>','>','>','<','>','>' },\n                    { '>','>','>','>','<','>','>' },\n                    { '<','<','<','<','<','=','0' },\n                    { '>','>','>','>','0','>','>' },\n                    { '<','<','<','<','<','0','=' },\n            };\n\n    int index1 = getIndex(theta1);\n    int index2 = getIndex(theta2);\n    return priority[index1][index2];\n}\n\ndouble calculate(double b, char theta, double a)        //根据theta计算结果\n{\n    switch (theta)\n    {\n        case '+':\n            return b + a;\n        case '-':\n            return b - a;\n        case '*':\n            return b * a;\n        case '/':\n            return b / a;\n        default:\n            break;\n    }\n}\n\ndouble getAnswer()\n{\n    OPTR.push('#');\n    int counter = 0;\n    char c = getchar();\n    while (c != '#' || OPTR.top() != '#')\n    {\n        if (isdigit(c))         //如果是数字则进入OPND栈中\n        {\n            if (counter == 1)       //可能为两位数或者是更多位数，所以要先判断前一个数是否为数字\n            {\n                double t = OPND.top();\n                OPND.pop();\n                OPND.push(t * 10 + (c - '0'));\n                counter = 1;\n            }\n            else\n            {\n                OPND.push(c - '0');\n                counter++;\n            }\n            c = getchar();\n        }\n        else        //如果是运算符，则判断\n        {\n            counter = 0;\n            switch (Precede(OPTR.top(), c))\n            {\n                case '<':\n                    OPTR.push(c);\n                    c = getchar();\n                    break;\n                case '=':\n                    OPTR.pop();\n                    c = getchar();\n                    break;\n                case '>':\n                    char theta = OPTR.top();\n                    OPTR.pop();\n                    double a = OPND.top();          //计算a与b运算的值，并将运算得到的结果压入栈中\n                    OPND.pop();\n                    double b = OPND.top();\n                    OPND.pop();                     //弹出a，b，并将运算结果存入\n                    OPND.push(calculate(b,theta,a));\n            }\n        }\n    }\n    return OPND.top();\n}\n\nvoid clearstack()       //清空栈\n{\n    while (!OPTR.empty())\n        OPTR.pop();\n    while (!OPND.empty())\n        OPND.pop();\n}\n\nint main()\n{\n    int t;\n    cin >> t;\n    getchar();\n    while (t--)\n    {\n        clearstack();\n        double ans = getAnswer();\n        cout << ans << endl<< endl;\n        getchar();\n    }\n    return 0;\n}\n```\n\n<center><a href=\"https://www.jianshu.com/p/649c12a80fe8\">逆波兰表达式、波兰表达式</a></center>","source":"_posts/栈与队列.md","raw":"---\ntitle: 栈与队列\ndate: 2020-10-06 13:20:33\ntags: \n- 数据结构\n- C++\n---\n### 10.6栈与队列\n\n#### 栈\n\n<center><img src=\"https://s3.ax1x.com/2021/03/13/6waiCT.jpg\" width=\"50%\"></center>\n\n\n> 栈不存在的条件：base == NULL;\n>栈为空的条件： base == top;\n>栈满的条件：top-base == stacksize;\n\n1. 初始化栈\n<!-- more -->\n   <center><img src=\"https://s3.ax1x.com/2021/03/13/6waVKJ.md.png\" width=\"50%\" ></center>\n\n\n2. 获取栈顶元素 top()\n\n   <center><img src=\"https://s3.ax1x.com/2021/03/13/6waC5V.jpg\" width=\"50%\" ></center>\n\n\n3. 入栈 push()\n\n   <center><img src=\"https://s3.ax1x.com/2021/03/13/6wak2F.jpg\" width=\"50%\" ></center>\n\n\n4. 出栈 pop()\n\n   <center><img src=\"https://s3.ax1x.com/2021/03/13/6waF8U.md.jpg\" width=\"50%\" ></center>\n\n\n#### 练习一：十进制n转为r进制数\n\n```cpp\n    int n,d,r;\n    std::stack<int>(s);\n    std::cin>>n>>r;\n    while (n!=0){\n        d = n%r;\n        n = n/r;\n        s.push(d);\n    }\n    while (!s.empty()){\n        std::cout<<s.top();\n        s.pop();\n    }\n```\n\n#### 练习二：括号匹配\n\n```cpp\n    char a[20];\n    std::stack<char>(s);\n    cin>>a;\n    for (int i = 0; a[i] != '\\0'; ++i) {\n        if (s.empty()){\n            s.push(a[i]);\n        } else if (((s.top() == '(')&&(a[i] == ')'))||((s.top() == '[')&&(a[i] == ']'))||((s.top() == '{')&&(a[i] == '}'))){\n            s.pop();\n        } else if (a[i] == '('||a[i] == '['||a[i] == '{'){\n            s.push(a[i]);\n        }\n    }\n    if (s.empty()){\n        cout<<\"YES\";\n    } else{\n        cout<<\"NO\";\n    }\n```\n\n*****\n\n### 10.9 队列\n\n#### 队列\n\n> 空队列：front == rear\n> 满队列：(rear + 1) % max == front\n\n1. 循环队列的初始化\n\n    <center><img src=\"https://s3.ax1x.com/2021/03/13/6waZr9.md.png\" width=\"50%\">\n\n\n2. 入队\n\n    <center><img src=\"https://s3.ax1x.com/2021/03/13/6wauUx.png\" width=\"50%\">\n\n\n3. 出队\n\n    <center><img src=\"https://s3.ax1x.com/2021/03/13/6waK56.md.png\" width=\"50%\">\n\n\n*****\n\n### 10.9 上机\n\n#### 栈与队列的基本操作（内含进制转换与括号匹配[STL模版]）\n\n\n```cpp\n#include <iostream>\n#include <stack>\n//#include <queue>\n#include <iomanip>\n\n#pragma GCC optimize(2)\n\nusing namespace std;\n\ntypedef struct node {\n    int data;\n    node *next;\n}Qnode,Snode;\n\ntypedef struct{\n    Qnode *rear,*front;\n}Qlink;\n\ntypedef struct{\n    Snode *base,*top;\n}Slink;\n\nvoid InitStack(Slink &s){\n    s.top = s.base = NULL;\n}\n\nvoid push(Slink &s,int n){\n    Snode *p;\n    p = new (Snode);\n    p->data = n;\n    p->next = NULL;\n    if (s.base == NULL){\n        s.top = s.base = p;\n    } else{\n        s.top->next = p;\n        s.top = p;\n    }\n}\n\nvoid pop(Slink &s){\n    Snode *p;\n    p = s.base;\n    if ((s.base == s.top)&&(s.base != NULL)){\n        free(s.base);\n        s.base = s.top = NULL;\n        return;\n    }\n    while (p->next != s.top) p = p->next;\n    s.top = p;\n    free(p->next);\n    p->next =NULL;\n}\n\nint top(Slink s){\n    return s.top->data;\n}\n\nint empty(Slink s){\n    if (s.base == NULL)\n        return 1;\n    else\n        return 0;\n}\n\nvoid InitQue(Qlink &q){\n    Qnode *p = new (node);\n    p->next = NULL;\n    q.rear = q.front = p;\n}\n\nvoid InsertQue(Qlink &q,int n){\n    Qnode *p = new (node);\n    p->data = n;\n    p->next = NULL;\n    q.rear->next = p;\n    q.rear = p;\n}\n\nvoid DelQue(Qlink &q,int &e){\n    if (q.front == q.rear){\n        return;\n    }\n    Qnode *p;\n    p = q.front;\n    e = q.front->next->data;\n    q.front = q.front->next;\n    free(p);\n}\n\nvoid PrintQue(Qlink q){\n    Qnode *p;\n    p = q.front->next;\n    while (p != NULL){\n        cout<<p->data<<\" \";\n        p = p->next;\n    }\n}\n\nint main() {\n    int temp;\n    Qlink q;\n    InitQue(q);\n    cin>>temp;\n    for (int i = 0; i < temp; ++i) {\n        InsertQue(q,rand()%100);\n    }\n    cout<<\"输出队列：\"<<endl;\n    PrintQue(q);\n    DelQue(q,temp);\n    cout<<endl;\n    cout<<\"出队元素：\";\n    cout<<temp<<endl;\n    cout<<\"出队后队列：\"<<endl;\n    PrintQue(q);\n    cout<<endl;\n    //TODO:\n    Slink s;\n    InitStack(s);\n    cin>>temp;\n    for (int i = 0; i < temp; ++i) {\n        push(s,rand()%100);\n    }\n    cout<<\"压栈完成：\"<<endl;\n    for (int i = 0; i < temp; ++i) {\n        int t = top(s);\n        cout<<t<<\" \";\n        pop(s);\n    }\n    cout<<endl;\n    int n,r,d;\n    cout<<\"进制转换,输入十进制数n与目标进制r:\"<<endl;\n    InitStack(s);\n    cin>>n>>r;\n    while (n!=0){\n        d = n%r;\n        n = n/r;\n        push(s,d);\n    }\n    cout<<\"转换完成：\";\n    while (!empty(s)){\n        std::cout<<top(s);\n        pop(s);\n    }\n    cout<<\"(\"<<r<<\")\"<<endl;\n    cout<<\"括号匹配，输入一行括号：\"<<endl;\n    char a[100];\n    stack<char>(S);\n    cin>>a;\n    for (int i = 0; a[i] != '\\0'; ++i) {\n        if (S.empty()){\n            S.push(a[i]);\n        } else if (((S.top() == '(')&&(a[i] == ')'))||((S.top() == '[')&&(a[i] == ']'))||((S.top() == '{')&&(a[i] == '}'))){\n            S.pop();\n        } else if (a[i] == '('||a[i] == '['||a[i] == '{'){\n            S.push(a[i]);\n        }\n    }\n    if (S.empty()){\n        cout<<\"YES\";\n    } else{\n        cout<<\"NO\";\n    }\n}\n\n\n/*\n * //TODO:进制转换\n *     int n,d,r;\n    stack<int>(s);\n    cin>>n>>r;\n    while (n!=0){\n        d = n%r;\n        n = n/r;\n        s.push(d);\n    }\n    while (!s.empty()){\n        std::cout<<s.top();\n        s.pop();\n    }\n*/\n\n/*\n * //TODO:括号匹配\n * char a[20];\n    stack<char>(s);\n    cin>>a;\n    for (int i = 0; a[i] != '\\0'; ++i) {\n        if (s.empty()){\n            s.push(a[i]);\n        } else if (((s.top() == '(')&&(a[i] == ')'))||((s.top() == '[')&&(a[i] == ']'))||((s.top() == '{')&&(a[i] == '}'))){\n            s.pop();\n        } else if (a[i] == '('||a[i] == '['||a[i] == '{'){\n            s.push(a[i]);\n        }\n    }\n    if (s.empty()){\n        cout<<\"YES\";\n    } else{\n        cout<<\"NO\";\n    }\n*/\n```\n\n#### 栈实现计算表达式的值\n\n\n``使用STL模版```\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cctype>\n#include<stack>\n\n#pragma GCC optimize(2)\n\nusing namespace std;\n\n//stack<char> OPTR;\n//stack<double> OPND;\n\ntypedef struct node {\n    char data;\n    node *next;\n}Qnode,Snode;\n\ntypedef struct Cnode {\n    int data;\n    Cnode *next;\n}SnodeC;\n\ntypedef struct{\n    Qnode *rear,*front;\n}Qlink;\n\ntypedef struct{\n    SnodeC *base,*top;\n}SlinkC;\n\ntypedef struct {\n    Snode *base, *top;\n}Slink;\n\ntemplate<class T>\nvoid InitStack(T &s){\n    s.top = s.base = NULL;\n}\n\n//void InitStack(Slink &s){\n//    s.top = s.base = NULL;\n//}\n//\n//void InitStack(SlinkC &s){\n//    s.top = s.base = NULL;\n//}\n\nvoid push(Slink &s,int n){\n    Snode *p;\n    p = new (Snode);\n    p->data = n;\n    p->next = NULL;\n    if (s.base == NULL){\n        s.top = s.base = p;\n    } else{\n        s.top->next = p;\n        s.top = p;\n    }\n}\n\nvoid push(SlinkC &s,char n){\n    SnodeC *p;\n    p = new (SnodeC);\n    p->data = n;\n    p->next = NULL;\n    if (s.base == NULL){\n        s.top = s.base = p;\n    } else{\n        s.top->next = p;\n        s.top = p;\n    }\n}\n\nvoid pop(Slink &s){\n    Snode *p;\n    p = s.base;\n    if ((s.base == s.top)&&(s.base != NULL)){\n        free(s.base);\n        s.base = s.top = NULL;\n        return;\n    }\n    while (p->next != s.top) p = p->next;\n    s.top = p;\n    free(p->next);\n    p->next =NULL;\n}\n\nvoid pop(SlinkC &s){\n    SnodeC *p;\n    p = s.base;\n    if ((s.base == s.top)&&(s.base != NULL)){\n        free(s.base);\n        s.base = s.top = NULL;\n        return;\n    }\n    while (p->next != s.top) p = p->next;\n    s.top = p;\n    free(p->next);\n    p->next =NULL;\n}\n\nint top(Slink s){\n    return s.top->data;\n}\n\nchar top(SlinkC s){\n    return s.top->data;\n}\n\ntemplate<class T>\nint empty(T s){\n    if (s.base == NULL)\n        return 1;\n    else\n        return 0;\n}\n\nint getIndex(char theta)        //中文\"（\"与\"）\"不可用\n{\n    int index = 0;\n    switch (theta)\n    {\n        case '+':\n            index = 0;\n            break;\n        case '-':\n            index = 1;\n            break;\n        case '*':\n            index = 2;\n            break;\n        case '/':\n            index = 3;\n            break;\n        case '(':\n            index = 4;\n            break;\n        case ')':\n            index = 5;\n            break;\n        case '#':\n            index = 6;\n        default:break;\n    }\n    return index;\n}\n\nchar Precede(char theta1, char theta2)\n{\n    const char priority[][7] =          //优先度\n            {\n                    { '>','>','<','<','<','>','>' },\n                    { '>','>','<','<','<','>','>' },\n                    { '>','>','>','>','<','>','>' },\n                    { '>','>','>','>','<','>','>' },\n                    { '<','<','<','<','<','=','0' },\n                    { '>','>','>','>','0','>','>' },\n                    { '<','<','<','<','<','0','=' },\n            };\n\n    int index1 = getIndex(theta1);\n    int index2 = getIndex(theta2);\n    return priority[index1][index2];\n}\n\ndouble calculate(double b, char theta, double a)\n{\n    switch (theta)\n    {\n        case '+':\n            return b + a;\n        case '-':\n            return b - a;\n        case '*':\n            return b * a;\n        case '/':\n            return b / a;\n        default:\n            break;\n    }\n}\n\ndouble getAnswer(SlinkC &OPTR,Slink &OPND)\n{\n    push(OPTR,'#');\n    int counter = 0;            //用来记录数字的位数\n    char c = getchar();\n    while (c != '#' || top(OPTR) != '#')\n    {\n        if (isdigit(c))     //判断是否是数字\n        {\n            if (counter == 1)\n            {\n                double t = top(OPND);      //保留栈顶\n                pop(OPND);\n                push(OPND,t * 10 + (c - '0'));\n                counter = 1;\n            }\n            else\n            {\n                push(OPND,c - '0');\n                counter++;          //第二位也是数字，则counter变为1，弹出原有数字并压入新的数字\n            }\n            c = getchar();\n        }\n        else\n        {\n            counter = 0;        //数字结束\n            switch (Precede(top(OPTR), c))\n            {\n                case '<':\n                    push(OPTR,c);\n                    c = getchar();\n                    break;\n                case '=':\n                    pop(OPTR);\n                    c = getchar();\n                    break;\n                case '>':\n                    char theta = top(OPTR);\n                    pop(OPTR);\n                    double a = top(OPND);\n                    pop(OPND);\n                    double b = top(OPND);\n                    pop(OPND);\n                    push(OPND,calculate(b, theta, a));\n            }\n        }\n    }\n    return top(OPND);\n}\n\ntemplate<class T>\nvoid clearstack(T s)      //清空栈\n{\n    while (!empty(s))\n        pop(s);\n}\n\n\nint main()\n{\n    Slink OPND;\n    SlinkC OPTR;\n    InitStack(OPND);\n    InitStack(OPTR);\n    int t;\n    cin >> t;\n    getchar();\n    while (t--)\n    {\n        clearstack(OPND);\n        clearstack(OPTR);\n        double ans = getAnswer(OPTR,OPND);\n        cout << ans << endl<< endl;\n        getchar();\n    }\n    return 0;\n}\n```\n\n```未使用STL，正常做法```\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cctype>\n#include<stack>\n\n#pragma GCC optimize(2)\n\nusing namespace std;\n\nstack<char> OPTR;\nstack<double> OPND;\n\nint getIndex(char theta)        //将运算符转为下标\n{\n    int index = 0;\n    switch (theta)\n    {\n        case '+':\n            index = 0;\n            break;\n        case '-':\n            index = 1;\n            break;\n        case '*':\n            index = 2;\n            break;\n        case '/':\n            index = 3;\n            break;\n        case '(':\n            index = 4;\n            break;\n        case ')':\n            index = 5;\n            break;\n        case '#':\n            index = 6;\n        default:break;\n    }\n    return index;\n}\n\nchar Precede(char theta1, char theta2)          //计算优先度\n{\n    const char priority[][7] =\n            {\n                    { '>','>','<','<','<','>','>' },\n                    { '>','>','<','<','<','>','>' },\n                    { '>','>','>','>','<','>','>' },\n                    { '>','>','>','>','<','>','>' },\n                    { '<','<','<','<','<','=','0' },\n                    { '>','>','>','>','0','>','>' },\n                    { '<','<','<','<','<','0','=' },\n            };\n\n    int index1 = getIndex(theta1);\n    int index2 = getIndex(theta2);\n    return priority[index1][index2];\n}\n\ndouble calculate(double b, char theta, double a)        //根据theta计算结果\n{\n    switch (theta)\n    {\n        case '+':\n            return b + a;\n        case '-':\n            return b - a;\n        case '*':\n            return b * a;\n        case '/':\n            return b / a;\n        default:\n            break;\n    }\n}\n\ndouble getAnswer()\n{\n    OPTR.push('#');\n    int counter = 0;\n    char c = getchar();\n    while (c != '#' || OPTR.top() != '#')\n    {\n        if (isdigit(c))         //如果是数字则进入OPND栈中\n        {\n            if (counter == 1)       //可能为两位数或者是更多位数，所以要先判断前一个数是否为数字\n            {\n                double t = OPND.top();\n                OPND.pop();\n                OPND.push(t * 10 + (c - '0'));\n                counter = 1;\n            }\n            else\n            {\n                OPND.push(c - '0');\n                counter++;\n            }\n            c = getchar();\n        }\n        else        //如果是运算符，则判断\n        {\n            counter = 0;\n            switch (Precede(OPTR.top(), c))\n            {\n                case '<':\n                    OPTR.push(c);\n                    c = getchar();\n                    break;\n                case '=':\n                    OPTR.pop();\n                    c = getchar();\n                    break;\n                case '>':\n                    char theta = OPTR.top();\n                    OPTR.pop();\n                    double a = OPND.top();          //计算a与b运算的值，并将运算得到的结果压入栈中\n                    OPND.pop();\n                    double b = OPND.top();\n                    OPND.pop();                     //弹出a，b，并将运算结果存入\n                    OPND.push(calculate(b,theta,a));\n            }\n        }\n    }\n    return OPND.top();\n}\n\nvoid clearstack()       //清空栈\n{\n    while (!OPTR.empty())\n        OPTR.pop();\n    while (!OPND.empty())\n        OPND.pop();\n}\n\nint main()\n{\n    int t;\n    cin >> t;\n    getchar();\n    while (t--)\n    {\n        clearstack();\n        double ans = getAnswer();\n        cout << ans << endl<< endl;\n        getchar();\n    }\n    return 0;\n}\n```\n\n<center><a href=\"https://www.jianshu.com/p/649c12a80fe8\">逆波兰表达式、波兰表达式</a></center>","slug":"栈与队列","published":1,"updated":"2021-04-13T12:53:43.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckojvxerp001kboe22scabad6","content":"<h3 id=\"10-6栈与队列\"><a href=\"#10-6栈与队列\" class=\"headerlink\" title=\"10.6栈与队列\"></a>10.6栈与队列</h3><h4 id=\"栈\"><a href=\"#栈\" class=\"headerlink\" title=\"栈\"></a>栈</h4><center><img src=\"https://s3.ax1x.com/2021/03/13/6waiCT.jpg\" width=\"50%\"></center>\n\n\n<blockquote>\n<p>栈不存在的条件：base == NULL;<br>栈为空的条件： base == top;<br>栈满的条件：top-base == stacksize;</p>\n</blockquote>\n<ol>\n<li>初始化栈<span id=\"more\"></span>\n<center><img src=\"https://s3.ax1x.com/2021/03/13/6waVKJ.md.png\" width=\"50%\" ></center></li>\n</ol>\n<ol start=\"2\">\n<li><p>获取栈顶元素 top()</p>\n<center><img src=\"https://s3.ax1x.com/2021/03/13/6waC5V.jpg\" width=\"50%\" ></center></li>\n</ol>\n<ol start=\"3\">\n<li><p>入栈 push()</p>\n<center><img src=\"https://s3.ax1x.com/2021/03/13/6wak2F.jpg\" width=\"50%\" ></center></li>\n</ol>\n<ol start=\"4\">\n<li><p>出栈 pop()</p>\n<center><img src=\"https://s3.ax1x.com/2021/03/13/6waF8U.md.jpg\" width=\"50%\" ></center></li>\n</ol>\n<h4 id=\"练习一：十进制n转为r进制数\"><a href=\"#练习一：十进制n转为r进制数\" class=\"headerlink\" title=\"练习一：十进制n转为r进制数\"></a>练习一：十进制n转为r进制数</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> n,d,r;</span><br><span class=\"line\"><span class=\"built_in\">std</span>::<span class=\"built_in\">stack</span>&lt;<span class=\"keyword\">int</span>&gt;(s);</span><br><span class=\"line\"><span class=\"built_in\">std</span>::<span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;r;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (n!=<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">    d = n%r;</span><br><span class=\"line\">    n = n/r;</span><br><span class=\"line\">    s.push(d);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (!s.empty())&#123;</span><br><span class=\"line\">    <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span>&lt;&lt;s.top();</span><br><span class=\"line\">    s.pop();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"练习二：括号匹配\"><a href=\"#练习二：括号匹配\" class=\"headerlink\" title=\"练习二：括号匹配\"></a>练习二：括号匹配</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">char</span> a[<span class=\"number\">20</span>];</span><br><span class=\"line\"><span class=\"built_in\">std</span>::<span class=\"built_in\">stack</span>&lt;<span class=\"keyword\">char</span>&gt;(s);</span><br><span class=\"line\"><span class=\"built_in\">cin</span>&gt;&gt;a;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; a[i] != <span class=\"string\">&#x27;\\0&#x27;</span>; ++i) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (s.empty())&#123;</span><br><span class=\"line\">        s.push(a[i]);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (((s.top() == <span class=\"string\">&#x27;(&#x27;</span>)&amp;&amp;(a[i] == <span class=\"string\">&#x27;)&#x27;</span>))||((s.top() == <span class=\"string\">&#x27;[&#x27;</span>)&amp;&amp;(a[i] == <span class=\"string\">&#x27;]&#x27;</span>))||((s.top() == <span class=\"string\">&#x27;&#123;&#x27;</span>)&amp;&amp;(a[i] == <span class=\"string\">&#x27;&#125;&#x27;</span>)))&#123;</span><br><span class=\"line\">        s.pop();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (a[i] == <span class=\"string\">&#x27;(&#x27;</span>||a[i] == <span class=\"string\">&#x27;[&#x27;</span>||a[i] == <span class=\"string\">&#x27;&#123;&#x27;</span>)&#123;</span><br><span class=\"line\">        s.push(a[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (s.empty())&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;YES&quot;</span>;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;NO&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"10-9-队列\"><a href=\"#10-9-队列\" class=\"headerlink\" title=\"10.9 队列\"></a>10.9 队列</h3><h4 id=\"队列\"><a href=\"#队列\" class=\"headerlink\" title=\"队列\"></a>队列</h4><blockquote>\n<p>空队列：front == rear<br>满队列：(rear + 1) % max == front</p>\n</blockquote>\n<ol>\n<li><p>循环队列的初始化</p>\n <center><img src=\"https://s3.ax1x.com/2021/03/13/6waZr9.md.png\" width=\"50%\"></li>\n</ol>\n<ol start=\"2\">\n<li><p>入队</p>\n <center><img src=\"https://s3.ax1x.com/2021/03/13/6wauUx.png\" width=\"50%\"></li>\n</ol>\n<ol start=\"3\">\n<li><p>出队</p>\n <center><img src=\"https://s3.ax1x.com/2021/03/13/6waK56.md.png\" width=\"50%\"></li>\n</ol>\n<hr>\n<h3 id=\"10-9-上机\"><a href=\"#10-9-上机\" class=\"headerlink\" title=\"10.9 上机\"></a>10.9 上机</h3><h4 id=\"栈与队列的基本操作（内含进制转换与括号匹配-STL模版-）\"><a href=\"#栈与队列的基本操作（内含进制转换与括号匹配-STL模版-）\" class=\"headerlink\" title=\"栈与队列的基本操作（内含进制转换与括号匹配[STL模版]）\"></a>栈与队列的基本操作（内含进制转换与括号匹配[STL模版]）</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stack&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\">//#include &lt;queue&gt;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iomanip&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">pragma</span> GCC optimize(2)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span> &#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> data;</span><br><span class=\"line\">    node *next;</span><br><span class=\"line\">&#125;Qnode,Snode;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span>&#123;</span></span><br><span class=\"line\">    Qnode *rear,*front;</span><br><span class=\"line\">&#125;Qlink;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span>&#123;</span></span><br><span class=\"line\">    Snode *base,*top;</span><br><span class=\"line\">&#125;Slink;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">InitStack</span><span class=\"params\">(Slink &amp;s)</span></span>&#123;</span><br><span class=\"line\">    s.top = s.base = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">push</span><span class=\"params\">(Slink &amp;s,<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    Snode *p;</span><br><span class=\"line\">    p = <span class=\"keyword\">new</span> (Snode);</span><br><span class=\"line\">    p-&gt;data = n;</span><br><span class=\"line\">    p-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (s.base == <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        s.top = s.base = p;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        s.top-&gt;next = p;</span><br><span class=\"line\">        s.top = p;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">pop</span><span class=\"params\">(Slink &amp;s)</span></span>&#123;</span><br><span class=\"line\">    Snode *p;</span><br><span class=\"line\">    p = s.base;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((s.base == s.top)&amp;&amp;(s.base != <span class=\"literal\">NULL</span>))&#123;</span><br><span class=\"line\">        <span class=\"built_in\">free</span>(s.base);</span><br><span class=\"line\">        s.base = s.top = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (p-&gt;next != s.top) p = p-&gt;next;</span><br><span class=\"line\">    s.top = p;</span><br><span class=\"line\">    <span class=\"built_in\">free</span>(p-&gt;next);</span><br><span class=\"line\">    p-&gt;next =<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">top</span><span class=\"params\">(Slink s)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s.top-&gt;data;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">empty</span><span class=\"params\">(Slink s)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (s.base == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">InitQue</span><span class=\"params\">(Qlink &amp;q)</span></span>&#123;</span><br><span class=\"line\">    Qnode *p = <span class=\"keyword\">new</span> (node);</span><br><span class=\"line\">    p-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    q.rear = q.front = p;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">InsertQue</span><span class=\"params\">(Qlink &amp;q,<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    Qnode *p = <span class=\"keyword\">new</span> (node);</span><br><span class=\"line\">    p-&gt;data = n;</span><br><span class=\"line\">    p-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    q.rear-&gt;next = p;</span><br><span class=\"line\">    q.rear = p;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">DelQue</span><span class=\"params\">(Qlink &amp;q,<span class=\"keyword\">int</span> &amp;e)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (q.front == q.rear)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Qnode *p;</span><br><span class=\"line\">    p = q.front;</span><br><span class=\"line\">    e = q.front-&gt;next-&gt;data;</span><br><span class=\"line\">    q.front = q.front-&gt;next;</span><br><span class=\"line\">    <span class=\"built_in\">free</span>(p);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">PrintQue</span><span class=\"params\">(Qlink q)</span></span>&#123;</span><br><span class=\"line\">    Qnode *p;</span><br><span class=\"line\">    p = q.front-&gt;next;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (p != <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;p-&gt;data&lt;&lt;<span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">        p = p-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> temp;</span><br><span class=\"line\">    Qlink q;</span><br><span class=\"line\">    InitQue(q);</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;temp;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; temp; ++i) &#123;</span><br><span class=\"line\">        InsertQue(q,rand()%<span class=\"number\">100</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;输出队列：&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    PrintQue(q);</span><br><span class=\"line\">    DelQue(q,temp);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;出队元素：&quot;</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;temp&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;出队后队列：&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    PrintQue(q);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"comment\">//<span class=\"doctag\">TODO:</span></span></span><br><span class=\"line\">    Slink s;</span><br><span class=\"line\">    InitStack(s);</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;temp;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; temp; ++i) &#123;</span><br><span class=\"line\">        push(s,rand()%<span class=\"number\">100</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;压栈完成：&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; temp; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> t = top(s);</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;t&lt;&lt;<span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">        pop(s);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,r,d;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;进制转换,输入十进制数n与目标进制r:&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    InitStack(s);</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;r;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (n!=<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        d = n%r;</span><br><span class=\"line\">        n = n/r;</span><br><span class=\"line\">        push(s,d);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;转换完成：&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (!empty(s))&#123;</span><br><span class=\"line\">        <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span>&lt;&lt;top(s);</span><br><span class=\"line\">        pop(s);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;(&quot;</span>&lt;&lt;r&lt;&lt;<span class=\"string\">&quot;)&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;括号匹配，输入一行括号：&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> a[<span class=\"number\">100</span>];</span><br><span class=\"line\">    <span class=\"built_in\">stack</span>&lt;<span class=\"keyword\">char</span>&gt;(S);</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;a;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; a[i] != <span class=\"string\">&#x27;\\0&#x27;</span>; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (S.empty())&#123;</span><br><span class=\"line\">            S.push(a[i]);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (((S.top() == <span class=\"string\">&#x27;(&#x27;</span>)&amp;&amp;(a[i] == <span class=\"string\">&#x27;)&#x27;</span>))||((S.top() == <span class=\"string\">&#x27;[&#x27;</span>)&amp;&amp;(a[i] == <span class=\"string\">&#x27;]&#x27;</span>))||((S.top() == <span class=\"string\">&#x27;&#123;&#x27;</span>)&amp;&amp;(a[i] == <span class=\"string\">&#x27;&#125;&#x27;</span>)))&#123;</span><br><span class=\"line\">            S.pop();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (a[i] == <span class=\"string\">&#x27;(&#x27;</span>||a[i] == <span class=\"string\">&#x27;[&#x27;</span>||a[i] == <span class=\"string\">&#x27;&#123;&#x27;</span>)&#123;</span><br><span class=\"line\">            S.push(a[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (S.empty())&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;YES&quot;</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;NO&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * //<span class=\"doctag\">TODO:</span>进制转换</span></span><br><span class=\"line\"><span class=\"comment\"> *     int n,d,r;</span></span><br><span class=\"line\"><span class=\"comment\">    stack&lt;int&gt;(s);</span></span><br><span class=\"line\"><span class=\"comment\">    cin&gt;&gt;n&gt;&gt;r;</span></span><br><span class=\"line\"><span class=\"comment\">    while (n!=0)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">        d = n%r;</span></span><br><span class=\"line\"><span class=\"comment\">        n = n/r;</span></span><br><span class=\"line\"><span class=\"comment\">        s.push(d);</span></span><br><span class=\"line\"><span class=\"comment\">    &#125;</span></span><br><span class=\"line\"><span class=\"comment\">    while (!s.empty())&#123;</span></span><br><span class=\"line\"><span class=\"comment\">        std::cout&lt;&lt;s.top();</span></span><br><span class=\"line\"><span class=\"comment\">        s.pop();</span></span><br><span class=\"line\"><span class=\"comment\">    &#125;</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * //<span class=\"doctag\">TODO:</span>括号匹配</span></span><br><span class=\"line\"><span class=\"comment\"> * char a[20];</span></span><br><span class=\"line\"><span class=\"comment\">    stack&lt;char&gt;(s);</span></span><br><span class=\"line\"><span class=\"comment\">    cin&gt;&gt;a;</span></span><br><span class=\"line\"><span class=\"comment\">    for (int i = 0; a[i] != &#x27;\\0&#x27;; ++i) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">        if (s.empty())&#123;</span></span><br><span class=\"line\"><span class=\"comment\">            s.push(a[i]);</span></span><br><span class=\"line\"><span class=\"comment\">        &#125; else if (((s.top() == &#x27;(&#x27;)&amp;&amp;(a[i] == &#x27;)&#x27;))||((s.top() == &#x27;[&#x27;)&amp;&amp;(a[i] == &#x27;]&#x27;))||((s.top() == &#x27;&#123;&#x27;)&amp;&amp;(a[i] == &#x27;&#125;&#x27;)))&#123;</span></span><br><span class=\"line\"><span class=\"comment\">            s.pop();</span></span><br><span class=\"line\"><span class=\"comment\">        &#125; else if (a[i] == &#x27;(&#x27;||a[i] == &#x27;[&#x27;||a[i] == &#x27;&#123;&#x27;)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">            s.push(a[i]);</span></span><br><span class=\"line\"><span class=\"comment\">        &#125;</span></span><br><span class=\"line\"><span class=\"comment\">    &#125;</span></span><br><span class=\"line\"><span class=\"comment\">    if (s.empty())&#123;</span></span><br><span class=\"line\"><span class=\"comment\">        cout&lt;&lt;&quot;YES&quot;;</span></span><br><span class=\"line\"><span class=\"comment\">    &#125; else&#123;</span></span><br><span class=\"line\"><span class=\"comment\">        cout&lt;&lt;&quot;NO&quot;;</span></span><br><span class=\"line\"><span class=\"comment\">    &#125;</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"栈实现计算表达式的值\"><a href=\"#栈实现计算表达式的值\" class=\"headerlink\" title=\"栈实现计算表达式的值\"></a>栈实现计算表达式的值</h4><p>``使用STL模版```</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cctype&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stack&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">pragma</span> GCC optimize(2)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//stack&lt;char&gt; OPTR;</span></span><br><span class=\"line\"><span class=\"comment\">//stack&lt;double&gt; OPND;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span> &#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> data;</span><br><span class=\"line\">    node *next;</span><br><span class=\"line\">&#125;Qnode,Snode;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Cnode</span> &#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> data;</span><br><span class=\"line\">    Cnode *next;</span><br><span class=\"line\">&#125;SnodeC;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span>&#123;</span></span><br><span class=\"line\">    Qnode *rear,*front;</span><br><span class=\"line\">&#125;Qlink;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span>&#123;</span></span><br><span class=\"line\">    SnodeC *base,*top;</span><br><span class=\"line\">&#125;SlinkC;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> &#123;</span></span><br><span class=\"line\">    Snode *base, *top;</span><br><span class=\"line\">&#125;Slink;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">template</span>&lt;<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">T</span>&gt;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">InitStack</span><span class=\"params\">(T &amp;s)</span></span>&#123;</span><br><span class=\"line\">    s.top = s.base = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//void InitStack(Slink &amp;s)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//    s.top = s.base = NULL;</span></span><br><span class=\"line\"><span class=\"comment\">//&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//void InitStack(SlinkC &amp;s)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//    s.top = s.base = NULL;</span></span><br><span class=\"line\"><span class=\"comment\">//&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">push</span><span class=\"params\">(Slink &amp;s,<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    Snode *p;</span><br><span class=\"line\">    p = <span class=\"keyword\">new</span> (Snode);</span><br><span class=\"line\">    p-&gt;data = n;</span><br><span class=\"line\">    p-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (s.base == <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        s.top = s.base = p;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        s.top-&gt;next = p;</span><br><span class=\"line\">        s.top = p;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">push</span><span class=\"params\">(SlinkC &amp;s,<span class=\"keyword\">char</span> n)</span></span>&#123;</span><br><span class=\"line\">    SnodeC *p;</span><br><span class=\"line\">    p = <span class=\"keyword\">new</span> (SnodeC);</span><br><span class=\"line\">    p-&gt;data = n;</span><br><span class=\"line\">    p-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (s.base == <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        s.top = s.base = p;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        s.top-&gt;next = p;</span><br><span class=\"line\">        s.top = p;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">pop</span><span class=\"params\">(Slink &amp;s)</span></span>&#123;</span><br><span class=\"line\">    Snode *p;</span><br><span class=\"line\">    p = s.base;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((s.base == s.top)&amp;&amp;(s.base != <span class=\"literal\">NULL</span>))&#123;</span><br><span class=\"line\">        <span class=\"built_in\">free</span>(s.base);</span><br><span class=\"line\">        s.base = s.top = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (p-&gt;next != s.top) p = p-&gt;next;</span><br><span class=\"line\">    s.top = p;</span><br><span class=\"line\">    <span class=\"built_in\">free</span>(p-&gt;next);</span><br><span class=\"line\">    p-&gt;next =<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">pop</span><span class=\"params\">(SlinkC &amp;s)</span></span>&#123;</span><br><span class=\"line\">    SnodeC *p;</span><br><span class=\"line\">    p = s.base;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((s.base == s.top)&amp;&amp;(s.base != <span class=\"literal\">NULL</span>))&#123;</span><br><span class=\"line\">        <span class=\"built_in\">free</span>(s.base);</span><br><span class=\"line\">        s.base = s.top = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (p-&gt;next != s.top) p = p-&gt;next;</span><br><span class=\"line\">    s.top = p;</span><br><span class=\"line\">    <span class=\"built_in\">free</span>(p-&gt;next);</span><br><span class=\"line\">    p-&gt;next =<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">top</span><span class=\"params\">(Slink s)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s.top-&gt;data;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">char</span> <span class=\"title\">top</span><span class=\"params\">(SlinkC s)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s.top-&gt;data;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">template</span>&lt;<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">T</span>&gt;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">empty</span><span class=\"params\">(T s)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (s.base == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">getIndex</span><span class=\"params\">(<span class=\"keyword\">char</span> theta)</span>        <span class=\"comment\">//中文&quot;（&quot;与&quot;）&quot;不可用</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> index = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (theta)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;+&#x27;</span>:</span><br><span class=\"line\">            index = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;-&#x27;</span>:</span><br><span class=\"line\">            index = <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;*&#x27;</span>:</span><br><span class=\"line\">            index = <span class=\"number\">2</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;/&#x27;</span>:</span><br><span class=\"line\">            index = <span class=\"number\">3</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;(&#x27;</span>:</span><br><span class=\"line\">            index = <span class=\"number\">4</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;)&#x27;</span>:</span><br><span class=\"line\">            index = <span class=\"number\">5</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;#&#x27;</span>:</span><br><span class=\"line\">            index = <span class=\"number\">6</span>;</span><br><span class=\"line\">        <span class=\"keyword\">default</span>:<span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> index;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">char</span> <span class=\"title\">Precede</span><span class=\"params\">(<span class=\"keyword\">char</span> theta1, <span class=\"keyword\">char</span> theta2)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> priority[][<span class=\"number\">7</span>] =          <span class=\"comment\">//优先度</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                    &#123; <span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span> &#125;,</span><br><span class=\"line\">                    &#123; <span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span> &#125;,</span><br><span class=\"line\">                    &#123; <span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span> &#125;,</span><br><span class=\"line\">                    &#123; <span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span> &#125;,</span><br><span class=\"line\">                    &#123; <span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;=&#x27;</span>,<span class=\"string\">&#x27;0&#x27;</span> &#125;,</span><br><span class=\"line\">                    &#123; <span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;0&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span> &#125;,</span><br><span class=\"line\">                    &#123; <span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;0&#x27;</span>,<span class=\"string\">&#x27;=&#x27;</span> &#125;,</span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">int</span> index1 = getIndex(theta1);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> index2 = getIndex(theta2);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> priority[index1][index2];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">double</span> <span class=\"title\">calculate</span><span class=\"params\">(<span class=\"keyword\">double</span> b, <span class=\"keyword\">char</span> theta, <span class=\"keyword\">double</span> a)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (theta)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;+&#x27;</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> b + a;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;-&#x27;</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> b - a;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;*&#x27;</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> b * a;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;/&#x27;</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> b / a;</span><br><span class=\"line\">        <span class=\"keyword\">default</span>:</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">double</span> <span class=\"title\">getAnswer</span><span class=\"params\">(SlinkC &amp;OPTR,Slink &amp;OPND)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    push(OPTR,<span class=\"string\">&#x27;#&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> counter = <span class=\"number\">0</span>;            <span class=\"comment\">//用来记录数字的位数</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> c = getchar();</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (c != <span class=\"string\">&#x27;#&#x27;</span> || top(OPTR) != <span class=\"string\">&#x27;#&#x27;</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">isdigit</span>(c))     <span class=\"comment\">//判断是否是数字</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (counter == <span class=\"number\">1</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">double</span> t = top(OPND);      <span class=\"comment\">//保留栈顶</span></span><br><span class=\"line\">                pop(OPND);</span><br><span class=\"line\">                push(OPND,t * <span class=\"number\">10</span> + (c - <span class=\"string\">&#x27;0&#x27;</span>));</span><br><span class=\"line\">                counter = <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                push(OPND,c - <span class=\"string\">&#x27;0&#x27;</span>);</span><br><span class=\"line\">                counter++;          <span class=\"comment\">//第二位也是数字，则counter变为1，弹出原有数字并压入新的数字</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            c = getchar();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            counter = <span class=\"number\">0</span>;        <span class=\"comment\">//数字结束</span></span><br><span class=\"line\">            <span class=\"keyword\">switch</span> (Precede(top(OPTR), c))</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&#x27;&lt;&#x27;</span>:</span><br><span class=\"line\">                    push(OPTR,c);</span><br><span class=\"line\">                    c = getchar();</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&#x27;=&#x27;</span>:</span><br><span class=\"line\">                    pop(OPTR);</span><br><span class=\"line\">                    c = getchar();</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&#x27;&gt;&#x27;</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">char</span> theta = top(OPTR);</span><br><span class=\"line\">                    pop(OPTR);</span><br><span class=\"line\">                    <span class=\"keyword\">double</span> a = top(OPND);</span><br><span class=\"line\">                    pop(OPND);</span><br><span class=\"line\">                    <span class=\"keyword\">double</span> b = top(OPND);</span><br><span class=\"line\">                    pop(OPND);</span><br><span class=\"line\">                    push(OPND,calculate(b, theta, a));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> top(OPND);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">template</span>&lt;<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">T</span>&gt;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">clearstack</span><span class=\"params\">(T s)</span>      <span class=\"comment\">//清空栈</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (!empty(s))</span><br><span class=\"line\">        pop(s);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    Slink OPND;</span><br><span class=\"line\">    SlinkC OPTR;</span><br><span class=\"line\">    InitStack(OPND);</span><br><span class=\"line\">    InitStack(OPTR);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> t;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; t;</span><br><span class=\"line\">    getchar();</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (t--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        clearstack(OPND);</span><br><span class=\"line\">        clearstack(OPTR);</span><br><span class=\"line\">        <span class=\"keyword\">double</span> ans = getAnswer(OPTR,OPND);</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; ans &lt;&lt; <span class=\"built_in\">endl</span>&lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        getchar();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>未使用STL，正常做法</code></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cctype&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stack&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">pragma</span> GCC optimize(2)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">stack</span>&lt;<span class=\"keyword\">char</span>&gt; OPTR;</span><br><span class=\"line\"><span class=\"built_in\">stack</span>&lt;<span class=\"keyword\">double</span>&gt; OPND;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">getIndex</span><span class=\"params\">(<span class=\"keyword\">char</span> theta)</span>        <span class=\"comment\">//将运算符转为下标</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> index = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (theta)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;+&#x27;</span>:</span><br><span class=\"line\">            index = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;-&#x27;</span>:</span><br><span class=\"line\">            index = <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;*&#x27;</span>:</span><br><span class=\"line\">            index = <span class=\"number\">2</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;/&#x27;</span>:</span><br><span class=\"line\">            index = <span class=\"number\">3</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;(&#x27;</span>:</span><br><span class=\"line\">            index = <span class=\"number\">4</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;)&#x27;</span>:</span><br><span class=\"line\">            index = <span class=\"number\">5</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;#&#x27;</span>:</span><br><span class=\"line\">            index = <span class=\"number\">6</span>;</span><br><span class=\"line\">        <span class=\"keyword\">default</span>:<span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> index;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">char</span> <span class=\"title\">Precede</span><span class=\"params\">(<span class=\"keyword\">char</span> theta1, <span class=\"keyword\">char</span> theta2)</span>          <span class=\"comment\">//计算优先度</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> priority[][<span class=\"number\">7</span>] =</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                    &#123; <span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span> &#125;,</span><br><span class=\"line\">                    &#123; <span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span> &#125;,</span><br><span class=\"line\">                    &#123; <span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span> &#125;,</span><br><span class=\"line\">                    &#123; <span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span> &#125;,</span><br><span class=\"line\">                    &#123; <span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;=&#x27;</span>,<span class=\"string\">&#x27;0&#x27;</span> &#125;,</span><br><span class=\"line\">                    &#123; <span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;0&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span> &#125;,</span><br><span class=\"line\">                    &#123; <span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;0&#x27;</span>,<span class=\"string\">&#x27;=&#x27;</span> &#125;,</span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">int</span> index1 = getIndex(theta1);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> index2 = getIndex(theta2);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> priority[index1][index2];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">double</span> <span class=\"title\">calculate</span><span class=\"params\">(<span class=\"keyword\">double</span> b, <span class=\"keyword\">char</span> theta, <span class=\"keyword\">double</span> a)</span>        <span class=\"comment\">//根据theta计算结果</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (theta)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;+&#x27;</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> b + a;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;-&#x27;</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> b - a;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;*&#x27;</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> b * a;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;/&#x27;</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> b / a;</span><br><span class=\"line\">        <span class=\"keyword\">default</span>:</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">double</span> <span class=\"title\">getAnswer</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    OPTR.push(<span class=\"string\">&#x27;#&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> counter = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> c = getchar();</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (c != <span class=\"string\">&#x27;#&#x27;</span> || OPTR.top() != <span class=\"string\">&#x27;#&#x27;</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">isdigit</span>(c))         <span class=\"comment\">//如果是数字则进入OPND栈中</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (counter == <span class=\"number\">1</span>)       <span class=\"comment\">//可能为两位数或者是更多位数，所以要先判断前一个数是否为数字</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">double</span> t = OPND.top();</span><br><span class=\"line\">                OPND.pop();</span><br><span class=\"line\">                OPND.push(t * <span class=\"number\">10</span> + (c - <span class=\"string\">&#x27;0&#x27;</span>));</span><br><span class=\"line\">                counter = <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                OPND.push(c - <span class=\"string\">&#x27;0&#x27;</span>);</span><br><span class=\"line\">                counter++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            c = getchar();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>        <span class=\"comment\">//如果是运算符，则判断</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            counter = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">switch</span> (Precede(OPTR.top(), c))</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&#x27;&lt;&#x27;</span>:</span><br><span class=\"line\">                    OPTR.push(c);</span><br><span class=\"line\">                    c = getchar();</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&#x27;=&#x27;</span>:</span><br><span class=\"line\">                    OPTR.pop();</span><br><span class=\"line\">                    c = getchar();</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&#x27;&gt;&#x27;</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">char</span> theta = OPTR.top();</span><br><span class=\"line\">                    OPTR.pop();</span><br><span class=\"line\">                    <span class=\"keyword\">double</span> a = OPND.top();          <span class=\"comment\">//计算a与b运算的值，并将运算得到的结果压入栈中</span></span><br><span class=\"line\">                    OPND.pop();</span><br><span class=\"line\">                    <span class=\"keyword\">double</span> b = OPND.top();</span><br><span class=\"line\">                    OPND.pop();                     <span class=\"comment\">//弹出a，b，并将运算结果存入</span></span><br><span class=\"line\">                    OPND.push(calculate(b,theta,a));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> OPND.top();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">clearstack</span><span class=\"params\">()</span>       <span class=\"comment\">//清空栈</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (!OPTR.empty())</span><br><span class=\"line\">        OPTR.pop();</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (!OPND.empty())</span><br><span class=\"line\">        OPND.pop();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> t;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; t;</span><br><span class=\"line\">    getchar();</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (t--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        clearstack();</span><br><span class=\"line\">        <span class=\"keyword\">double</span> ans = getAnswer();</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; ans &lt;&lt; <span class=\"built_in\">endl</span>&lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        getchar();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<center><a href=\"https://www.jianshu.com/p/649c12a80fe8\">逆波兰表达式、波兰表达式</a></center><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","site":{"data":{}},"excerpt":"10.6栈与队列\n栈\n栈不存在的条件：base == NULL;\n栈为空的条件： base == top;\n栈满的条件：top-base == stacksize;\n\n 1. 初始化栈\n\n 2. 获取栈顶元素 top()\n    \n    \n\n 3. 入栈 push()\n    \n    \n\n 4. 出栈 pop()\n    \n    \n\n练习一：十进制n转为r进制数\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\nint n,d,r;\nstd::stack<int>(s);\nstd::cin>>n>>r;\nwhile (n!=0){\n    d = n%r;\n    n = n/r","more":"<center><img src=\"https://s3.ax1x.com/2021/03/13/6waVKJ.md.png\" width=\"50%\" ></center></li>\n</ol>\n<ol start=\"2\">\n<li><p>获取栈顶元素 top()</p>\n<center><img src=\"https://s3.ax1x.com/2021/03/13/6waC5V.jpg\" width=\"50%\" ></center></li>\n</ol>\n<ol start=\"3\">\n<li><p>入栈 push()</p>\n<center><img src=\"https://s3.ax1x.com/2021/03/13/6wak2F.jpg\" width=\"50%\" ></center></li>\n</ol>\n<ol start=\"4\">\n<li><p>出栈 pop()</p>\n<center><img src=\"https://s3.ax1x.com/2021/03/13/6waF8U.md.jpg\" width=\"50%\" ></center></li>\n</ol>\n<h4 id=\"练习一：十进制n转为r进制数\"><a href=\"#练习一：十进制n转为r进制数\" class=\"headerlink\" title=\"练习一：十进制n转为r进制数\"></a>练习一：十进制n转为r进制数</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> n,d,r;</span><br><span class=\"line\"><span class=\"built_in\">std</span>::<span class=\"built_in\">stack</span>&lt;<span class=\"keyword\">int</span>&gt;(s);</span><br><span class=\"line\"><span class=\"built_in\">std</span>::<span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;r;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (n!=<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">    d = n%r;</span><br><span class=\"line\">    n = n/r;</span><br><span class=\"line\">    s.push(d);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (!s.empty())&#123;</span><br><span class=\"line\">    <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span>&lt;&lt;s.top();</span><br><span class=\"line\">    s.pop();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"练习二：括号匹配\"><a href=\"#练习二：括号匹配\" class=\"headerlink\" title=\"练习二：括号匹配\"></a>练习二：括号匹配</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">char</span> a[<span class=\"number\">20</span>];</span><br><span class=\"line\"><span class=\"built_in\">std</span>::<span class=\"built_in\">stack</span>&lt;<span class=\"keyword\">char</span>&gt;(s);</span><br><span class=\"line\"><span class=\"built_in\">cin</span>&gt;&gt;a;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; a[i] != <span class=\"string\">&#x27;\\0&#x27;</span>; ++i) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (s.empty())&#123;</span><br><span class=\"line\">        s.push(a[i]);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (((s.top() == <span class=\"string\">&#x27;(&#x27;</span>)&amp;&amp;(a[i] == <span class=\"string\">&#x27;)&#x27;</span>))||((s.top() == <span class=\"string\">&#x27;[&#x27;</span>)&amp;&amp;(a[i] == <span class=\"string\">&#x27;]&#x27;</span>))||((s.top() == <span class=\"string\">&#x27;&#123;&#x27;</span>)&amp;&amp;(a[i] == <span class=\"string\">&#x27;&#125;&#x27;</span>)))&#123;</span><br><span class=\"line\">        s.pop();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (a[i] == <span class=\"string\">&#x27;(&#x27;</span>||a[i] == <span class=\"string\">&#x27;[&#x27;</span>||a[i] == <span class=\"string\">&#x27;&#123;&#x27;</span>)&#123;</span><br><span class=\"line\">        s.push(a[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (s.empty())&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;YES&quot;</span>;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;NO&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"10-9-队列\"><a href=\"#10-9-队列\" class=\"headerlink\" title=\"10.9 队列\"></a>10.9 队列</h3><h4 id=\"队列\"><a href=\"#队列\" class=\"headerlink\" title=\"队列\"></a>队列</h4><blockquote>\n<p>空队列：front == rear<br>满队列：(rear + 1) % max == front</p>\n</blockquote>\n<ol>\n<li><p>循环队列的初始化</p>\n <center><img src=\"https://s3.ax1x.com/2021/03/13/6waZr9.md.png\" width=\"50%\"></li>\n</ol>\n<ol start=\"2\">\n<li><p>入队</p>\n <center><img src=\"https://s3.ax1x.com/2021/03/13/6wauUx.png\" width=\"50%\"></li>\n</ol>\n<ol start=\"3\">\n<li><p>出队</p>\n <center><img src=\"https://s3.ax1x.com/2021/03/13/6waK56.md.png\" width=\"50%\"></li>\n</ol>\n<hr>\n<h3 id=\"10-9-上机\"><a href=\"#10-9-上机\" class=\"headerlink\" title=\"10.9 上机\"></a>10.9 上机</h3><h4 id=\"栈与队列的基本操作（内含进制转换与括号匹配-STL模版-）\"><a href=\"#栈与队列的基本操作（内含进制转换与括号匹配-STL模版-）\" class=\"headerlink\" title=\"栈与队列的基本操作（内含进制转换与括号匹配[STL模版]）\"></a>栈与队列的基本操作（内含进制转换与括号匹配[STL模版]）</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stack&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\">//#include &lt;queue&gt;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iomanip&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">pragma</span> GCC optimize(2)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span> &#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> data;</span><br><span class=\"line\">    node *next;</span><br><span class=\"line\">&#125;Qnode,Snode;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span>&#123;</span></span><br><span class=\"line\">    Qnode *rear,*front;</span><br><span class=\"line\">&#125;Qlink;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span>&#123;</span></span><br><span class=\"line\">    Snode *base,*top;</span><br><span class=\"line\">&#125;Slink;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">InitStack</span><span class=\"params\">(Slink &amp;s)</span></span>&#123;</span><br><span class=\"line\">    s.top = s.base = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">push</span><span class=\"params\">(Slink &amp;s,<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    Snode *p;</span><br><span class=\"line\">    p = <span class=\"keyword\">new</span> (Snode);</span><br><span class=\"line\">    p-&gt;data = n;</span><br><span class=\"line\">    p-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (s.base == <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        s.top = s.base = p;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        s.top-&gt;next = p;</span><br><span class=\"line\">        s.top = p;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">pop</span><span class=\"params\">(Slink &amp;s)</span></span>&#123;</span><br><span class=\"line\">    Snode *p;</span><br><span class=\"line\">    p = s.base;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((s.base == s.top)&amp;&amp;(s.base != <span class=\"literal\">NULL</span>))&#123;</span><br><span class=\"line\">        <span class=\"built_in\">free</span>(s.base);</span><br><span class=\"line\">        s.base = s.top = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (p-&gt;next != s.top) p = p-&gt;next;</span><br><span class=\"line\">    s.top = p;</span><br><span class=\"line\">    <span class=\"built_in\">free</span>(p-&gt;next);</span><br><span class=\"line\">    p-&gt;next =<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">top</span><span class=\"params\">(Slink s)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s.top-&gt;data;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">empty</span><span class=\"params\">(Slink s)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (s.base == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">InitQue</span><span class=\"params\">(Qlink &amp;q)</span></span>&#123;</span><br><span class=\"line\">    Qnode *p = <span class=\"keyword\">new</span> (node);</span><br><span class=\"line\">    p-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    q.rear = q.front = p;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">InsertQue</span><span class=\"params\">(Qlink &amp;q,<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    Qnode *p = <span class=\"keyword\">new</span> (node);</span><br><span class=\"line\">    p-&gt;data = n;</span><br><span class=\"line\">    p-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    q.rear-&gt;next = p;</span><br><span class=\"line\">    q.rear = p;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">DelQue</span><span class=\"params\">(Qlink &amp;q,<span class=\"keyword\">int</span> &amp;e)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (q.front == q.rear)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Qnode *p;</span><br><span class=\"line\">    p = q.front;</span><br><span class=\"line\">    e = q.front-&gt;next-&gt;data;</span><br><span class=\"line\">    q.front = q.front-&gt;next;</span><br><span class=\"line\">    <span class=\"built_in\">free</span>(p);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">PrintQue</span><span class=\"params\">(Qlink q)</span></span>&#123;</span><br><span class=\"line\">    Qnode *p;</span><br><span class=\"line\">    p = q.front-&gt;next;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (p != <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;p-&gt;data&lt;&lt;<span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">        p = p-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> temp;</span><br><span class=\"line\">    Qlink q;</span><br><span class=\"line\">    InitQue(q);</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;temp;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; temp; ++i) &#123;</span><br><span class=\"line\">        InsertQue(q,rand()%<span class=\"number\">100</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;输出队列：&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    PrintQue(q);</span><br><span class=\"line\">    DelQue(q,temp);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;出队元素：&quot;</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;temp&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;出队后队列：&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    PrintQue(q);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"comment\">//<span class=\"doctag\">TODO:</span></span></span><br><span class=\"line\">    Slink s;</span><br><span class=\"line\">    InitStack(s);</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;temp;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; temp; ++i) &#123;</span><br><span class=\"line\">        push(s,rand()%<span class=\"number\">100</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;压栈完成：&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; temp; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> t = top(s);</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;t&lt;&lt;<span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">        pop(s);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,r,d;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;进制转换,输入十进制数n与目标进制r:&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    InitStack(s);</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;r;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (n!=<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        d = n%r;</span><br><span class=\"line\">        n = n/r;</span><br><span class=\"line\">        push(s,d);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;转换完成：&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (!empty(s))&#123;</span><br><span class=\"line\">        <span class=\"built_in\">std</span>::<span class=\"built_in\">cout</span>&lt;&lt;top(s);</span><br><span class=\"line\">        pop(s);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;(&quot;</span>&lt;&lt;r&lt;&lt;<span class=\"string\">&quot;)&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;括号匹配，输入一行括号：&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> a[<span class=\"number\">100</span>];</span><br><span class=\"line\">    <span class=\"built_in\">stack</span>&lt;<span class=\"keyword\">char</span>&gt;(S);</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;a;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; a[i] != <span class=\"string\">&#x27;\\0&#x27;</span>; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (S.empty())&#123;</span><br><span class=\"line\">            S.push(a[i]);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (((S.top() == <span class=\"string\">&#x27;(&#x27;</span>)&amp;&amp;(a[i] == <span class=\"string\">&#x27;)&#x27;</span>))||((S.top() == <span class=\"string\">&#x27;[&#x27;</span>)&amp;&amp;(a[i] == <span class=\"string\">&#x27;]&#x27;</span>))||((S.top() == <span class=\"string\">&#x27;&#123;&#x27;</span>)&amp;&amp;(a[i] == <span class=\"string\">&#x27;&#125;&#x27;</span>)))&#123;</span><br><span class=\"line\">            S.pop();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (a[i] == <span class=\"string\">&#x27;(&#x27;</span>||a[i] == <span class=\"string\">&#x27;[&#x27;</span>||a[i] == <span class=\"string\">&#x27;&#123;&#x27;</span>)&#123;</span><br><span class=\"line\">            S.push(a[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (S.empty())&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;YES&quot;</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;NO&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * //<span class=\"doctag\">TODO:</span>进制转换</span></span><br><span class=\"line\"><span class=\"comment\"> *     int n,d,r;</span></span><br><span class=\"line\"><span class=\"comment\">    stack&lt;int&gt;(s);</span></span><br><span class=\"line\"><span class=\"comment\">    cin&gt;&gt;n&gt;&gt;r;</span></span><br><span class=\"line\"><span class=\"comment\">    while (n!=0)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">        d = n%r;</span></span><br><span class=\"line\"><span class=\"comment\">        n = n/r;</span></span><br><span class=\"line\"><span class=\"comment\">        s.push(d);</span></span><br><span class=\"line\"><span class=\"comment\">    &#125;</span></span><br><span class=\"line\"><span class=\"comment\">    while (!s.empty())&#123;</span></span><br><span class=\"line\"><span class=\"comment\">        std::cout&lt;&lt;s.top();</span></span><br><span class=\"line\"><span class=\"comment\">        s.pop();</span></span><br><span class=\"line\"><span class=\"comment\">    &#125;</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * //<span class=\"doctag\">TODO:</span>括号匹配</span></span><br><span class=\"line\"><span class=\"comment\"> * char a[20];</span></span><br><span class=\"line\"><span class=\"comment\">    stack&lt;char&gt;(s);</span></span><br><span class=\"line\"><span class=\"comment\">    cin&gt;&gt;a;</span></span><br><span class=\"line\"><span class=\"comment\">    for (int i = 0; a[i] != &#x27;\\0&#x27;; ++i) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">        if (s.empty())&#123;</span></span><br><span class=\"line\"><span class=\"comment\">            s.push(a[i]);</span></span><br><span class=\"line\"><span class=\"comment\">        &#125; else if (((s.top() == &#x27;(&#x27;)&amp;&amp;(a[i] == &#x27;)&#x27;))||((s.top() == &#x27;[&#x27;)&amp;&amp;(a[i] == &#x27;]&#x27;))||((s.top() == &#x27;&#123;&#x27;)&amp;&amp;(a[i] == &#x27;&#125;&#x27;)))&#123;</span></span><br><span class=\"line\"><span class=\"comment\">            s.pop();</span></span><br><span class=\"line\"><span class=\"comment\">        &#125; else if (a[i] == &#x27;(&#x27;||a[i] == &#x27;[&#x27;||a[i] == &#x27;&#123;&#x27;)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">            s.push(a[i]);</span></span><br><span class=\"line\"><span class=\"comment\">        &#125;</span></span><br><span class=\"line\"><span class=\"comment\">    &#125;</span></span><br><span class=\"line\"><span class=\"comment\">    if (s.empty())&#123;</span></span><br><span class=\"line\"><span class=\"comment\">        cout&lt;&lt;&quot;YES&quot;;</span></span><br><span class=\"line\"><span class=\"comment\">    &#125; else&#123;</span></span><br><span class=\"line\"><span class=\"comment\">        cout&lt;&lt;&quot;NO&quot;;</span></span><br><span class=\"line\"><span class=\"comment\">    &#125;</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"栈实现计算表达式的值\"><a href=\"#栈实现计算表达式的值\" class=\"headerlink\" title=\"栈实现计算表达式的值\"></a>栈实现计算表达式的值</h4><p>``使用STL模版```</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cctype&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stack&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">pragma</span> GCC optimize(2)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//stack&lt;char&gt; OPTR;</span></span><br><span class=\"line\"><span class=\"comment\">//stack&lt;double&gt; OPND;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span> &#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> data;</span><br><span class=\"line\">    node *next;</span><br><span class=\"line\">&#125;Qnode,Snode;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Cnode</span> &#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> data;</span><br><span class=\"line\">    Cnode *next;</span><br><span class=\"line\">&#125;SnodeC;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span>&#123;</span></span><br><span class=\"line\">    Qnode *rear,*front;</span><br><span class=\"line\">&#125;Qlink;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span>&#123;</span></span><br><span class=\"line\">    SnodeC *base,*top;</span><br><span class=\"line\">&#125;SlinkC;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> &#123;</span></span><br><span class=\"line\">    Snode *base, *top;</span><br><span class=\"line\">&#125;Slink;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">template</span>&lt;<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">T</span>&gt;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">InitStack</span><span class=\"params\">(T &amp;s)</span></span>&#123;</span><br><span class=\"line\">    s.top = s.base = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//void InitStack(Slink &amp;s)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//    s.top = s.base = NULL;</span></span><br><span class=\"line\"><span class=\"comment\">//&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//void InitStack(SlinkC &amp;s)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//    s.top = s.base = NULL;</span></span><br><span class=\"line\"><span class=\"comment\">//&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">push</span><span class=\"params\">(Slink &amp;s,<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    Snode *p;</span><br><span class=\"line\">    p = <span class=\"keyword\">new</span> (Snode);</span><br><span class=\"line\">    p-&gt;data = n;</span><br><span class=\"line\">    p-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (s.base == <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        s.top = s.base = p;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        s.top-&gt;next = p;</span><br><span class=\"line\">        s.top = p;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">push</span><span class=\"params\">(SlinkC &amp;s,<span class=\"keyword\">char</span> n)</span></span>&#123;</span><br><span class=\"line\">    SnodeC *p;</span><br><span class=\"line\">    p = <span class=\"keyword\">new</span> (SnodeC);</span><br><span class=\"line\">    p-&gt;data = n;</span><br><span class=\"line\">    p-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (s.base == <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        s.top = s.base = p;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        s.top-&gt;next = p;</span><br><span class=\"line\">        s.top = p;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">pop</span><span class=\"params\">(Slink &amp;s)</span></span>&#123;</span><br><span class=\"line\">    Snode *p;</span><br><span class=\"line\">    p = s.base;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((s.base == s.top)&amp;&amp;(s.base != <span class=\"literal\">NULL</span>))&#123;</span><br><span class=\"line\">        <span class=\"built_in\">free</span>(s.base);</span><br><span class=\"line\">        s.base = s.top = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (p-&gt;next != s.top) p = p-&gt;next;</span><br><span class=\"line\">    s.top = p;</span><br><span class=\"line\">    <span class=\"built_in\">free</span>(p-&gt;next);</span><br><span class=\"line\">    p-&gt;next =<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">pop</span><span class=\"params\">(SlinkC &amp;s)</span></span>&#123;</span><br><span class=\"line\">    SnodeC *p;</span><br><span class=\"line\">    p = s.base;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((s.base == s.top)&amp;&amp;(s.base != <span class=\"literal\">NULL</span>))&#123;</span><br><span class=\"line\">        <span class=\"built_in\">free</span>(s.base);</span><br><span class=\"line\">        s.base = s.top = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (p-&gt;next != s.top) p = p-&gt;next;</span><br><span class=\"line\">    s.top = p;</span><br><span class=\"line\">    <span class=\"built_in\">free</span>(p-&gt;next);</span><br><span class=\"line\">    p-&gt;next =<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">top</span><span class=\"params\">(Slink s)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s.top-&gt;data;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">char</span> <span class=\"title\">top</span><span class=\"params\">(SlinkC s)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s.top-&gt;data;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">template</span>&lt;<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">T</span>&gt;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">empty</span><span class=\"params\">(T s)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (s.base == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">getIndex</span><span class=\"params\">(<span class=\"keyword\">char</span> theta)</span>        <span class=\"comment\">//中文&quot;（&quot;与&quot;）&quot;不可用</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> index = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (theta)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;+&#x27;</span>:</span><br><span class=\"line\">            index = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;-&#x27;</span>:</span><br><span class=\"line\">            index = <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;*&#x27;</span>:</span><br><span class=\"line\">            index = <span class=\"number\">2</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;/&#x27;</span>:</span><br><span class=\"line\">            index = <span class=\"number\">3</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;(&#x27;</span>:</span><br><span class=\"line\">            index = <span class=\"number\">4</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;)&#x27;</span>:</span><br><span class=\"line\">            index = <span class=\"number\">5</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;#&#x27;</span>:</span><br><span class=\"line\">            index = <span class=\"number\">6</span>;</span><br><span class=\"line\">        <span class=\"keyword\">default</span>:<span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> index;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">char</span> <span class=\"title\">Precede</span><span class=\"params\">(<span class=\"keyword\">char</span> theta1, <span class=\"keyword\">char</span> theta2)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> priority[][<span class=\"number\">7</span>] =          <span class=\"comment\">//优先度</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                    &#123; <span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span> &#125;,</span><br><span class=\"line\">                    &#123; <span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span> &#125;,</span><br><span class=\"line\">                    &#123; <span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span> &#125;,</span><br><span class=\"line\">                    &#123; <span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span> &#125;,</span><br><span class=\"line\">                    &#123; <span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;=&#x27;</span>,<span class=\"string\">&#x27;0&#x27;</span> &#125;,</span><br><span class=\"line\">                    &#123; <span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;0&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span> &#125;,</span><br><span class=\"line\">                    &#123; <span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;0&#x27;</span>,<span class=\"string\">&#x27;=&#x27;</span> &#125;,</span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">int</span> index1 = getIndex(theta1);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> index2 = getIndex(theta2);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> priority[index1][index2];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">double</span> <span class=\"title\">calculate</span><span class=\"params\">(<span class=\"keyword\">double</span> b, <span class=\"keyword\">char</span> theta, <span class=\"keyword\">double</span> a)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (theta)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;+&#x27;</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> b + a;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;-&#x27;</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> b - a;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;*&#x27;</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> b * a;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;/&#x27;</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> b / a;</span><br><span class=\"line\">        <span class=\"keyword\">default</span>:</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">double</span> <span class=\"title\">getAnswer</span><span class=\"params\">(SlinkC &amp;OPTR,Slink &amp;OPND)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    push(OPTR,<span class=\"string\">&#x27;#&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> counter = <span class=\"number\">0</span>;            <span class=\"comment\">//用来记录数字的位数</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> c = getchar();</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (c != <span class=\"string\">&#x27;#&#x27;</span> || top(OPTR) != <span class=\"string\">&#x27;#&#x27;</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">isdigit</span>(c))     <span class=\"comment\">//判断是否是数字</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (counter == <span class=\"number\">1</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">double</span> t = top(OPND);      <span class=\"comment\">//保留栈顶</span></span><br><span class=\"line\">                pop(OPND);</span><br><span class=\"line\">                push(OPND,t * <span class=\"number\">10</span> + (c - <span class=\"string\">&#x27;0&#x27;</span>));</span><br><span class=\"line\">                counter = <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                push(OPND,c - <span class=\"string\">&#x27;0&#x27;</span>);</span><br><span class=\"line\">                counter++;          <span class=\"comment\">//第二位也是数字，则counter变为1，弹出原有数字并压入新的数字</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            c = getchar();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            counter = <span class=\"number\">0</span>;        <span class=\"comment\">//数字结束</span></span><br><span class=\"line\">            <span class=\"keyword\">switch</span> (Precede(top(OPTR), c))</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&#x27;&lt;&#x27;</span>:</span><br><span class=\"line\">                    push(OPTR,c);</span><br><span class=\"line\">                    c = getchar();</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&#x27;=&#x27;</span>:</span><br><span class=\"line\">                    pop(OPTR);</span><br><span class=\"line\">                    c = getchar();</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&#x27;&gt;&#x27;</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">char</span> theta = top(OPTR);</span><br><span class=\"line\">                    pop(OPTR);</span><br><span class=\"line\">                    <span class=\"keyword\">double</span> a = top(OPND);</span><br><span class=\"line\">                    pop(OPND);</span><br><span class=\"line\">                    <span class=\"keyword\">double</span> b = top(OPND);</span><br><span class=\"line\">                    pop(OPND);</span><br><span class=\"line\">                    push(OPND,calculate(b, theta, a));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> top(OPND);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">template</span>&lt;<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">T</span>&gt;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">clearstack</span><span class=\"params\">(T s)</span>      <span class=\"comment\">//清空栈</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (!empty(s))</span><br><span class=\"line\">        pop(s);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    Slink OPND;</span><br><span class=\"line\">    SlinkC OPTR;</span><br><span class=\"line\">    InitStack(OPND);</span><br><span class=\"line\">    InitStack(OPTR);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> t;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; t;</span><br><span class=\"line\">    getchar();</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (t--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        clearstack(OPND);</span><br><span class=\"line\">        clearstack(OPTR);</span><br><span class=\"line\">        <span class=\"keyword\">double</span> ans = getAnswer(OPTR,OPND);</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; ans &lt;&lt; <span class=\"built_in\">endl</span>&lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        getchar();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>未使用STL，正常做法</code></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cctype&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stack&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">pragma</span> GCC optimize(2)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">stack</span>&lt;<span class=\"keyword\">char</span>&gt; OPTR;</span><br><span class=\"line\"><span class=\"built_in\">stack</span>&lt;<span class=\"keyword\">double</span>&gt; OPND;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">getIndex</span><span class=\"params\">(<span class=\"keyword\">char</span> theta)</span>        <span class=\"comment\">//将运算符转为下标</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> index = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (theta)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;+&#x27;</span>:</span><br><span class=\"line\">            index = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;-&#x27;</span>:</span><br><span class=\"line\">            index = <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;*&#x27;</span>:</span><br><span class=\"line\">            index = <span class=\"number\">2</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;/&#x27;</span>:</span><br><span class=\"line\">            index = <span class=\"number\">3</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;(&#x27;</span>:</span><br><span class=\"line\">            index = <span class=\"number\">4</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;)&#x27;</span>:</span><br><span class=\"line\">            index = <span class=\"number\">5</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;#&#x27;</span>:</span><br><span class=\"line\">            index = <span class=\"number\">6</span>;</span><br><span class=\"line\">        <span class=\"keyword\">default</span>:<span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> index;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">char</span> <span class=\"title\">Precede</span><span class=\"params\">(<span class=\"keyword\">char</span> theta1, <span class=\"keyword\">char</span> theta2)</span>          <span class=\"comment\">//计算优先度</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> priority[][<span class=\"number\">7</span>] =</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                    &#123; <span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span> &#125;,</span><br><span class=\"line\">                    &#123; <span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span> &#125;,</span><br><span class=\"line\">                    &#123; <span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span> &#125;,</span><br><span class=\"line\">                    &#123; <span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span> &#125;,</span><br><span class=\"line\">                    &#123; <span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;=&#x27;</span>,<span class=\"string\">&#x27;0&#x27;</span> &#125;,</span><br><span class=\"line\">                    &#123; <span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;0&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span>,<span class=\"string\">&#x27;&gt;&#x27;</span> &#125;,</span><br><span class=\"line\">                    &#123; <span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;&lt;&#x27;</span>,<span class=\"string\">&#x27;0&#x27;</span>,<span class=\"string\">&#x27;=&#x27;</span> &#125;,</span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">int</span> index1 = getIndex(theta1);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> index2 = getIndex(theta2);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> priority[index1][index2];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">double</span> <span class=\"title\">calculate</span><span class=\"params\">(<span class=\"keyword\">double</span> b, <span class=\"keyword\">char</span> theta, <span class=\"keyword\">double</span> a)</span>        <span class=\"comment\">//根据theta计算结果</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (theta)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;+&#x27;</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> b + a;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;-&#x27;</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> b - a;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;*&#x27;</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> b * a;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">&#x27;/&#x27;</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> b / a;</span><br><span class=\"line\">        <span class=\"keyword\">default</span>:</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">double</span> <span class=\"title\">getAnswer</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    OPTR.push(<span class=\"string\">&#x27;#&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> counter = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> c = getchar();</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (c != <span class=\"string\">&#x27;#&#x27;</span> || OPTR.top() != <span class=\"string\">&#x27;#&#x27;</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">isdigit</span>(c))         <span class=\"comment\">//如果是数字则进入OPND栈中</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (counter == <span class=\"number\">1</span>)       <span class=\"comment\">//可能为两位数或者是更多位数，所以要先判断前一个数是否为数字</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">double</span> t = OPND.top();</span><br><span class=\"line\">                OPND.pop();</span><br><span class=\"line\">                OPND.push(t * <span class=\"number\">10</span> + (c - <span class=\"string\">&#x27;0&#x27;</span>));</span><br><span class=\"line\">                counter = <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                OPND.push(c - <span class=\"string\">&#x27;0&#x27;</span>);</span><br><span class=\"line\">                counter++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            c = getchar();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>        <span class=\"comment\">//如果是运算符，则判断</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            counter = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">switch</span> (Precede(OPTR.top(), c))</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&#x27;&lt;&#x27;</span>:</span><br><span class=\"line\">                    OPTR.push(c);</span><br><span class=\"line\">                    c = getchar();</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&#x27;=&#x27;</span>:</span><br><span class=\"line\">                    OPTR.pop();</span><br><span class=\"line\">                    c = getchar();</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&#x27;&gt;&#x27;</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">char</span> theta = OPTR.top();</span><br><span class=\"line\">                    OPTR.pop();</span><br><span class=\"line\">                    <span class=\"keyword\">double</span> a = OPND.top();          <span class=\"comment\">//计算a与b运算的值，并将运算得到的结果压入栈中</span></span><br><span class=\"line\">                    OPND.pop();</span><br><span class=\"line\">                    <span class=\"keyword\">double</span> b = OPND.top();</span><br><span class=\"line\">                    OPND.pop();                     <span class=\"comment\">//弹出a，b，并将运算结果存入</span></span><br><span class=\"line\">                    OPND.push(calculate(b,theta,a));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> OPND.top();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">clearstack</span><span class=\"params\">()</span>       <span class=\"comment\">//清空栈</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (!OPTR.empty())</span><br><span class=\"line\">        OPTR.pop();</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (!OPND.empty())</span><br><span class=\"line\">        OPND.pop();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> t;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; t;</span><br><span class=\"line\">    getchar();</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (t--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        clearstack();</span><br><span class=\"line\">        <span class=\"keyword\">double</span> ans = getAnswer();</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; ans &lt;&lt; <span class=\"built_in\">endl</span>&lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        getchar();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<center><a href=\"https://www.jianshu.com/p/649c12a80fe8\">逆波兰表达式、波兰表达式</a></center>"},{"title":"泰勒级数展开求解e的x次方","date":"2021-03-25T09:40:23.000Z","_content":"\n\n# 泰勒级数展开求解e的x次方\n<!-- more -->\n## 根据公式\n{%katex%}e^x = \\lim\\limits_{n\\to+\\infty} 1 + x + \\frac{x^2}{2!} + ··· +\\frac{x^n}{x!}{%endkatex%}\n\n```java\npublic class Main {\n    public static double CalE(int x) {\n        double ans = 1, s = x;\n        for (int i = 2; i < 100; i++) {\n            ans += s;\n            s = s * x * 1.0 / i;\n        }\n        return ans;\n    }\n\n    public static void main(String[] args) {\n        System.out.printf(\"%.8f\", CalE(1));         //CalE(x)即为e的x次方\n    }\n}\n```\n\n### 加入判断条件\n\n```java\nimport java.math.*;\n\npublic class Main {\n    public static double CalE(int x) {\n        double ans = 1, s = x;\n        for (int i = 2; s > 1e-8; i++) {\n            ans += s;\n            s = s * x * 1.0 / i;\n        }\n        return ans;\n    }\n\n    public static void main(String[] args) {\n        System.out.printf(\"%.8f\", CalE(1));\n    }\n}\n```","source":"_posts/泰勒级数展开求解e的x次方.md","raw":"---\ntitle: 泰勒级数展开求解e的x次方\ndate: 2021-03-25 17:40:23\ntags: Java\n---\n\n\n# 泰勒级数展开求解e的x次方\n<!-- more -->\n## 根据公式\n{%katex%}e^x = \\lim\\limits_{n\\to+\\infty} 1 + x + \\frac{x^2}{2!} + ··· +\\frac{x^n}{x!}{%endkatex%}\n\n```java\npublic class Main {\n    public static double CalE(int x) {\n        double ans = 1, s = x;\n        for (int i = 2; i < 100; i++) {\n            ans += s;\n            s = s * x * 1.0 / i;\n        }\n        return ans;\n    }\n\n    public static void main(String[] args) {\n        System.out.printf(\"%.8f\", CalE(1));         //CalE(x)即为e的x次方\n    }\n}\n```\n\n### 加入判断条件\n\n```java\nimport java.math.*;\n\npublic class Main {\n    public static double CalE(int x) {\n        double ans = 1, s = x;\n        for (int i = 2; s > 1e-8; i++) {\n            ans += s;\n            s = s * x * 1.0 / i;\n        }\n        return ans;\n    }\n\n    public static void main(String[] args) {\n        System.out.printf(\"%.8f\", CalE(1));\n    }\n}\n```","slug":"泰勒级数展开求解e的x次方","published":1,"updated":"2021-04-13T03:31:39.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckojvxerq001mboe20km3fsrg","content":"<h1 id=\"泰勒级数展开求解e的x次方\"><a href=\"#泰勒级数展开求解e的x次方\" class=\"headerlink\" title=\"泰勒级数展开求解e的x次方\"></a>泰勒级数展开求解e的x次方</h1><span id=\"more\"></span>\n<h2 id=\"根据公式\"><a href=\"#根据公式\" class=\"headerlink\" title=\"根据公式\"></a>根据公式</h2><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>e</mi><mi>x</mi></msup><mo>=</mo><munder><mo><mi>lim</mi><mo>⁡</mo></mo><mrow><mi>n</mi><mo>→</mo><mo>+</mo><mi mathvariant=\"normal\">∞</mi></mrow></munder><mn>1</mn><mo>+</mo><mi>x</mi><mo>+</mo><mfrac><msup><mi>x</mi><mn>2</mn></msup><mrow><mn>2</mn><mo stretchy=\"false\">!</mo></mrow></mfrac><mo>+</mo><mo separator=\"true\">⋅</mo><mo separator=\"true\">⋅</mo><mo separator=\"true\">⋅</mo><mo>+</mo><mfrac><msup><mi>x</mi><mi>n</mi></msup><mrow><mi>x</mi><mo stretchy=\"false\">!</mo></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">e^x = \\lim\\limits_{n\\to+\\infty} 1 + x + \\frac{x^2}{2!} + ··· +\\frac{x^n}{x!}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.664392em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.4527709999999998em;vertical-align:-0.758331em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-2.4em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mrel mtight\">→</span><span class=\"mord mtight\">+</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">lim</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.758331em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.36292em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01792em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mclose mtight\">!</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913142857142857em;\"><span style=\"top:-2.931em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\">+</span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">+</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.91098em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span><span class=\"mclose mtight\">!</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7385428571428572em;\"><span style=\"top:-2.931em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">double</span> <span class=\"title\">CalE</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">double</span> ans = <span class=\"number\">1</span>, s = x;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">2</span>; i &lt; <span class=\"number\">100</span>; i++) &#123;</span><br><span class=\"line\">            ans += s;</span><br><span class=\"line\">            s = s * x * <span class=\"number\">1.0</span> / i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        System.out.printf(<span class=\"string\">&quot;%.8f&quot;</span>, CalE(<span class=\"number\">1</span>));         <span class=\"comment\">//CalE(x)即为e的x次方</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"加入判断条件\"><a href=\"#加入判断条件\" class=\"headerlink\" title=\"加入判断条件\"></a>加入判断条件</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.math.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">double</span> <span class=\"title\">CalE</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">double</span> ans = <span class=\"number\">1</span>, s = x;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">2</span>; s &gt; <span class=\"number\">1e-8</span>; i++) &#123;</span><br><span class=\"line\">            ans += s;</span><br><span class=\"line\">            s = s * x * <span class=\"number\">1.0</span> / i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        System.out.printf(<span class=\"string\">&quot;%.8f&quot;</span>, CalE(<span class=\"number\">1</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","site":{"data":{}},"excerpt":"泰勒级数展开求解e的x次方\n根据公式\nex=lim⁡n→+∞1+x+x22!+⋅⋅⋅+xnx!e^x = \\lim\\limits_{n\\to+\\infty} 1 + x + \\frac{x^2}{2!} + ··· +\\frac{x^n}{x!}ex=n→+∞lim​1+x+2!x2​+⋅⋅⋅+x!xn​1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\npublic class Main {\n    public static double CalE(int x) {\n        double ans = 1, s = x;\n        for (int i = 2","more":"<h2 id=\"根据公式\"><a href=\"#根据公式\" class=\"headerlink\" title=\"根据公式\"></a>根据公式</h2><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>e</mi><mi>x</mi></msup><mo>=</mo><munder><mo><mi>lim</mi><mo>⁡</mo></mo><mrow><mi>n</mi><mo>→</mo><mo>+</mo><mi mathvariant=\"normal\">∞</mi></mrow></munder><mn>1</mn><mo>+</mo><mi>x</mi><mo>+</mo><mfrac><msup><mi>x</mi><mn>2</mn></msup><mrow><mn>2</mn><mo stretchy=\"false\">!</mo></mrow></mfrac><mo>+</mo><mo separator=\"true\">⋅</mo><mo separator=\"true\">⋅</mo><mo separator=\"true\">⋅</mo><mo>+</mo><mfrac><msup><mi>x</mi><mi>n</mi></msup><mrow><mi>x</mi><mo stretchy=\"false\">!</mo></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">e^x = \\lim\\limits_{n\\to+\\infty} 1 + x + \\frac{x^2}{2!} + ··· +\\frac{x^n}{x!}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.664392em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.4527709999999998em;vertical-align:-0.758331em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-2.4em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mrel mtight\">→</span><span class=\"mord mtight\">+</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">lim</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.758331em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.36292em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01792em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mclose mtight\">!</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913142857142857em;\"><span style=\"top:-2.931em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\">+</span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">+</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.91098em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span><span class=\"mclose mtight\">!</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7385428571428572em;\"><span style=\"top:-2.931em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">double</span> <span class=\"title\">CalE</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">double</span> ans = <span class=\"number\">1</span>, s = x;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">2</span>; i &lt; <span class=\"number\">100</span>; i++) &#123;</span><br><span class=\"line\">            ans += s;</span><br><span class=\"line\">            s = s * x * <span class=\"number\">1.0</span> / i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        System.out.printf(<span class=\"string\">&quot;%.8f&quot;</span>, CalE(<span class=\"number\">1</span>));         <span class=\"comment\">//CalE(x)即为e的x次方</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"加入判断条件\"><a href=\"#加入判断条件\" class=\"headerlink\" title=\"加入判断条件\"></a>加入判断条件</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.math.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">double</span> <span class=\"title\">CalE</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">double</span> ans = <span class=\"number\">1</span>, s = x;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">2</span>; s &gt; <span class=\"number\">1e-8</span>; i++) &#123;</span><br><span class=\"line\">            ans += s;</span><br><span class=\"line\">            s = s * x * <span class=\"number\">1.0</span> / i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        System.out.printf(<span class=\"string\">&quot;%.8f&quot;</span>, CalE(<span class=\"number\">1</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"百鸡问题","date":"2021-03-16T15:22:57.000Z","_content":"\n# 百鸡问题：公鸡5¥/只，母鸡3¥/只，小鸡3只/¥，若100¥买100只鸡，问其中公鸡、母鸡、小鸡各多少？\n<!-- more -->\n## 解法一：直接计算\n```java\npublic class Main {\n    public static void main(String[] args) {\n        int k;\n        boolean isAns = false;\n        for (int i = 1; i < 20; i++) {          //i表示公鸡个数\n            for (int j = 1; j < 33; j++) {          //j表示母鸡个数\n                k = 100 - i - j;                    //k/3表示小鸡个数\n                if ((k % 3 == 0) && (5 * i + 3 * j + k / 3 == 100)) {\n                    System.out.println(\"公鸡\" + i + \"只，母鸡\" + j + \"只，小鸡\" + k + \"只\");\n                    isAns = true;\n                }\n            }\n        }\n        if (!isAns) {\n            System.out.println(\"问题无解！\");\n        }\n    }\n}\n```\n\n## 解法二：返回类型为二维数组\n```Java\npublic class Main {\n    public static int[][] f() {         //计算的函数，返回类型为二维数组\n        int k, row = 1;\n        int[][] ans = new int[20][3];\n        for (int i = 1; i < 20; i++) {          //i表示公鸡个数\n            for (int j = 1; j < 33; j++) {          //j表示母鸡个数\n                k = 100 - i - j;                    //k/3表示小鸡个数\n                if ((k % 3 == 0) && (5 * i + 3 * j + k / 3 == 100)) {\n                    ans[row][0] = i;\n                    ans[row][1] = j;\n                    ans[row][2] = k;\n                    row++;\n                }\n            }\n        }\n        ans[0][0] = row;\n        return ans;\n    }\n\n    public static void main(String[] args) {\n        int[][] ans = f();\n        for (int i = 1; i < ans[0][0]; i++) {\n            System.out.println(\"公鸡\" + ans[i][0] + \"只，母鸡\" + ans[i][1] + \"只，小鸡\" + ans[i][2] + \"只\");\n            System.out.println();\n        }\n        if (ans[0][0] == 0) {\n            System.out.println(\"本题无解！\");\n        }\n    }\n}\n```\n\n\n>运行结果\n```\n公鸡4只，母鸡18只，小鸡78只\n公鸡8只，母鸡11只，小鸡81只\n公鸡12只，母鸡4只，小鸡84只\n\nProcess finished with exit code 0\n```","source":"_posts/百鸡问题.md","raw":"---\ntitle: 百鸡问题\ndate: 2021-03-16 23:22:57\ntags: Java\n---\n\n# 百鸡问题：公鸡5¥/只，母鸡3¥/只，小鸡3只/¥，若100¥买100只鸡，问其中公鸡、母鸡、小鸡各多少？\n<!-- more -->\n## 解法一：直接计算\n```java\npublic class Main {\n    public static void main(String[] args) {\n        int k;\n        boolean isAns = false;\n        for (int i = 1; i < 20; i++) {          //i表示公鸡个数\n            for (int j = 1; j < 33; j++) {          //j表示母鸡个数\n                k = 100 - i - j;                    //k/3表示小鸡个数\n                if ((k % 3 == 0) && (5 * i + 3 * j + k / 3 == 100)) {\n                    System.out.println(\"公鸡\" + i + \"只，母鸡\" + j + \"只，小鸡\" + k + \"只\");\n                    isAns = true;\n                }\n            }\n        }\n        if (!isAns) {\n            System.out.println(\"问题无解！\");\n        }\n    }\n}\n```\n\n## 解法二：返回类型为二维数组\n```Java\npublic class Main {\n    public static int[][] f() {         //计算的函数，返回类型为二维数组\n        int k, row = 1;\n        int[][] ans = new int[20][3];\n        for (int i = 1; i < 20; i++) {          //i表示公鸡个数\n            for (int j = 1; j < 33; j++) {          //j表示母鸡个数\n                k = 100 - i - j;                    //k/3表示小鸡个数\n                if ((k % 3 == 0) && (5 * i + 3 * j + k / 3 == 100)) {\n                    ans[row][0] = i;\n                    ans[row][1] = j;\n                    ans[row][2] = k;\n                    row++;\n                }\n            }\n        }\n        ans[0][0] = row;\n        return ans;\n    }\n\n    public static void main(String[] args) {\n        int[][] ans = f();\n        for (int i = 1; i < ans[0][0]; i++) {\n            System.out.println(\"公鸡\" + ans[i][0] + \"只，母鸡\" + ans[i][1] + \"只，小鸡\" + ans[i][2] + \"只\");\n            System.out.println();\n        }\n        if (ans[0][0] == 0) {\n            System.out.println(\"本题无解！\");\n        }\n    }\n}\n```\n\n\n>运行结果\n```\n公鸡4只，母鸡18只，小鸡78只\n公鸡8只，母鸡11只，小鸡81只\n公鸡12只，母鸡4只，小鸡84只\n\nProcess finished with exit code 0\n```","slug":"百鸡问题","published":1,"updated":"2021-04-13T03:31:44.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckojvxerq001oboe2gnatcoa8","content":"<h1 id=\"百鸡问题：公鸡5¥-只，母鸡3¥-只，小鸡3只-¥，若100¥买100只鸡，问其中公鸡、母鸡、小鸡各多少？\"><a href=\"#百鸡问题：公鸡5¥-只，母鸡3¥-只，小鸡3只-¥，若100¥买100只鸡，问其中公鸡、母鸡、小鸡各多少？\" class=\"headerlink\" title=\"百鸡问题：公鸡5¥/只，母鸡3¥/只，小鸡3只/¥，若100¥买100只鸡，问其中公鸡、母鸡、小鸡各多少？\"></a>百鸡问题：公鸡5¥/只，母鸡3¥/只，小鸡3只/¥，若100¥买100只鸡，问其中公鸡、母鸡、小鸡各多少？</h1><span id=\"more\"></span>\n<h2 id=\"解法一：直接计算\"><a href=\"#解法一：直接计算\" class=\"headerlink\" title=\"解法一：直接计算\"></a>解法一：直接计算</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> k;</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> isAns = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">20</span>; i++) &#123;          <span class=\"comment\">//i表示公鸡个数</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt; <span class=\"number\">33</span>; j++) &#123;          <span class=\"comment\">//j表示母鸡个数</span></span><br><span class=\"line\">                k = <span class=\"number\">100</span> - i - j;                    <span class=\"comment\">//k/3表示小鸡个数</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> ((k % <span class=\"number\">3</span> == <span class=\"number\">0</span>) &amp;&amp; (<span class=\"number\">5</span> * i + <span class=\"number\">3</span> * j + k / <span class=\"number\">3</span> == <span class=\"number\">100</span>)) &#123;</span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;公鸡&quot;</span> + i + <span class=\"string\">&quot;只，母鸡&quot;</span> + j + <span class=\"string\">&quot;只，小鸡&quot;</span> + k + <span class=\"string\">&quot;只&quot;</span>);</span><br><span class=\"line\">                    isAns = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!isAns) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;问题无解！&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"解法二：返回类型为二维数组\"><a href=\"#解法二：返回类型为二维数组\" class=\"headerlink\" title=\"解法二：返回类型为二维数组\"></a>解法二：返回类型为二维数组</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span>[][] f() &#123;         <span class=\"comment\">//计算的函数，返回类型为二维数组</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> k, row = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[][] ans = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">20</span>][<span class=\"number\">3</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">20</span>; i++) &#123;          <span class=\"comment\">//i表示公鸡个数</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt; <span class=\"number\">33</span>; j++) &#123;          <span class=\"comment\">//j表示母鸡个数</span></span><br><span class=\"line\">                k = <span class=\"number\">100</span> - i - j;                    <span class=\"comment\">//k/3表示小鸡个数</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> ((k % <span class=\"number\">3</span> == <span class=\"number\">0</span>) &amp;&amp; (<span class=\"number\">5</span> * i + <span class=\"number\">3</span> * j + k / <span class=\"number\">3</span> == <span class=\"number\">100</span>)) &#123;</span><br><span class=\"line\">                    ans[row][<span class=\"number\">0</span>] = i;</span><br><span class=\"line\">                    ans[row][<span class=\"number\">1</span>] = j;</span><br><span class=\"line\">                    ans[row][<span class=\"number\">2</span>] = k;</span><br><span class=\"line\">                    row++;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ans[<span class=\"number\">0</span>][<span class=\"number\">0</span>] = row;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[][] ans = f();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; ans[<span class=\"number\">0</span>][<span class=\"number\">0</span>]; i++) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;公鸡&quot;</span> + ans[i][<span class=\"number\">0</span>] + <span class=\"string\">&quot;只，母鸡&quot;</span> + ans[i][<span class=\"number\">1</span>] + <span class=\"string\">&quot;只，小鸡&quot;</span> + ans[i][<span class=\"number\">2</span>] + <span class=\"string\">&quot;只&quot;</span>);</span><br><span class=\"line\">            System.out.println();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (ans[<span class=\"number\">0</span>][<span class=\"number\">0</span>] == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;本题无解！&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<blockquote>\n<p>运行结果</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">公鸡4只，母鸡18只，小鸡78只</span><br><span class=\"line\">公鸡8只，母鸡11只，小鸡81只</span><br><span class=\"line\">公鸡12只，母鸡4只，小鸡84只</span><br><span class=\"line\"></span><br><span class=\"line\">Process finished with exit code 0</span><br></pre></td></tr></table></figure><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","site":{"data":{}},"excerpt":"百鸡问题：公鸡5¥/只，母鸡3¥/只，小鸡3只/¥，若100¥买100只鸡，问其中公鸡、母鸡、小鸡各多少？\n解法一：直接计算\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\npublic class Main {\n    public static void main(String[] args) {\n        int k;\n        boolean isAns = false;\n        for (int i = 1; i < 20; i++) {          //i表示公鸡个数\n            for (int ","more":"<h2 id=\"解法一：直接计算\"><a href=\"#解法一：直接计算\" class=\"headerlink\" title=\"解法一：直接计算\"></a>解法一：直接计算</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> k;</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> isAns = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">20</span>; i++) &#123;          <span class=\"comment\">//i表示公鸡个数</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt; <span class=\"number\">33</span>; j++) &#123;          <span class=\"comment\">//j表示母鸡个数</span></span><br><span class=\"line\">                k = <span class=\"number\">100</span> - i - j;                    <span class=\"comment\">//k/3表示小鸡个数</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> ((k % <span class=\"number\">3</span> == <span class=\"number\">0</span>) &amp;&amp; (<span class=\"number\">5</span> * i + <span class=\"number\">3</span> * j + k / <span class=\"number\">3</span> == <span class=\"number\">100</span>)) &#123;</span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;公鸡&quot;</span> + i + <span class=\"string\">&quot;只，母鸡&quot;</span> + j + <span class=\"string\">&quot;只，小鸡&quot;</span> + k + <span class=\"string\">&quot;只&quot;</span>);</span><br><span class=\"line\">                    isAns = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!isAns) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;问题无解！&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"解法二：返回类型为二维数组\"><a href=\"#解法二：返回类型为二维数组\" class=\"headerlink\" title=\"解法二：返回类型为二维数组\"></a>解法二：返回类型为二维数组</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span>[][] f() &#123;         <span class=\"comment\">//计算的函数，返回类型为二维数组</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> k, row = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[][] ans = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">20</span>][<span class=\"number\">3</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">20</span>; i++) &#123;          <span class=\"comment\">//i表示公鸡个数</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt; <span class=\"number\">33</span>; j++) &#123;          <span class=\"comment\">//j表示母鸡个数</span></span><br><span class=\"line\">                k = <span class=\"number\">100</span> - i - j;                    <span class=\"comment\">//k/3表示小鸡个数</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> ((k % <span class=\"number\">3</span> == <span class=\"number\">0</span>) &amp;&amp; (<span class=\"number\">5</span> * i + <span class=\"number\">3</span> * j + k / <span class=\"number\">3</span> == <span class=\"number\">100</span>)) &#123;</span><br><span class=\"line\">                    ans[row][<span class=\"number\">0</span>] = i;</span><br><span class=\"line\">                    ans[row][<span class=\"number\">1</span>] = j;</span><br><span class=\"line\">                    ans[row][<span class=\"number\">2</span>] = k;</span><br><span class=\"line\">                    row++;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ans[<span class=\"number\">0</span>][<span class=\"number\">0</span>] = row;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[][] ans = f();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; ans[<span class=\"number\">0</span>][<span class=\"number\">0</span>]; i++) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;公鸡&quot;</span> + ans[i][<span class=\"number\">0</span>] + <span class=\"string\">&quot;只，母鸡&quot;</span> + ans[i][<span class=\"number\">1</span>] + <span class=\"string\">&quot;只，小鸡&quot;</span> + ans[i][<span class=\"number\">2</span>] + <span class=\"string\">&quot;只&quot;</span>);</span><br><span class=\"line\">            System.out.println();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (ans[<span class=\"number\">0</span>][<span class=\"number\">0</span>] == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;本题无解！&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<blockquote>\n<p>运行结果</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">公鸡4只，母鸡18只，小鸡78只</span><br><span class=\"line\">公鸡8只，母鸡11只，小鸡81只</span><br><span class=\"line\">公鸡12只，母鸡4只，小鸡84只</span><br><span class=\"line\"></span><br><span class=\"line\">Process finished with exit code 0</span><br></pre></td></tr></table></figure>"},{"title":"顺序表与链表","date":"2020-10-02T07:20:22.000Z","_content":"\n### 顺序表与链表\n\n\n1. Before-1\n    * 顺序表的创立\n    * 顺序表的随机初始化（头插法以及尾插法）\n    * 顺序表的定位\n    * 顺序表插入删除以及定位元素\n    * 求顺序表的交集与并集\n<!-- more -->\n```cpp\n#include <iostream>\n#define List_Size 100\nusing namespace std;\n\nstruct SqList{\n    int *elem;\n    int len;\n    int size;\n};\n\n//TODO List\n\nbool InitList(SqList &L);\n\nbool RandInitList(SqList &L,int n);\n\nbool ListInsert(SqList &L,int i,int e);\n\nbool PrintList(SqList L);\n\nbool DeletList(SqList &L,int n);\n\nint LocateElem(SqList L,int elem);\n\nint comp(const void*a,const void*b);\n\nbool IntersectionElem(SqList La,SqList Lb);\n\nSqList *MergeList(SqList La,SqList Lb);\n\n//TODO function\n\nbool InitList(SqList &L){\n    L.elem=(int *)malloc(List_Size*sizeof(int));\n    if (!L.elem){\n        exit(-2);\n    }\n    L.len = 0;\n    L.size = List_Size;\n    return 1;\n}\n\nbool RandInitList(SqList &L,int n){\n    if (n>=0&&n<List_Size&&InitList(L)==1){\n        for (int i = 0; i < n; ++i) {\n            L.elem[i] = rand()%100;\n        }\n        L.len = n;\n        return 1;\n    }\n    return 0;\n}\n\nbool ListInsert(SqList &L,int i,int e){\n    if (i<1||i>L.len + 1){\n        return 0;\n    }\n    if (L.len > L.size){\n        int *newbase = (int *)realloc(L.elem,(L.size+1)*sizeof(int));\n        if (!newbase)\n            exit(-2);\n        L.elem = newbase;\n        L.size += 1;\n    }\n    int *q=&(L.elem[i-1]);\n    for (int *p = &(L.elem[L.len - 1]); p>=q; --p) {\n        *(p+1) = *p;\n    }\n    *q = e;\n    ++L.len;\n    return 1;\n}\n\nbool PrintList(SqList L){\n    for (int i = 0; i < L.len; ++i) {\n        cout<<L.elem[i]<<\" \";\n    }\n    cout<<endl;\n}\n\nbool DeletList(SqList &L,int n){\n    if (n < 1||n>L.len){\n        return 0;\n    } else{\n        for (int i = n; i < L.len; ++i) {\n            L.elem[i-1] = L.elem[i];\n        }\n        L.len--;\n        return 1;\n    }\n}\n\nint LocateElem(SqList L,int elem){\n    for (int i = 0; i < L.len; ++i) {\n        if (L.elem[i] == elem){\n            return i+1;\n        }\n    }\n    return 0;\n}\n\nint comp(const void*a,const void*b){\n    return *(int*)a-*(int*)b;\n}\n\nSqList *MergeList(SqList La,SqList Lb){\n    SqList L;\n    InitList(L);\n    int i=0,j=0,k=0;\n    while ((i < La.len)&&(j < Lb.len)){\n        if (La.elem[i]<Lb.elem[j]){\n            L.elem[k] = La.elem[i];\n            i++;\n            k++;\n        } else{\n            L.elem[k] = Lb.elem[j];\n            j++;\n            k++;\n        }\n    }\n    if (i == La.len){\n        for (int l = j; l < Lb.len; ++l) {\n            L.elem[k++] = Lb.elem[l];\n        }\n    } else{\n        for (int l = i; l < La.len; ++l) {\n            L.elem[k++] = La.elem[l];\n        }\n    }\n    L.len = La.len + Lb.len;\n    return &L;\n}\n\nbool IntersectionElem(SqList La,SqList Lb){\n    int Min = min(La.len,Lb.len),flag= false;\n    if (Min == La.len){\n        for (int i = 0; i < La.len; ++i) {\n            for (int j = 0; j < Lb.len; ++j) {\n                if (La.elem[i] == Lb.elem[j]){\n                    if (flag){\n                        printf(\"%d \",La.elem[i]);\n                        break;\n                    } else{\n                        flag = true;\n                        printf(\"交集元素为：\\n\");\n                        printf(\"%d \",La.elem[i]);\n                        break;\n                    }\n                }\n            }\n        }\n    } else{\n        for (int i = 0; i < Lb.len; ++i) {\n            for (int j = 0; j < La.len; ++j) {\n                if (Lb.elem[i] == La.elem[j]){\n                    if (flag){\n                        printf(\"%d \",Lb.elem[i]);\n                        break;\n                    } else{\n                        flag = true;\n                        printf(\"交集元素为：\\n\");\n                        printf(\"%d \",Lb.elem[i]);\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    return flag;\n}\n\n//TODO Main Function\n\nint main() {\n    int n,oper,insert_loc,insert_elem,delet_loc,find_elem;\n    SqList La,Lb;\n    printf(\"开始初始化，输入元素个数：\\n\");\n    cin>>n;\n    if (RandInitList(La,n)&&(RandInitList(Lb,n))){\n        printf(\"随机初始化成功,list为：\\n\");\n        PrintList(La);\n        PrintList(Lb);\n    } else{\n        printf(\"初始化失败\\n\");\n    }\n    do {\n        printf(\"__________________\\n\"\n               \"输入操作：\\n\"\n               \"1:插入\\n\"\n               \"2:删除\\n\"\n               \"3:查找\\n\"\n               \"4:排序\\n\"\n               \"5:合并\\n\"\n               \"6:交集\\n\"\n               \"0:退出\\n\"\n               \"___________________\\n\");\n        scanf(\"%d\",&oper);\n        switch (oper) {\n            case 1:{\n                printf(\"输入插入的位置以及插入的元素：\");\n                scanf(\"%d %d\",&insert_loc,&insert_elem);\n                if (ListInsert(La,insert_loc,insert_elem)){\n                    printf(\"插入成功，list为：\\n\");\n                    PrintList(La);\n                } else{\n                    printf(\"插入失败\\n\");\n                }\n                break;\n            }\n            case 2:{\n                printf(\"请输入删除的位置：\\n\");\n                scanf(\"%d\",&delet_loc);\n                if (DeletList(La,delet_loc)){\n                    printf(\"删除成功，删除后的list为：\\n\");\n                    PrintList(La);\n                } else{\n                    printf(\"删除失败\\n\");\n                }\n                break;\n            }\n            case 3:{\n                printf(\"请输入要查找的元素：\\n\");\n                scanf(\"%d\",&find_elem);\n                if (int i=LocateElem(La,find_elem)){\n                    printf(\"查找成功，位置为：%d\\n\",i);\n                } else{\n                    printf(\"查找失败\\n\");\n                }\n                break;\n            }\n            case 4:{\n                qsort(La.elem,La.len,sizeof(int),comp);\n                qsort(Lb.elem,Lb.len,sizeof(int),comp);\n                printf(\"排序完成\\n\");\n                PrintList(La);\n                PrintList(Lb);\n                break;\n            }\n            case 5:{\n                qsort(La.elem,La.len,sizeof(int),comp);\n                qsort(Lb.elem,Lb.len,sizeof(int),comp);\n                printf(\"排序完成\\n\");\n                SqList *pL=MergeList(La,Lb);\n                printf(\"合并完成，list为：\\n\");\n                PrintList(*pL);\n                break;\n            }\n            case 6:{\n                if (IntersectionElem(La,Lb)){\n                    printf(\"\\n\");\n                } else{\n                    printf(\"无交集元素\\n\");\n                }\n                break;\n            }\n            case 0:{\n                exit(0);\n            }\n            default:{\n                printf(\"无此操作\\n\");\n                break;\n            }\n        }\n    }while (oper != 0);\n    return 0;\n}\n```\n\n2. Before-2\n    * 头插法创建链表\n    * 尾插法创建链表\n    * 链表合并\n\n```cpp\n#include <iostream>\n\nusing namespace std;\n\ntypedef struct node{\n    int data;\n    node *next;\n}*LinkList;\n\ntypedef struct DuList{\n    int data;\n    DuList *prior;\n    DuList *next;\n}*DLinkList;\n\nvoid CreatDuList(DLinkList &L,int n){\n    DLinkList p,q;\n    L = new (DuList);\n    L->next = NULL;\n    L->prior = NULL;\n    q = L;\n    for (int i = 0; i < n; ++i) {\n        p = *new (DLinkList);\n        p->data = rand()%100;\n        p->prior = q;\n        q->next = p;\n        q = p;\n    }\n}\n\nvoid PrintDuList1(DLinkList L){\n    DLinkList p = L;\n    while (p != L){\n        cout<<p->data<<\" \";\n        p = p->next;\n    }\n    cout<<endl;\n}\n\nvoid PrintDuList2(DLinkList L){\n    DLinkList p = L;\n    while (p != L){\n        cout<<p->data<<\" \";\n        p = p->prior;\n    }\n    cout<<endl;\n}\n\nvoid DuInsert(DLinkList &L,int i){\n    int cnt = 0;\n    DLinkList p,q;\n    q = L;\n    p = (DLinkList) malloc(sizeof(DLinkList));\n    while (q&&(cnt<i)){\n        q = q->next;\n        cnt++;\n    }\n    p->prior = q->prior;\n    q->prior->next = p;\n    q->prior = p;\n    p->next = q;\n}\n\nvoid CreatListHead(LinkList &L,int n){\n    LinkList p;\n    L = new (node);\n    L->next = NULL;\n    for (int i = 0; i < n; ++i) {\n        p = (LinkList) malloc(sizeof(node));\n        p->data = rand()%100;\n        p->next = L->next;\n        L->next = p;\n    }\n}\n\nvoid CreatListTail(LinkList &L,int n){\n    LinkList p,q;\n    L = new (node);\n    q =L;\n    for (int i = 0; i < n; ++i) {\n        p = new (node);\n        p->data = rand()%100;\n        q->next = p;\n        q = p;\n    }\n    q->next =NULL;\n}\n\nvoid Insert(LinkList &L,int i,int e){\n    int cnt=0;\n    LinkList p,q;\n    p = L;\n    q = new (node);\n    while (p&&(cnt < i-1)){\n        cnt++;\n        p = p->next;\n    }\n    q->next = p->next;\n    q->data = e;\n    p->next = q;\n}\n\nvoid Delet(LinkList &L,int i){\n    int cnt=0;\n    LinkList p;\n    p = L;\n    while (p&&(cnt < i-1)){\n        cnt++;\n        p = p->next;\n    }\n    p->next = (*(p->next)).next;\n}\n\nvoid PrintList(LinkList L){\n    int sum=0;\n    for (LinkList p=L->next;p != NULL;p = p->next){\n        cout<<p->data<<\" \";\n\n        sum++;\n    }\n    cout<<endl<<sum<<endl;\n}\n\nvoid MergeList(LinkList &L1,LinkList &L2,LinkList &L3){\n    int i=0;\n    LinkList p1,p2;\n    L3 = new (node);\n    p1 = L1;p2 = L2;\n    while (p1&&p2){\n        if (p1->data < p2->data) {\n            Insert(L3, i, p1->data);\n            p1 = p1->next;\n        } else {\n            Insert(L3, i, p2->data);\n            p2 = p2->next;\n        }\n        i++;\n    }\n}\n\nint main()\n{\n    int n;\n    LinkList L1,L2,L3;\n    L3 = new (node);\n    cin>>n;\n    CreatListHead(L1,n);\n//    CreatListTail(L2,n);\n    PrintList(L1);\n    CreatListTail(L2,n);\n    PrintList(L2);\n    Insert(L1,2,3);\n    PrintList(L1);\n    Delet(L1,2);\n    PrintList(L1);\n    PrintList(L3);\n    MergeList(L1,L2,L3);\n    PrintList(L3);\n//    int n;\n//    cin>>n;\n//    DLinkList L1,L2;\n//    CreatDuList(L1,n);\n//    PrintDuList1(L1);\n//    PrintDuList2(L1);\n}\n```\n\n*****\n\n### 10.2上机作业：\n\n```cpp\n#include <iostream>\n\nusing namespace std;\n\ntypedef struct node         //单链表\n{\n    int data;\n    struct node *next;\n} *NodeList;\n\ntypedef struct SqList {     //顺序表\n    int *elem;\n    int len;\n    int size;\n};\n\n\nNodeList *createEnd(NodeList &head,int len)         //单链表创立尾插法\n{\n    head = (node *)malloc(sizeof(NodeList));\n    head->next = NULL;\n    NodeList end = head;\n    for (int i = 0; i < len; i++) {\n        NodeList p = (NodeList)malloc(sizeof(node));\n        p->data= rand()%100;\n        end->next = p;\n        end = p;\n    }\n    end->next = NULL;\n}\n\nvoid Print(NodeList head)                   //单链表输出\n{\n    int i = 0;\n    if (head == NULL)\n        return;\n    NodeList p = head->next;\n    while (p != NULL) {\n        printf(\"%4d\",p->data);\n        p = p->next;\n        if ((i+1)%5 == 0){\n            cout<<endl;\n        }\n        i++;\n    }\n    cout<<endl;\n}\n\nvoid DeletElem(NodeList &head,SqList &T)        //单链表删除\n{\n    int i = 0,j = 0;\n    NodeList p,q,temp;\n    NodeList s = head;\n    T.size = 1000;\n    T.elem = (int*)malloc(T.size * sizeof(int));\n    T.len = 0;\n    p = s->next;\n    while(p != NULL)\n    {\n        q = p;\n        while(q->next != NULL)\n        {\n            if(q->next->data == p->data)\n            {\n                temp = q->next;\n                q->next = q->next->next;\n                T.elem[T.len++] = p->data+(i+j+1)*100;\n                free(temp);\n            }\n            q = q->next;\n            j++;\n        }\n        j = 0;\n        i++;\n        p = p->next;\n    }\n}\n\nvoid CreatList(SqList &L,int n){            //顺序表创建\n    L.elem  = (int*)malloc(n*sizeof(int));\n    for (int i = 0; i < n; ++i) {\n        L.elem[i] = rand()%100;\n    }\n    L.len = n;\n}\n\nvoid PrintList(SqList L){                   //顺序表输出\n    for (int i = 0; i < L.len; ++i) {\n        printf(\"%4d\",L.elem[i]);\n        if ((i+1)%5 == 0){\n            cout<<endl;\n        }\n    }\n    cout<<endl;\n}\n\nvoid DeletElem(SqList &L,SqList &T){        //顺序表删除\n    T.len = 0;\n    T.elem = (int *)malloc(L.len * sizeof(int ));\n    for (int i = 0; i <L.len; ++i) {\n        for (int j = i+1; j < L.len; ++j) {\n            if (L.elem[j] == L.elem[i]){\n                for (int k = j; k < L.len - 1; ++k) {\n                    L.elem[k] = L.elem[k+1];\n                }\n                T.elem[T.len++] = L.elem[i]+j*100;\n                L.len--;\n            }\n        }\n    }\n}\n\nvoid ReverseLink(NodeList &Head)          //单链表倒置\n{\n    int flag=0;\n    if (Head == NULL)\n    {\n        return;\n    }\n    NodeList pNode = Head->next;\n    NodeList Prev = NULL;\n    NodeList pNext = NULL;\n    while (pNode != NULL){\n        pNext = pNode->next;\n        if (pNext == NULL){\n            Head = pNode;\n        }\n\n        pNode->next = Prev;\n        Prev = pNode;\n        pNode = pNext;\n\n    }\n    NodeList p = (NodeList)malloc(sizeof(int));\n    p->next = Head;\n    Head = p;\n}\n\nint main()\n{\n    int n,*a;\n    SqList T;\n    cin>>n;\n    //TODO:删除顺序表中的重复元素\n    SqList L;\n    CreatList(L,n);\n    cout<<\"顺序表创建完成:\"<<endl;\n    PrintList(L);\n    DeletElem(L,T);\n    cout<<\"顺序表删除完成:\"<<endl;\n    PrintList(L);\n    if (T.len != 0){\n        cout<<\"删除的元素为:\"<<endl;\n        for (int i = 0; i < T.len; ++i) {\n            cout<<\"原位置为:\"<<T.elem[i]/100+1<<\"->\"<<T.elem[i]%100<<\" \";\n            cout<<endl;\n        }\n    } else{\n        cout<<\"无重复元素\"<<endl;\n    }\n    //TODO:删除链表中的重复元素\n    NodeList head;\n    createEnd(head,n);\n    cout<<\"单链表创建完成:\"<<endl;\n    Print(head);\n    DeletElem(head,T);\n    cout<<\"单链表删除完成:\"<<endl;\n    Print(head);\n    if (T.len != 0){\n        cout<<\"删除的元素为:\"<<endl;\n        for (int i = 0; i < T.len; ++i) {\n            cout<<\"原位置为:\"<<T.elem[i]/100+1<<\"->\"<<T.elem[i]%100<<\" \";\n            cout<<endl;\n        }\n    } else{\n        cout<<\"无重复元素\"<<endl;\n    }\n    //TODO:单链表的逆置\n    ReverseLink(head);\n    cout<<\"单链表逆置完成:\"<<endl;\n    Print(head);\n}\n```\n\n1.  * 顺序表中删除重复元素\n    * 单链表中删除重复元素\n1. 单链表的逆置\n\n<center><img src=\"https://s3.ax1x.com/2021/03/13/6wdloq.png\" width=\"50%\"></center>\n","source":"_posts/顺序表与链表.md","raw":"---\ntitle: 顺序表与链表\ndate: 2020-10-02 15:20:22\ntags: \n- 数据结构\n- C++\n---\n\n### 顺序表与链表\n\n\n1. Before-1\n    * 顺序表的创立\n    * 顺序表的随机初始化（头插法以及尾插法）\n    * 顺序表的定位\n    * 顺序表插入删除以及定位元素\n    * 求顺序表的交集与并集\n<!-- more -->\n```cpp\n#include <iostream>\n#define List_Size 100\nusing namespace std;\n\nstruct SqList{\n    int *elem;\n    int len;\n    int size;\n};\n\n//TODO List\n\nbool InitList(SqList &L);\n\nbool RandInitList(SqList &L,int n);\n\nbool ListInsert(SqList &L,int i,int e);\n\nbool PrintList(SqList L);\n\nbool DeletList(SqList &L,int n);\n\nint LocateElem(SqList L,int elem);\n\nint comp(const void*a,const void*b);\n\nbool IntersectionElem(SqList La,SqList Lb);\n\nSqList *MergeList(SqList La,SqList Lb);\n\n//TODO function\n\nbool InitList(SqList &L){\n    L.elem=(int *)malloc(List_Size*sizeof(int));\n    if (!L.elem){\n        exit(-2);\n    }\n    L.len = 0;\n    L.size = List_Size;\n    return 1;\n}\n\nbool RandInitList(SqList &L,int n){\n    if (n>=0&&n<List_Size&&InitList(L)==1){\n        for (int i = 0; i < n; ++i) {\n            L.elem[i] = rand()%100;\n        }\n        L.len = n;\n        return 1;\n    }\n    return 0;\n}\n\nbool ListInsert(SqList &L,int i,int e){\n    if (i<1||i>L.len + 1){\n        return 0;\n    }\n    if (L.len > L.size){\n        int *newbase = (int *)realloc(L.elem,(L.size+1)*sizeof(int));\n        if (!newbase)\n            exit(-2);\n        L.elem = newbase;\n        L.size += 1;\n    }\n    int *q=&(L.elem[i-1]);\n    for (int *p = &(L.elem[L.len - 1]); p>=q; --p) {\n        *(p+1) = *p;\n    }\n    *q = e;\n    ++L.len;\n    return 1;\n}\n\nbool PrintList(SqList L){\n    for (int i = 0; i < L.len; ++i) {\n        cout<<L.elem[i]<<\" \";\n    }\n    cout<<endl;\n}\n\nbool DeletList(SqList &L,int n){\n    if (n < 1||n>L.len){\n        return 0;\n    } else{\n        for (int i = n; i < L.len; ++i) {\n            L.elem[i-1] = L.elem[i];\n        }\n        L.len--;\n        return 1;\n    }\n}\n\nint LocateElem(SqList L,int elem){\n    for (int i = 0; i < L.len; ++i) {\n        if (L.elem[i] == elem){\n            return i+1;\n        }\n    }\n    return 0;\n}\n\nint comp(const void*a,const void*b){\n    return *(int*)a-*(int*)b;\n}\n\nSqList *MergeList(SqList La,SqList Lb){\n    SqList L;\n    InitList(L);\n    int i=0,j=0,k=0;\n    while ((i < La.len)&&(j < Lb.len)){\n        if (La.elem[i]<Lb.elem[j]){\n            L.elem[k] = La.elem[i];\n            i++;\n            k++;\n        } else{\n            L.elem[k] = Lb.elem[j];\n            j++;\n            k++;\n        }\n    }\n    if (i == La.len){\n        for (int l = j; l < Lb.len; ++l) {\n            L.elem[k++] = Lb.elem[l];\n        }\n    } else{\n        for (int l = i; l < La.len; ++l) {\n            L.elem[k++] = La.elem[l];\n        }\n    }\n    L.len = La.len + Lb.len;\n    return &L;\n}\n\nbool IntersectionElem(SqList La,SqList Lb){\n    int Min = min(La.len,Lb.len),flag= false;\n    if (Min == La.len){\n        for (int i = 0; i < La.len; ++i) {\n            for (int j = 0; j < Lb.len; ++j) {\n                if (La.elem[i] == Lb.elem[j]){\n                    if (flag){\n                        printf(\"%d \",La.elem[i]);\n                        break;\n                    } else{\n                        flag = true;\n                        printf(\"交集元素为：\\n\");\n                        printf(\"%d \",La.elem[i]);\n                        break;\n                    }\n                }\n            }\n        }\n    } else{\n        for (int i = 0; i < Lb.len; ++i) {\n            for (int j = 0; j < La.len; ++j) {\n                if (Lb.elem[i] == La.elem[j]){\n                    if (flag){\n                        printf(\"%d \",Lb.elem[i]);\n                        break;\n                    } else{\n                        flag = true;\n                        printf(\"交集元素为：\\n\");\n                        printf(\"%d \",Lb.elem[i]);\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    return flag;\n}\n\n//TODO Main Function\n\nint main() {\n    int n,oper,insert_loc,insert_elem,delet_loc,find_elem;\n    SqList La,Lb;\n    printf(\"开始初始化，输入元素个数：\\n\");\n    cin>>n;\n    if (RandInitList(La,n)&&(RandInitList(Lb,n))){\n        printf(\"随机初始化成功,list为：\\n\");\n        PrintList(La);\n        PrintList(Lb);\n    } else{\n        printf(\"初始化失败\\n\");\n    }\n    do {\n        printf(\"__________________\\n\"\n               \"输入操作：\\n\"\n               \"1:插入\\n\"\n               \"2:删除\\n\"\n               \"3:查找\\n\"\n               \"4:排序\\n\"\n               \"5:合并\\n\"\n               \"6:交集\\n\"\n               \"0:退出\\n\"\n               \"___________________\\n\");\n        scanf(\"%d\",&oper);\n        switch (oper) {\n            case 1:{\n                printf(\"输入插入的位置以及插入的元素：\");\n                scanf(\"%d %d\",&insert_loc,&insert_elem);\n                if (ListInsert(La,insert_loc,insert_elem)){\n                    printf(\"插入成功，list为：\\n\");\n                    PrintList(La);\n                } else{\n                    printf(\"插入失败\\n\");\n                }\n                break;\n            }\n            case 2:{\n                printf(\"请输入删除的位置：\\n\");\n                scanf(\"%d\",&delet_loc);\n                if (DeletList(La,delet_loc)){\n                    printf(\"删除成功，删除后的list为：\\n\");\n                    PrintList(La);\n                } else{\n                    printf(\"删除失败\\n\");\n                }\n                break;\n            }\n            case 3:{\n                printf(\"请输入要查找的元素：\\n\");\n                scanf(\"%d\",&find_elem);\n                if (int i=LocateElem(La,find_elem)){\n                    printf(\"查找成功，位置为：%d\\n\",i);\n                } else{\n                    printf(\"查找失败\\n\");\n                }\n                break;\n            }\n            case 4:{\n                qsort(La.elem,La.len,sizeof(int),comp);\n                qsort(Lb.elem,Lb.len,sizeof(int),comp);\n                printf(\"排序完成\\n\");\n                PrintList(La);\n                PrintList(Lb);\n                break;\n            }\n            case 5:{\n                qsort(La.elem,La.len,sizeof(int),comp);\n                qsort(Lb.elem,Lb.len,sizeof(int),comp);\n                printf(\"排序完成\\n\");\n                SqList *pL=MergeList(La,Lb);\n                printf(\"合并完成，list为：\\n\");\n                PrintList(*pL);\n                break;\n            }\n            case 6:{\n                if (IntersectionElem(La,Lb)){\n                    printf(\"\\n\");\n                } else{\n                    printf(\"无交集元素\\n\");\n                }\n                break;\n            }\n            case 0:{\n                exit(0);\n            }\n            default:{\n                printf(\"无此操作\\n\");\n                break;\n            }\n        }\n    }while (oper != 0);\n    return 0;\n}\n```\n\n2. Before-2\n    * 头插法创建链表\n    * 尾插法创建链表\n    * 链表合并\n\n```cpp\n#include <iostream>\n\nusing namespace std;\n\ntypedef struct node{\n    int data;\n    node *next;\n}*LinkList;\n\ntypedef struct DuList{\n    int data;\n    DuList *prior;\n    DuList *next;\n}*DLinkList;\n\nvoid CreatDuList(DLinkList &L,int n){\n    DLinkList p,q;\n    L = new (DuList);\n    L->next = NULL;\n    L->prior = NULL;\n    q = L;\n    for (int i = 0; i < n; ++i) {\n        p = *new (DLinkList);\n        p->data = rand()%100;\n        p->prior = q;\n        q->next = p;\n        q = p;\n    }\n}\n\nvoid PrintDuList1(DLinkList L){\n    DLinkList p = L;\n    while (p != L){\n        cout<<p->data<<\" \";\n        p = p->next;\n    }\n    cout<<endl;\n}\n\nvoid PrintDuList2(DLinkList L){\n    DLinkList p = L;\n    while (p != L){\n        cout<<p->data<<\" \";\n        p = p->prior;\n    }\n    cout<<endl;\n}\n\nvoid DuInsert(DLinkList &L,int i){\n    int cnt = 0;\n    DLinkList p,q;\n    q = L;\n    p = (DLinkList) malloc(sizeof(DLinkList));\n    while (q&&(cnt<i)){\n        q = q->next;\n        cnt++;\n    }\n    p->prior = q->prior;\n    q->prior->next = p;\n    q->prior = p;\n    p->next = q;\n}\n\nvoid CreatListHead(LinkList &L,int n){\n    LinkList p;\n    L = new (node);\n    L->next = NULL;\n    for (int i = 0; i < n; ++i) {\n        p = (LinkList) malloc(sizeof(node));\n        p->data = rand()%100;\n        p->next = L->next;\n        L->next = p;\n    }\n}\n\nvoid CreatListTail(LinkList &L,int n){\n    LinkList p,q;\n    L = new (node);\n    q =L;\n    for (int i = 0; i < n; ++i) {\n        p = new (node);\n        p->data = rand()%100;\n        q->next = p;\n        q = p;\n    }\n    q->next =NULL;\n}\n\nvoid Insert(LinkList &L,int i,int e){\n    int cnt=0;\n    LinkList p,q;\n    p = L;\n    q = new (node);\n    while (p&&(cnt < i-1)){\n        cnt++;\n        p = p->next;\n    }\n    q->next = p->next;\n    q->data = e;\n    p->next = q;\n}\n\nvoid Delet(LinkList &L,int i){\n    int cnt=0;\n    LinkList p;\n    p = L;\n    while (p&&(cnt < i-1)){\n        cnt++;\n        p = p->next;\n    }\n    p->next = (*(p->next)).next;\n}\n\nvoid PrintList(LinkList L){\n    int sum=0;\n    for (LinkList p=L->next;p != NULL;p = p->next){\n        cout<<p->data<<\" \";\n\n        sum++;\n    }\n    cout<<endl<<sum<<endl;\n}\n\nvoid MergeList(LinkList &L1,LinkList &L2,LinkList &L3){\n    int i=0;\n    LinkList p1,p2;\n    L3 = new (node);\n    p1 = L1;p2 = L2;\n    while (p1&&p2){\n        if (p1->data < p2->data) {\n            Insert(L3, i, p1->data);\n            p1 = p1->next;\n        } else {\n            Insert(L3, i, p2->data);\n            p2 = p2->next;\n        }\n        i++;\n    }\n}\n\nint main()\n{\n    int n;\n    LinkList L1,L2,L3;\n    L3 = new (node);\n    cin>>n;\n    CreatListHead(L1,n);\n//    CreatListTail(L2,n);\n    PrintList(L1);\n    CreatListTail(L2,n);\n    PrintList(L2);\n    Insert(L1,2,3);\n    PrintList(L1);\n    Delet(L1,2);\n    PrintList(L1);\n    PrintList(L3);\n    MergeList(L1,L2,L3);\n    PrintList(L3);\n//    int n;\n//    cin>>n;\n//    DLinkList L1,L2;\n//    CreatDuList(L1,n);\n//    PrintDuList1(L1);\n//    PrintDuList2(L1);\n}\n```\n\n*****\n\n### 10.2上机作业：\n\n```cpp\n#include <iostream>\n\nusing namespace std;\n\ntypedef struct node         //单链表\n{\n    int data;\n    struct node *next;\n} *NodeList;\n\ntypedef struct SqList {     //顺序表\n    int *elem;\n    int len;\n    int size;\n};\n\n\nNodeList *createEnd(NodeList &head,int len)         //单链表创立尾插法\n{\n    head = (node *)malloc(sizeof(NodeList));\n    head->next = NULL;\n    NodeList end = head;\n    for (int i = 0; i < len; i++) {\n        NodeList p = (NodeList)malloc(sizeof(node));\n        p->data= rand()%100;\n        end->next = p;\n        end = p;\n    }\n    end->next = NULL;\n}\n\nvoid Print(NodeList head)                   //单链表输出\n{\n    int i = 0;\n    if (head == NULL)\n        return;\n    NodeList p = head->next;\n    while (p != NULL) {\n        printf(\"%4d\",p->data);\n        p = p->next;\n        if ((i+1)%5 == 0){\n            cout<<endl;\n        }\n        i++;\n    }\n    cout<<endl;\n}\n\nvoid DeletElem(NodeList &head,SqList &T)        //单链表删除\n{\n    int i = 0,j = 0;\n    NodeList p,q,temp;\n    NodeList s = head;\n    T.size = 1000;\n    T.elem = (int*)malloc(T.size * sizeof(int));\n    T.len = 0;\n    p = s->next;\n    while(p != NULL)\n    {\n        q = p;\n        while(q->next != NULL)\n        {\n            if(q->next->data == p->data)\n            {\n                temp = q->next;\n                q->next = q->next->next;\n                T.elem[T.len++] = p->data+(i+j+1)*100;\n                free(temp);\n            }\n            q = q->next;\n            j++;\n        }\n        j = 0;\n        i++;\n        p = p->next;\n    }\n}\n\nvoid CreatList(SqList &L,int n){            //顺序表创建\n    L.elem  = (int*)malloc(n*sizeof(int));\n    for (int i = 0; i < n; ++i) {\n        L.elem[i] = rand()%100;\n    }\n    L.len = n;\n}\n\nvoid PrintList(SqList L){                   //顺序表输出\n    for (int i = 0; i < L.len; ++i) {\n        printf(\"%4d\",L.elem[i]);\n        if ((i+1)%5 == 0){\n            cout<<endl;\n        }\n    }\n    cout<<endl;\n}\n\nvoid DeletElem(SqList &L,SqList &T){        //顺序表删除\n    T.len = 0;\n    T.elem = (int *)malloc(L.len * sizeof(int ));\n    for (int i = 0; i <L.len; ++i) {\n        for (int j = i+1; j < L.len; ++j) {\n            if (L.elem[j] == L.elem[i]){\n                for (int k = j; k < L.len - 1; ++k) {\n                    L.elem[k] = L.elem[k+1];\n                }\n                T.elem[T.len++] = L.elem[i]+j*100;\n                L.len--;\n            }\n        }\n    }\n}\n\nvoid ReverseLink(NodeList &Head)          //单链表倒置\n{\n    int flag=0;\n    if (Head == NULL)\n    {\n        return;\n    }\n    NodeList pNode = Head->next;\n    NodeList Prev = NULL;\n    NodeList pNext = NULL;\n    while (pNode != NULL){\n        pNext = pNode->next;\n        if (pNext == NULL){\n            Head = pNode;\n        }\n\n        pNode->next = Prev;\n        Prev = pNode;\n        pNode = pNext;\n\n    }\n    NodeList p = (NodeList)malloc(sizeof(int));\n    p->next = Head;\n    Head = p;\n}\n\nint main()\n{\n    int n,*a;\n    SqList T;\n    cin>>n;\n    //TODO:删除顺序表中的重复元素\n    SqList L;\n    CreatList(L,n);\n    cout<<\"顺序表创建完成:\"<<endl;\n    PrintList(L);\n    DeletElem(L,T);\n    cout<<\"顺序表删除完成:\"<<endl;\n    PrintList(L);\n    if (T.len != 0){\n        cout<<\"删除的元素为:\"<<endl;\n        for (int i = 0; i < T.len; ++i) {\n            cout<<\"原位置为:\"<<T.elem[i]/100+1<<\"->\"<<T.elem[i]%100<<\" \";\n            cout<<endl;\n        }\n    } else{\n        cout<<\"无重复元素\"<<endl;\n    }\n    //TODO:删除链表中的重复元素\n    NodeList head;\n    createEnd(head,n);\n    cout<<\"单链表创建完成:\"<<endl;\n    Print(head);\n    DeletElem(head,T);\n    cout<<\"单链表删除完成:\"<<endl;\n    Print(head);\n    if (T.len != 0){\n        cout<<\"删除的元素为:\"<<endl;\n        for (int i = 0; i < T.len; ++i) {\n            cout<<\"原位置为:\"<<T.elem[i]/100+1<<\"->\"<<T.elem[i]%100<<\" \";\n            cout<<endl;\n        }\n    } else{\n        cout<<\"无重复元素\"<<endl;\n    }\n    //TODO:单链表的逆置\n    ReverseLink(head);\n    cout<<\"单链表逆置完成:\"<<endl;\n    Print(head);\n}\n```\n\n1.  * 顺序表中删除重复元素\n    * 单链表中删除重复元素\n1. 单链表的逆置\n\n<center><img src=\"https://s3.ax1x.com/2021/03/13/6wdloq.png\" width=\"50%\"></center>\n","slug":"顺序表与链表","published":1,"updated":"2021-04-13T12:54:06.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckojvxerr001qboe2cpko2aq3","content":"<h3 id=\"顺序表与链表\"><a href=\"#顺序表与链表\" class=\"headerlink\" title=\"顺序表与链表\"></a>顺序表与链表</h3><ol>\n<li><p>Before-1</p>\n<ul>\n<li>顺序表的创立</li>\n<li>顺序表的随机初始化（头插法以及尾插法）</li>\n<li>顺序表的定位</li>\n<li>顺序表插入删除以及定位元素</li>\n<li>求顺序表的交集与并集<span id=\"more\"></span>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> List_Size 100</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">SqList</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> *elem;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> len;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> size;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//TODO List</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">InitList</span><span class=\"params\">(SqList &amp;L)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">RandInitList</span><span class=\"params\">(SqList &amp;L,<span class=\"keyword\">int</span> n)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">ListInsert</span><span class=\"params\">(SqList &amp;L,<span class=\"keyword\">int</span> i,<span class=\"keyword\">int</span> e)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">PrintList</span><span class=\"params\">(SqList L)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">DeletList</span><span class=\"params\">(SqList &amp;L,<span class=\"keyword\">int</span> n)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">LocateElem</span><span class=\"params\">(SqList L,<span class=\"keyword\">int</span> elem)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">comp</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">void</span>*a,<span class=\"keyword\">const</span> <span class=\"keyword\">void</span>*b)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">IntersectionElem</span><span class=\"params\">(SqList La,SqList Lb)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">SqList *<span class=\"title\">MergeList</span><span class=\"params\">(SqList La,SqList Lb)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//TODO function</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">InitList</span><span class=\"params\">(SqList &amp;L)</span></span>&#123;</span><br><span class=\"line\">    L.elem=(<span class=\"keyword\">int</span> *)<span class=\"built_in\">malloc</span>(List_Size*<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>));</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!L.elem)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">exit</span>(<span class=\"number\">-2</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    L.len = <span class=\"number\">0</span>;</span><br><span class=\"line\">    L.size = List_Size;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">RandInitList</span><span class=\"params\">(SqList &amp;L,<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n&gt;=<span class=\"number\">0</span>&amp;&amp;n&lt;List_Size&amp;&amp;InitList(L)==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; ++i) &#123;</span><br><span class=\"line\">            L.elem[i] = rand()%<span class=\"number\">100</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        L.len = n;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">ListInsert</span><span class=\"params\">(SqList &amp;L,<span class=\"keyword\">int</span> i,<span class=\"keyword\">int</span> e)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i&lt;<span class=\"number\">1</span>||i&gt;L.len + <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (L.len &gt; L.size)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> *newbase = (<span class=\"keyword\">int</span> *)<span class=\"built_in\">realloc</span>(L.elem,(L.size+<span class=\"number\">1</span>)*<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>));</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!newbase)</span><br><span class=\"line\">            <span class=\"built_in\">exit</span>(<span class=\"number\">-2</span>);</span><br><span class=\"line\">        L.elem = newbase;</span><br><span class=\"line\">        L.size += <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> *q=&amp;(L.elem[i<span class=\"number\">-1</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> *p = &amp;(L.elem[L.len - <span class=\"number\">1</span>]); p&gt;=q; --p) &#123;</span><br><span class=\"line\">        *(p+<span class=\"number\">1</span>) = *p;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    *q = e;</span><br><span class=\"line\">    ++L.len;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">PrintList</span><span class=\"params\">(SqList L)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; L.len; ++i) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;L.elem[i]&lt;&lt;<span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">DeletList</span><span class=\"params\">(SqList &amp;L,<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n &lt; <span class=\"number\">1</span>||n&gt;L.len)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = n; i &lt; L.len; ++i) &#123;</span><br><span class=\"line\">            L.elem[i<span class=\"number\">-1</span>] = L.elem[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        L.len--;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">LocateElem</span><span class=\"params\">(SqList L,<span class=\"keyword\">int</span> elem)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; L.len; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (L.elem[i] == elem)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> i+<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">comp</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">void</span>*a,<span class=\"keyword\">const</span> <span class=\"keyword\">void</span>*b)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> *(<span class=\"keyword\">int</span>*)a-*(<span class=\"keyword\">int</span>*)b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">SqList *<span class=\"title\">MergeList</span><span class=\"params\">(SqList La,SqList Lb)</span></span>&#123;</span><br><span class=\"line\">    SqList L;</span><br><span class=\"line\">    InitList(L);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>,j=<span class=\"number\">0</span>,k=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> ((i &lt; La.len)&amp;&amp;(j &lt; Lb.len))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (La.elem[i]&lt;Lb.elem[j])&#123;</span><br><span class=\"line\">            L.elem[k] = La.elem[i];</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">            k++;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            L.elem[k] = Lb.elem[j];</span><br><span class=\"line\">            j++;</span><br><span class=\"line\">            k++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i == La.len)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> l = j; l &lt; Lb.len; ++l) &#123;</span><br><span class=\"line\">            L.elem[k++] = Lb.elem[l];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> l = i; l &lt; La.len; ++l) &#123;</span><br><span class=\"line\">            L.elem[k++] = La.elem[l];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    L.len = La.len + Lb.len;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &amp;L;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">IntersectionElem</span><span class=\"params\">(SqList La,SqList Lb)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> Min = min(La.len,Lb.len),flag= <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (Min == La.len)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; La.len; ++i) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; Lb.len; ++j) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (La.elem[i] == Lb.elem[j])&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (flag)&#123;</span><br><span class=\"line\">                        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>,La.elem[i]);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                        flag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;交集元素为：\\n&quot;</span>);</span><br><span class=\"line\">                        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>,La.elem[i]);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; Lb.len; ++i) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; La.len; ++j) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (Lb.elem[i] == La.elem[j])&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (flag)&#123;</span><br><span class=\"line\">                        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>,Lb.elem[i]);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                        flag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;交集元素为：\\n&quot;</span>);</span><br><span class=\"line\">                        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>,Lb.elem[i]);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> flag;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//TODO Main Function</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,oper,insert_loc,insert_elem,delet_loc,find_elem;</span><br><span class=\"line\">    SqList La,Lb;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;开始初始化，输入元素个数：\\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (RandInitList(La,n)&amp;&amp;(RandInitList(Lb,n)))&#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;随机初始化成功,list为：\\n&quot;</span>);</span><br><span class=\"line\">        PrintList(La);</span><br><span class=\"line\">        PrintList(Lb);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;初始化失败\\n&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">do</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;__________________\\n&quot;</span></span><br><span class=\"line\">               <span class=\"string\">&quot;输入操作：\\n&quot;</span></span><br><span class=\"line\">               <span class=\"string\">&quot;1:插入\\n&quot;</span></span><br><span class=\"line\">               <span class=\"string\">&quot;2:删除\\n&quot;</span></span><br><span class=\"line\">               <span class=\"string\">&quot;3:查找\\n&quot;</span></span><br><span class=\"line\">               <span class=\"string\">&quot;4:排序\\n&quot;</span></span><br><span class=\"line\">               <span class=\"string\">&quot;5:合并\\n&quot;</span></span><br><span class=\"line\">               <span class=\"string\">&quot;6:交集\\n&quot;</span></span><br><span class=\"line\">               <span class=\"string\">&quot;0:退出\\n&quot;</span></span><br><span class=\"line\">               <span class=\"string\">&quot;___________________\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;oper);</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (oper) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">1</span>:&#123;</span><br><span class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;输入插入的位置以及插入的元素：&quot;</span>);</span><br><span class=\"line\">                <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d %d&quot;</span>,&amp;insert_loc,&amp;insert_elem);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (ListInsert(La,insert_loc,insert_elem))&#123;</span><br><span class=\"line\">                    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;插入成功，list为：\\n&quot;</span>);</span><br><span class=\"line\">                    PrintList(La);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;插入失败\\n&quot;</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">2</span>:&#123;</span><br><span class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入删除的位置：\\n&quot;</span>);</span><br><span class=\"line\">                <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;delet_loc);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (DeletList(La,delet_loc))&#123;</span><br><span class=\"line\">                    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;删除成功，删除后的list为：\\n&quot;</span>);</span><br><span class=\"line\">                    PrintList(La);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;删除失败\\n&quot;</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">3</span>:&#123;</span><br><span class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入要查找的元素：\\n&quot;</span>);</span><br><span class=\"line\">                <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;find_elem);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"keyword\">int</span> i=LocateElem(La,find_elem))&#123;</span><br><span class=\"line\">                    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;查找成功，位置为：%d\\n&quot;</span>,i);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;查找失败\\n&quot;</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">4</span>:&#123;</span><br><span class=\"line\">                qsort(La.elem,La.len,<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>),comp);</span><br><span class=\"line\">                qsort(Lb.elem,Lb.len,<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>),comp);</span><br><span class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;排序完成\\n&quot;</span>);</span><br><span class=\"line\">                PrintList(La);</span><br><span class=\"line\">                PrintList(Lb);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">5</span>:&#123;</span><br><span class=\"line\">                qsort(La.elem,La.len,<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>),comp);</span><br><span class=\"line\">                qsort(Lb.elem,Lb.len,<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>),comp);</span><br><span class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;排序完成\\n&quot;</span>);</span><br><span class=\"line\">                SqList *pL=MergeList(La,Lb);</span><br><span class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;合并完成，list为：\\n&quot;</span>);</span><br><span class=\"line\">                PrintList(*pL);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">6</span>:&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (IntersectionElem(La,Lb))&#123;</span><br><span class=\"line\">                    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;无交集元素\\n&quot;</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">0</span>:&#123;</span><br><span class=\"line\">                <span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">default</span>:&#123;</span><br><span class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;无此操作\\n&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">while</span> (oper != <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>Before-2</p>\n<ul>\n<li>头插法创建链表</li>\n<li>尾插法创建链表</li>\n<li>链表合并</li>\n</ul>\n</li>\n</ol>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> data;</span><br><span class=\"line\">    node *next;</span><br><span class=\"line\">&#125;*LinkList;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">DuList</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> data;</span><br><span class=\"line\">    DuList *prior;</span><br><span class=\"line\">    DuList *next;</span><br><span class=\"line\">&#125;*DLinkList;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">CreatDuList</span><span class=\"params\">(DLinkList &amp;L,<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    DLinkList p,q;</span><br><span class=\"line\">    L = <span class=\"keyword\">new</span> (DuList);</span><br><span class=\"line\">    L-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    L-&gt;prior = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    q = L;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; ++i) &#123;</span><br><span class=\"line\">        p = *<span class=\"keyword\">new</span> (DLinkList);</span><br><span class=\"line\">        p-&gt;data = rand()%<span class=\"number\">100</span>;</span><br><span class=\"line\">        p-&gt;prior = q;</span><br><span class=\"line\">        q-&gt;next = p;</span><br><span class=\"line\">        q = p;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">PrintDuList1</span><span class=\"params\">(DLinkList L)</span></span>&#123;</span><br><span class=\"line\">    DLinkList p = L;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (p != L)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;p-&gt;data&lt;&lt;<span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">        p = p-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">PrintDuList2</span><span class=\"params\">(DLinkList L)</span></span>&#123;</span><br><span class=\"line\">    DLinkList p = L;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (p != L)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;p-&gt;data&lt;&lt;<span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">        p = p-&gt;prior;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">DuInsert</span><span class=\"params\">(DLinkList &amp;L,<span class=\"keyword\">int</span> i)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> cnt = <span class=\"number\">0</span>;</span><br><span class=\"line\">    DLinkList p,q;</span><br><span class=\"line\">    q = L;</span><br><span class=\"line\">    p = (DLinkList) <span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(DLinkList));</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (q&amp;&amp;(cnt&lt;i))&#123;</span><br><span class=\"line\">        q = q-&gt;next;</span><br><span class=\"line\">        cnt++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    p-&gt;prior = q-&gt;prior;</span><br><span class=\"line\">    q-&gt;prior-&gt;next = p;</span><br><span class=\"line\">    q-&gt;prior = p;</span><br><span class=\"line\">    p-&gt;next = q;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">CreatListHead</span><span class=\"params\">(LinkList &amp;L,<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    LinkList p;</span><br><span class=\"line\">    L = <span class=\"keyword\">new</span> (node);</span><br><span class=\"line\">    L-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; ++i) &#123;</span><br><span class=\"line\">        p = (LinkList) <span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(node));</span><br><span class=\"line\">        p-&gt;data = rand()%<span class=\"number\">100</span>;</span><br><span class=\"line\">        p-&gt;next = L-&gt;next;</span><br><span class=\"line\">        L-&gt;next = p;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">CreatListTail</span><span class=\"params\">(LinkList &amp;L,<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    LinkList p,q;</span><br><span class=\"line\">    L = <span class=\"keyword\">new</span> (node);</span><br><span class=\"line\">    q =L;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; ++i) &#123;</span><br><span class=\"line\">        p = <span class=\"keyword\">new</span> (node);</span><br><span class=\"line\">        p-&gt;data = rand()%<span class=\"number\">100</span>;</span><br><span class=\"line\">        q-&gt;next = p;</span><br><span class=\"line\">        q = p;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    q-&gt;next =<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Insert</span><span class=\"params\">(LinkList &amp;L,<span class=\"keyword\">int</span> i,<span class=\"keyword\">int</span> e)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> cnt=<span class=\"number\">0</span>;</span><br><span class=\"line\">    LinkList p,q;</span><br><span class=\"line\">    p = L;</span><br><span class=\"line\">    q = <span class=\"keyword\">new</span> (node);</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (p&amp;&amp;(cnt &lt; i<span class=\"number\">-1</span>))&#123;</span><br><span class=\"line\">        cnt++;</span><br><span class=\"line\">        p = p-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    q-&gt;next = p-&gt;next;</span><br><span class=\"line\">    q-&gt;data = e;</span><br><span class=\"line\">    p-&gt;next = q;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Delet</span><span class=\"params\">(LinkList &amp;L,<span class=\"keyword\">int</span> i)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> cnt=<span class=\"number\">0</span>;</span><br><span class=\"line\">    LinkList p;</span><br><span class=\"line\">    p = L;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (p&amp;&amp;(cnt &lt; i<span class=\"number\">-1</span>))&#123;</span><br><span class=\"line\">        cnt++;</span><br><span class=\"line\">        p = p-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    p-&gt;next = (*(p-&gt;next)).next;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">PrintList</span><span class=\"params\">(LinkList L)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> sum=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (LinkList p=L-&gt;next;p != <span class=\"literal\">NULL</span>;p = p-&gt;next)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;p-&gt;data&lt;&lt;<span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        sum++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>&lt;&lt;sum&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">MergeList</span><span class=\"params\">(LinkList &amp;L1,LinkList &amp;L2,LinkList &amp;L3)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;</span><br><span class=\"line\">    LinkList p1,p2;</span><br><span class=\"line\">    L3 = <span class=\"keyword\">new</span> (node);</span><br><span class=\"line\">    p1 = L1;p2 = L2;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (p1&amp;&amp;p2)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (p1-&gt;data &lt; p2-&gt;data) &#123;</span><br><span class=\"line\">            Insert(L3, i, p1-&gt;data);</span><br><span class=\"line\">            p1 = p1-&gt;next;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            Insert(L3, i, p2-&gt;data);</span><br><span class=\"line\">            p2 = p2-&gt;next;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        i++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n;</span><br><span class=\"line\">    LinkList L1,L2,L3;</span><br><span class=\"line\">    L3 = <span class=\"keyword\">new</span> (node);</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">    CreatListHead(L1,n);</span><br><span class=\"line\"><span class=\"comment\">//    CreatListTail(L2,n);</span></span><br><span class=\"line\">    PrintList(L1);</span><br><span class=\"line\">    CreatListTail(L2,n);</span><br><span class=\"line\">    PrintList(L2);</span><br><span class=\"line\">    Insert(L1,<span class=\"number\">2</span>,<span class=\"number\">3</span>);</span><br><span class=\"line\">    PrintList(L1);</span><br><span class=\"line\">    Delet(L1,<span class=\"number\">2</span>);</span><br><span class=\"line\">    PrintList(L1);</span><br><span class=\"line\">    PrintList(L3);</span><br><span class=\"line\">    MergeList(L1,L2,L3);</span><br><span class=\"line\">    PrintList(L3);</span><br><span class=\"line\"><span class=\"comment\">//    int n;</span></span><br><span class=\"line\"><span class=\"comment\">//    cin&gt;&gt;n;</span></span><br><span class=\"line\"><span class=\"comment\">//    DLinkList L1,L2;</span></span><br><span class=\"line\"><span class=\"comment\">//    CreatDuList(L1,n);</span></span><br><span class=\"line\"><span class=\"comment\">//    PrintDuList1(L1);</span></span><br><span class=\"line\"><span class=\"comment\">//    PrintDuList2(L1);</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"10-2上机作业：\"><a href=\"#10-2上机作业：\" class=\"headerlink\" title=\"10.2上机作业：\"></a>10.2上机作业：</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span>         //单链表</span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> data;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span> *<span class=\"title\">next</span>;</span></span><br><span class=\"line\">&#125; *NodeList;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">SqList</span> &#123;</span>     <span class=\"comment\">//顺序表</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> *elem;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> len;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> size;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">NodeList *<span class=\"title\">createEnd</span><span class=\"params\">(NodeList &amp;head,<span class=\"keyword\">int</span> len)</span>         <span class=\"comment\">//单链表创立尾插法</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    head = (node *)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(NodeList));</span><br><span class=\"line\">    head-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    NodeList end = head;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\">        NodeList p = (NodeList)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(node));</span><br><span class=\"line\">        p-&gt;data= rand()%<span class=\"number\">100</span>;</span><br><span class=\"line\">        end-&gt;next = p;</span><br><span class=\"line\">        end = p;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    end-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Print</span><span class=\"params\">(NodeList head)</span>                   <span class=\"comment\">//单链表输出</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (head == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    NodeList p = head-&gt;next;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (p != <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%4d&quot;</span>,p-&gt;data);</span><br><span class=\"line\">        p = p-&gt;next;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ((i+<span class=\"number\">1</span>)%<span class=\"number\">5</span> == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        i++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">DeletElem</span><span class=\"params\">(NodeList &amp;head,SqList &amp;T)</span>        <span class=\"comment\">//单链表删除</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>,j = <span class=\"number\">0</span>;</span><br><span class=\"line\">    NodeList p,q,temp;</span><br><span class=\"line\">    NodeList s = head;</span><br><span class=\"line\">    T.size = <span class=\"number\">1000</span>;</span><br><span class=\"line\">    T.elem = (<span class=\"keyword\">int</span>*)<span class=\"built_in\">malloc</span>(T.size * <span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>));</span><br><span class=\"line\">    T.len = <span class=\"number\">0</span>;</span><br><span class=\"line\">    p = s-&gt;next;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(p != <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        q = p;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(q-&gt;next != <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(q-&gt;next-&gt;data == p-&gt;data)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                temp = q-&gt;next;</span><br><span class=\"line\">                q-&gt;next = q-&gt;next-&gt;next;</span><br><span class=\"line\">                T.elem[T.len++] = p-&gt;data+(i+j+<span class=\"number\">1</span>)*<span class=\"number\">100</span>;</span><br><span class=\"line\">                <span class=\"built_in\">free</span>(temp);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            q = q-&gt;next;</span><br><span class=\"line\">            j++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        j = <span class=\"number\">0</span>;</span><br><span class=\"line\">        i++;</span><br><span class=\"line\">        p = p-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">CreatList</span><span class=\"params\">(SqList &amp;L,<span class=\"keyword\">int</span> n)</span></span>&#123;            <span class=\"comment\">//顺序表创建</span></span><br><span class=\"line\">    L.elem  = (<span class=\"keyword\">int</span>*)<span class=\"built_in\">malloc</span>(n*<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>));</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; ++i) &#123;</span><br><span class=\"line\">        L.elem[i] = rand()%<span class=\"number\">100</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    L.len = n;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">PrintList</span><span class=\"params\">(SqList L)</span></span>&#123;                   <span class=\"comment\">//顺序表输出</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; L.len; ++i) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%4d&quot;</span>,L.elem[i]);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ((i+<span class=\"number\">1</span>)%<span class=\"number\">5</span> == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">DeletElem</span><span class=\"params\">(SqList &amp;L,SqList &amp;T)</span></span>&#123;        <span class=\"comment\">//顺序表删除</span></span><br><span class=\"line\">    T.len = <span class=\"number\">0</span>;</span><br><span class=\"line\">    T.elem = (<span class=\"keyword\">int</span> *)<span class=\"built_in\">malloc</span>(L.len * <span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span> ));</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;L.len; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = i+<span class=\"number\">1</span>; j &lt; L.len; ++j) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (L.elem[j] == L.elem[i])&#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> k = j; k &lt; L.len - <span class=\"number\">1</span>; ++k) &#123;</span><br><span class=\"line\">                    L.elem[k] = L.elem[k+<span class=\"number\">1</span>];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                T.elem[T.len++] = L.elem[i]+j*<span class=\"number\">100</span>;</span><br><span class=\"line\">                L.len--;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ReverseLink</span><span class=\"params\">(NodeList &amp;Head)</span>          <span class=\"comment\">//单链表倒置</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> flag=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (Head == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    NodeList pNode = Head-&gt;next;</span><br><span class=\"line\">    NodeList Prev = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    NodeList pNext = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (pNode != <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        pNext = pNode-&gt;next;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (pNext == <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">            Head = pNode;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        pNode-&gt;next = Prev;</span><br><span class=\"line\">        Prev = pNode;</span><br><span class=\"line\">        pNode = pNext;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    NodeList p = (NodeList)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>));</span><br><span class=\"line\">    p-&gt;next = Head;</span><br><span class=\"line\">    Head = p;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,*a;</span><br><span class=\"line\">    SqList T;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">    <span class=\"comment\">//<span class=\"doctag\">TODO:</span>删除顺序表中的重复元素</span></span><br><span class=\"line\">    SqList L;</span><br><span class=\"line\">    CreatList(L,n);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;顺序表创建完成:&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    PrintList(L);</span><br><span class=\"line\">    DeletElem(L,T);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;顺序表删除完成:&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    PrintList(L);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (T.len != <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;删除的元素为:&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; T.len; ++i) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;原位置为:&quot;</span>&lt;&lt;T.elem[i]/<span class=\"number\">100</span>+<span class=\"number\">1</span>&lt;&lt;<span class=\"string\">&quot;-&gt;&quot;</span>&lt;&lt;T.elem[i]%<span class=\"number\">100</span>&lt;&lt;<span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;无重复元素&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//<span class=\"doctag\">TODO:</span>删除链表中的重复元素</span></span><br><span class=\"line\">    NodeList head;</span><br><span class=\"line\">    createEnd(head,n);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;单链表创建完成:&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    Print(head);</span><br><span class=\"line\">    DeletElem(head,T);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;单链表删除完成:&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    Print(head);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (T.len != <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;删除的元素为:&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; T.len; ++i) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;原位置为:&quot;</span>&lt;&lt;T.elem[i]/<span class=\"number\">100</span>+<span class=\"number\">1</span>&lt;&lt;<span class=\"string\">&quot;-&gt;&quot;</span>&lt;&lt;T.elem[i]%<span class=\"number\">100</span>&lt;&lt;<span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;无重复元素&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//<span class=\"doctag\">TODO:</span>单链表的逆置</span></span><br><span class=\"line\">    ReverseLink(head);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;单链表逆置完成:&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    Print(head);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li><ul>\n<li>顺序表中删除重复元素</li>\n<li>单链表中删除重复元素</li>\n</ul>\n</li>\n<li>单链表的逆置</li>\n</ol>\n<center><img src=\"https://s3.ax1x.com/2021/03/13/6wdloq.png\" width=\"50%\"></center>\n<script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","site":{"data":{}},"excerpt":"顺序表与链表\n 1. Before-1\n    \n     * 顺序表的创立\n     * 顺序表的随机初始化（头插法以及尾插法）\n     * 顺序表的定位\n     * 顺序表插入删除以及定位元素\n     * 求顺序表的交集与并集1\n       2\n       3\n       4\n       5\n       6\n       7\n       8\n       9\n       10\n       11\n       12\n       13\n       14\n       15\n       16\n       17\n       18\n       19\n       2","more":"<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> List_Size 100</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">SqList</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> *elem;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> len;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> size;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//TODO List</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">InitList</span><span class=\"params\">(SqList &amp;L)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">RandInitList</span><span class=\"params\">(SqList &amp;L,<span class=\"keyword\">int</span> n)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">ListInsert</span><span class=\"params\">(SqList &amp;L,<span class=\"keyword\">int</span> i,<span class=\"keyword\">int</span> e)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">PrintList</span><span class=\"params\">(SqList L)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">DeletList</span><span class=\"params\">(SqList &amp;L,<span class=\"keyword\">int</span> n)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">LocateElem</span><span class=\"params\">(SqList L,<span class=\"keyword\">int</span> elem)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">comp</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">void</span>*a,<span class=\"keyword\">const</span> <span class=\"keyword\">void</span>*b)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">IntersectionElem</span><span class=\"params\">(SqList La,SqList Lb)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">SqList *<span class=\"title\">MergeList</span><span class=\"params\">(SqList La,SqList Lb)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//TODO function</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">InitList</span><span class=\"params\">(SqList &amp;L)</span></span>&#123;</span><br><span class=\"line\">    L.elem=(<span class=\"keyword\">int</span> *)<span class=\"built_in\">malloc</span>(List_Size*<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>));</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!L.elem)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">exit</span>(<span class=\"number\">-2</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    L.len = <span class=\"number\">0</span>;</span><br><span class=\"line\">    L.size = List_Size;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">RandInitList</span><span class=\"params\">(SqList &amp;L,<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n&gt;=<span class=\"number\">0</span>&amp;&amp;n&lt;List_Size&amp;&amp;InitList(L)==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; ++i) &#123;</span><br><span class=\"line\">            L.elem[i] = rand()%<span class=\"number\">100</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        L.len = n;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">ListInsert</span><span class=\"params\">(SqList &amp;L,<span class=\"keyword\">int</span> i,<span class=\"keyword\">int</span> e)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i&lt;<span class=\"number\">1</span>||i&gt;L.len + <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (L.len &gt; L.size)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> *newbase = (<span class=\"keyword\">int</span> *)<span class=\"built_in\">realloc</span>(L.elem,(L.size+<span class=\"number\">1</span>)*<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>));</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!newbase)</span><br><span class=\"line\">            <span class=\"built_in\">exit</span>(<span class=\"number\">-2</span>);</span><br><span class=\"line\">        L.elem = newbase;</span><br><span class=\"line\">        L.size += <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> *q=&amp;(L.elem[i<span class=\"number\">-1</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> *p = &amp;(L.elem[L.len - <span class=\"number\">1</span>]); p&gt;=q; --p) &#123;</span><br><span class=\"line\">        *(p+<span class=\"number\">1</span>) = *p;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    *q = e;</span><br><span class=\"line\">    ++L.len;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">PrintList</span><span class=\"params\">(SqList L)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; L.len; ++i) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;L.elem[i]&lt;&lt;<span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">DeletList</span><span class=\"params\">(SqList &amp;L,<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n &lt; <span class=\"number\">1</span>||n&gt;L.len)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = n; i &lt; L.len; ++i) &#123;</span><br><span class=\"line\">            L.elem[i<span class=\"number\">-1</span>] = L.elem[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        L.len--;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">LocateElem</span><span class=\"params\">(SqList L,<span class=\"keyword\">int</span> elem)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; L.len; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (L.elem[i] == elem)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> i+<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">comp</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">void</span>*a,<span class=\"keyword\">const</span> <span class=\"keyword\">void</span>*b)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> *(<span class=\"keyword\">int</span>*)a-*(<span class=\"keyword\">int</span>*)b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">SqList *<span class=\"title\">MergeList</span><span class=\"params\">(SqList La,SqList Lb)</span></span>&#123;</span><br><span class=\"line\">    SqList L;</span><br><span class=\"line\">    InitList(L);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>,j=<span class=\"number\">0</span>,k=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> ((i &lt; La.len)&amp;&amp;(j &lt; Lb.len))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (La.elem[i]&lt;Lb.elem[j])&#123;</span><br><span class=\"line\">            L.elem[k] = La.elem[i];</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">            k++;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            L.elem[k] = Lb.elem[j];</span><br><span class=\"line\">            j++;</span><br><span class=\"line\">            k++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i == La.len)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> l = j; l &lt; Lb.len; ++l) &#123;</span><br><span class=\"line\">            L.elem[k++] = Lb.elem[l];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> l = i; l &lt; La.len; ++l) &#123;</span><br><span class=\"line\">            L.elem[k++] = La.elem[l];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    L.len = La.len + Lb.len;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &amp;L;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">IntersectionElem</span><span class=\"params\">(SqList La,SqList Lb)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> Min = min(La.len,Lb.len),flag= <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (Min == La.len)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; La.len; ++i) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; Lb.len; ++j) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (La.elem[i] == Lb.elem[j])&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (flag)&#123;</span><br><span class=\"line\">                        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>,La.elem[i]);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                        flag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;交集元素为：\\n&quot;</span>);</span><br><span class=\"line\">                        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>,La.elem[i]);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; Lb.len; ++i) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; La.len; ++j) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (Lb.elem[i] == La.elem[j])&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (flag)&#123;</span><br><span class=\"line\">                        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>,Lb.elem[i]);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                        flag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;交集元素为：\\n&quot;</span>);</span><br><span class=\"line\">                        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>,Lb.elem[i]);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> flag;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//TODO Main Function</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,oper,insert_loc,insert_elem,delet_loc,find_elem;</span><br><span class=\"line\">    SqList La,Lb;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;开始初始化，输入元素个数：\\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (RandInitList(La,n)&amp;&amp;(RandInitList(Lb,n)))&#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;随机初始化成功,list为：\\n&quot;</span>);</span><br><span class=\"line\">        PrintList(La);</span><br><span class=\"line\">        PrintList(Lb);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;初始化失败\\n&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">do</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;__________________\\n&quot;</span></span><br><span class=\"line\">               <span class=\"string\">&quot;输入操作：\\n&quot;</span></span><br><span class=\"line\">               <span class=\"string\">&quot;1:插入\\n&quot;</span></span><br><span class=\"line\">               <span class=\"string\">&quot;2:删除\\n&quot;</span></span><br><span class=\"line\">               <span class=\"string\">&quot;3:查找\\n&quot;</span></span><br><span class=\"line\">               <span class=\"string\">&quot;4:排序\\n&quot;</span></span><br><span class=\"line\">               <span class=\"string\">&quot;5:合并\\n&quot;</span></span><br><span class=\"line\">               <span class=\"string\">&quot;6:交集\\n&quot;</span></span><br><span class=\"line\">               <span class=\"string\">&quot;0:退出\\n&quot;</span></span><br><span class=\"line\">               <span class=\"string\">&quot;___________________\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;oper);</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (oper) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">1</span>:&#123;</span><br><span class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;输入插入的位置以及插入的元素：&quot;</span>);</span><br><span class=\"line\">                <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d %d&quot;</span>,&amp;insert_loc,&amp;insert_elem);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (ListInsert(La,insert_loc,insert_elem))&#123;</span><br><span class=\"line\">                    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;插入成功，list为：\\n&quot;</span>);</span><br><span class=\"line\">                    PrintList(La);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;插入失败\\n&quot;</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">2</span>:&#123;</span><br><span class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入删除的位置：\\n&quot;</span>);</span><br><span class=\"line\">                <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;delet_loc);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (DeletList(La,delet_loc))&#123;</span><br><span class=\"line\">                    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;删除成功，删除后的list为：\\n&quot;</span>);</span><br><span class=\"line\">                    PrintList(La);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;删除失败\\n&quot;</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">3</span>:&#123;</span><br><span class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入要查找的元素：\\n&quot;</span>);</span><br><span class=\"line\">                <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;find_elem);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"keyword\">int</span> i=LocateElem(La,find_elem))&#123;</span><br><span class=\"line\">                    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;查找成功，位置为：%d\\n&quot;</span>,i);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;查找失败\\n&quot;</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">4</span>:&#123;</span><br><span class=\"line\">                qsort(La.elem,La.len,<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>),comp);</span><br><span class=\"line\">                qsort(Lb.elem,Lb.len,<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>),comp);</span><br><span class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;排序完成\\n&quot;</span>);</span><br><span class=\"line\">                PrintList(La);</span><br><span class=\"line\">                PrintList(Lb);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">5</span>:&#123;</span><br><span class=\"line\">                qsort(La.elem,La.len,<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>),comp);</span><br><span class=\"line\">                qsort(Lb.elem,Lb.len,<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>),comp);</span><br><span class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;排序完成\\n&quot;</span>);</span><br><span class=\"line\">                SqList *pL=MergeList(La,Lb);</span><br><span class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;合并完成，list为：\\n&quot;</span>);</span><br><span class=\"line\">                PrintList(*pL);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">6</span>:&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (IntersectionElem(La,Lb))&#123;</span><br><span class=\"line\">                    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;无交集元素\\n&quot;</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">0</span>:&#123;</span><br><span class=\"line\">                <span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">default</span>:&#123;</span><br><span class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;无此操作\\n&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">while</span> (oper != <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>Before-2</p>\n<ul>\n<li>头插法创建链表</li>\n<li>尾插法创建链表</li>\n<li>链表合并</li>\n</ul>\n</li>\n</ol>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> data;</span><br><span class=\"line\">    node *next;</span><br><span class=\"line\">&#125;*LinkList;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">DuList</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> data;</span><br><span class=\"line\">    DuList *prior;</span><br><span class=\"line\">    DuList *next;</span><br><span class=\"line\">&#125;*DLinkList;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">CreatDuList</span><span class=\"params\">(DLinkList &amp;L,<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    DLinkList p,q;</span><br><span class=\"line\">    L = <span class=\"keyword\">new</span> (DuList);</span><br><span class=\"line\">    L-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    L-&gt;prior = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    q = L;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; ++i) &#123;</span><br><span class=\"line\">        p = *<span class=\"keyword\">new</span> (DLinkList);</span><br><span class=\"line\">        p-&gt;data = rand()%<span class=\"number\">100</span>;</span><br><span class=\"line\">        p-&gt;prior = q;</span><br><span class=\"line\">        q-&gt;next = p;</span><br><span class=\"line\">        q = p;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">PrintDuList1</span><span class=\"params\">(DLinkList L)</span></span>&#123;</span><br><span class=\"line\">    DLinkList p = L;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (p != L)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;p-&gt;data&lt;&lt;<span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">        p = p-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">PrintDuList2</span><span class=\"params\">(DLinkList L)</span></span>&#123;</span><br><span class=\"line\">    DLinkList p = L;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (p != L)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;p-&gt;data&lt;&lt;<span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">        p = p-&gt;prior;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">DuInsert</span><span class=\"params\">(DLinkList &amp;L,<span class=\"keyword\">int</span> i)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> cnt = <span class=\"number\">0</span>;</span><br><span class=\"line\">    DLinkList p,q;</span><br><span class=\"line\">    q = L;</span><br><span class=\"line\">    p = (DLinkList) <span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(DLinkList));</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (q&amp;&amp;(cnt&lt;i))&#123;</span><br><span class=\"line\">        q = q-&gt;next;</span><br><span class=\"line\">        cnt++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    p-&gt;prior = q-&gt;prior;</span><br><span class=\"line\">    q-&gt;prior-&gt;next = p;</span><br><span class=\"line\">    q-&gt;prior = p;</span><br><span class=\"line\">    p-&gt;next = q;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">CreatListHead</span><span class=\"params\">(LinkList &amp;L,<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    LinkList p;</span><br><span class=\"line\">    L = <span class=\"keyword\">new</span> (node);</span><br><span class=\"line\">    L-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; ++i) &#123;</span><br><span class=\"line\">        p = (LinkList) <span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(node));</span><br><span class=\"line\">        p-&gt;data = rand()%<span class=\"number\">100</span>;</span><br><span class=\"line\">        p-&gt;next = L-&gt;next;</span><br><span class=\"line\">        L-&gt;next = p;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">CreatListTail</span><span class=\"params\">(LinkList &amp;L,<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    LinkList p,q;</span><br><span class=\"line\">    L = <span class=\"keyword\">new</span> (node);</span><br><span class=\"line\">    q =L;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; ++i) &#123;</span><br><span class=\"line\">        p = <span class=\"keyword\">new</span> (node);</span><br><span class=\"line\">        p-&gt;data = rand()%<span class=\"number\">100</span>;</span><br><span class=\"line\">        q-&gt;next = p;</span><br><span class=\"line\">        q = p;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    q-&gt;next =<span class=\"literal\">NULL</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Insert</span><span class=\"params\">(LinkList &amp;L,<span class=\"keyword\">int</span> i,<span class=\"keyword\">int</span> e)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> cnt=<span class=\"number\">0</span>;</span><br><span class=\"line\">    LinkList p,q;</span><br><span class=\"line\">    p = L;</span><br><span class=\"line\">    q = <span class=\"keyword\">new</span> (node);</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (p&amp;&amp;(cnt &lt; i<span class=\"number\">-1</span>))&#123;</span><br><span class=\"line\">        cnt++;</span><br><span class=\"line\">        p = p-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    q-&gt;next = p-&gt;next;</span><br><span class=\"line\">    q-&gt;data = e;</span><br><span class=\"line\">    p-&gt;next = q;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Delet</span><span class=\"params\">(LinkList &amp;L,<span class=\"keyword\">int</span> i)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> cnt=<span class=\"number\">0</span>;</span><br><span class=\"line\">    LinkList p;</span><br><span class=\"line\">    p = L;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (p&amp;&amp;(cnt &lt; i<span class=\"number\">-1</span>))&#123;</span><br><span class=\"line\">        cnt++;</span><br><span class=\"line\">        p = p-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    p-&gt;next = (*(p-&gt;next)).next;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">PrintList</span><span class=\"params\">(LinkList L)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> sum=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (LinkList p=L-&gt;next;p != <span class=\"literal\">NULL</span>;p = p-&gt;next)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;p-&gt;data&lt;&lt;<span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        sum++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>&lt;&lt;sum&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">MergeList</span><span class=\"params\">(LinkList &amp;L1,LinkList &amp;L2,LinkList &amp;L3)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;</span><br><span class=\"line\">    LinkList p1,p2;</span><br><span class=\"line\">    L3 = <span class=\"keyword\">new</span> (node);</span><br><span class=\"line\">    p1 = L1;p2 = L2;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (p1&amp;&amp;p2)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (p1-&gt;data &lt; p2-&gt;data) &#123;</span><br><span class=\"line\">            Insert(L3, i, p1-&gt;data);</span><br><span class=\"line\">            p1 = p1-&gt;next;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            Insert(L3, i, p2-&gt;data);</span><br><span class=\"line\">            p2 = p2-&gt;next;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        i++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n;</span><br><span class=\"line\">    LinkList L1,L2,L3;</span><br><span class=\"line\">    L3 = <span class=\"keyword\">new</span> (node);</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">    CreatListHead(L1,n);</span><br><span class=\"line\"><span class=\"comment\">//    CreatListTail(L2,n);</span></span><br><span class=\"line\">    PrintList(L1);</span><br><span class=\"line\">    CreatListTail(L2,n);</span><br><span class=\"line\">    PrintList(L2);</span><br><span class=\"line\">    Insert(L1,<span class=\"number\">2</span>,<span class=\"number\">3</span>);</span><br><span class=\"line\">    PrintList(L1);</span><br><span class=\"line\">    Delet(L1,<span class=\"number\">2</span>);</span><br><span class=\"line\">    PrintList(L1);</span><br><span class=\"line\">    PrintList(L3);</span><br><span class=\"line\">    MergeList(L1,L2,L3);</span><br><span class=\"line\">    PrintList(L3);</span><br><span class=\"line\"><span class=\"comment\">//    int n;</span></span><br><span class=\"line\"><span class=\"comment\">//    cin&gt;&gt;n;</span></span><br><span class=\"line\"><span class=\"comment\">//    DLinkList L1,L2;</span></span><br><span class=\"line\"><span class=\"comment\">//    CreatDuList(L1,n);</span></span><br><span class=\"line\"><span class=\"comment\">//    PrintDuList1(L1);</span></span><br><span class=\"line\"><span class=\"comment\">//    PrintDuList2(L1);</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"10-2上机作业：\"><a href=\"#10-2上机作业：\" class=\"headerlink\" title=\"10.2上机作业：\"></a>10.2上机作业：</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span>         //单链表</span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> data;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span> *<span class=\"title\">next</span>;</span></span><br><span class=\"line\">&#125; *NodeList;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">SqList</span> &#123;</span>     <span class=\"comment\">//顺序表</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> *elem;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> len;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> size;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">NodeList *<span class=\"title\">createEnd</span><span class=\"params\">(NodeList &amp;head,<span class=\"keyword\">int</span> len)</span>         <span class=\"comment\">//单链表创立尾插法</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    head = (node *)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(NodeList));</span><br><span class=\"line\">    head-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    NodeList end = head;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\">        NodeList p = (NodeList)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(node));</span><br><span class=\"line\">        p-&gt;data= rand()%<span class=\"number\">100</span>;</span><br><span class=\"line\">        end-&gt;next = p;</span><br><span class=\"line\">        end = p;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    end-&gt;next = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Print</span><span class=\"params\">(NodeList head)</span>                   <span class=\"comment\">//单链表输出</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (head == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    NodeList p = head-&gt;next;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (p != <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%4d&quot;</span>,p-&gt;data);</span><br><span class=\"line\">        p = p-&gt;next;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ((i+<span class=\"number\">1</span>)%<span class=\"number\">5</span> == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        i++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">DeletElem</span><span class=\"params\">(NodeList &amp;head,SqList &amp;T)</span>        <span class=\"comment\">//单链表删除</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>,j = <span class=\"number\">0</span>;</span><br><span class=\"line\">    NodeList p,q,temp;</span><br><span class=\"line\">    NodeList s = head;</span><br><span class=\"line\">    T.size = <span class=\"number\">1000</span>;</span><br><span class=\"line\">    T.elem = (<span class=\"keyword\">int</span>*)<span class=\"built_in\">malloc</span>(T.size * <span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>));</span><br><span class=\"line\">    T.len = <span class=\"number\">0</span>;</span><br><span class=\"line\">    p = s-&gt;next;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(p != <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        q = p;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(q-&gt;next != <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(q-&gt;next-&gt;data == p-&gt;data)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                temp = q-&gt;next;</span><br><span class=\"line\">                q-&gt;next = q-&gt;next-&gt;next;</span><br><span class=\"line\">                T.elem[T.len++] = p-&gt;data+(i+j+<span class=\"number\">1</span>)*<span class=\"number\">100</span>;</span><br><span class=\"line\">                <span class=\"built_in\">free</span>(temp);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            q = q-&gt;next;</span><br><span class=\"line\">            j++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        j = <span class=\"number\">0</span>;</span><br><span class=\"line\">        i++;</span><br><span class=\"line\">        p = p-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">CreatList</span><span class=\"params\">(SqList &amp;L,<span class=\"keyword\">int</span> n)</span></span>&#123;            <span class=\"comment\">//顺序表创建</span></span><br><span class=\"line\">    L.elem  = (<span class=\"keyword\">int</span>*)<span class=\"built_in\">malloc</span>(n*<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>));</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; ++i) &#123;</span><br><span class=\"line\">        L.elem[i] = rand()%<span class=\"number\">100</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    L.len = n;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">PrintList</span><span class=\"params\">(SqList L)</span></span>&#123;                   <span class=\"comment\">//顺序表输出</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; L.len; ++i) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%4d&quot;</span>,L.elem[i]);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ((i+<span class=\"number\">1</span>)%<span class=\"number\">5</span> == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">DeletElem</span><span class=\"params\">(SqList &amp;L,SqList &amp;T)</span></span>&#123;        <span class=\"comment\">//顺序表删除</span></span><br><span class=\"line\">    T.len = <span class=\"number\">0</span>;</span><br><span class=\"line\">    T.elem = (<span class=\"keyword\">int</span> *)<span class=\"built_in\">malloc</span>(L.len * <span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span> ));</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;L.len; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = i+<span class=\"number\">1</span>; j &lt; L.len; ++j) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (L.elem[j] == L.elem[i])&#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> k = j; k &lt; L.len - <span class=\"number\">1</span>; ++k) &#123;</span><br><span class=\"line\">                    L.elem[k] = L.elem[k+<span class=\"number\">1</span>];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                T.elem[T.len++] = L.elem[i]+j*<span class=\"number\">100</span>;</span><br><span class=\"line\">                L.len--;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ReverseLink</span><span class=\"params\">(NodeList &amp;Head)</span>          <span class=\"comment\">//单链表倒置</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> flag=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (Head == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    NodeList pNode = Head-&gt;next;</span><br><span class=\"line\">    NodeList Prev = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    NodeList pNext = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (pNode != <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        pNext = pNode-&gt;next;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (pNext == <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">            Head = pNode;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        pNode-&gt;next = Prev;</span><br><span class=\"line\">        Prev = pNode;</span><br><span class=\"line\">        pNode = pNext;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    NodeList p = (NodeList)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>));</span><br><span class=\"line\">    p-&gt;next = Head;</span><br><span class=\"line\">    Head = p;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,*a;</span><br><span class=\"line\">    SqList T;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">    <span class=\"comment\">//<span class=\"doctag\">TODO:</span>删除顺序表中的重复元素</span></span><br><span class=\"line\">    SqList L;</span><br><span class=\"line\">    CreatList(L,n);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;顺序表创建完成:&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    PrintList(L);</span><br><span class=\"line\">    DeletElem(L,T);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;顺序表删除完成:&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    PrintList(L);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (T.len != <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;删除的元素为:&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; T.len; ++i) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;原位置为:&quot;</span>&lt;&lt;T.elem[i]/<span class=\"number\">100</span>+<span class=\"number\">1</span>&lt;&lt;<span class=\"string\">&quot;-&gt;&quot;</span>&lt;&lt;T.elem[i]%<span class=\"number\">100</span>&lt;&lt;<span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;无重复元素&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//<span class=\"doctag\">TODO:</span>删除链表中的重复元素</span></span><br><span class=\"line\">    NodeList head;</span><br><span class=\"line\">    createEnd(head,n);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;单链表创建完成:&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    Print(head);</span><br><span class=\"line\">    DeletElem(head,T);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;单链表删除完成:&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    Print(head);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (T.len != <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;删除的元素为:&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; T.len; ++i) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;原位置为:&quot;</span>&lt;&lt;T.elem[i]/<span class=\"number\">100</span>+<span class=\"number\">1</span>&lt;&lt;<span class=\"string\">&quot;-&gt;&quot;</span>&lt;&lt;T.elem[i]%<span class=\"number\">100</span>&lt;&lt;<span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;无重复元素&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//<span class=\"doctag\">TODO:</span>单链表的逆置</span></span><br><span class=\"line\">    ReverseLink(head);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">&quot;单链表逆置完成:&quot;</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    Print(head);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li><ul>\n<li>顺序表中删除重复元素</li>\n<li>单链表中删除重复元素</li>\n</ul>\n</li>\n<li>单链表的逆置</li>\n</ol>\n<center><img src=\"https://s3.ax1x.com/2021/03/13/6wdloq.png\" width=\"50%\"></center>"},{"title":"C++学生成绩","date":"2021-04-13T15:23:43.000Z","_content":"\n\n### 代码\n\n<!-- more -->\n\n```c++\n#include <iostream>\n#include <math.h>\n\nvoid func1(double stu[10][6]) {\n    //计算各科平均分\n    for (int i = 0; i < 10; ++i) {\n        if (!i) {\n            printf(\"编号\\ts1\\t\\ts2\\t\\ts3\\t\\ts4\\t\\ts5\\t\\t平均成绩\\n\");\n        }\n        printf(\"%d\\t\", i + 1);\n        for (int j = 0; j < 6; ++j) {\n            printf(\"%.2lf\\t\", stu[i][j]);\n        }\n        printf(\"\\n\");\n    }\n}\n\nvoid func2(double stu[10][6]) {\n    //各科平均成绩\n    double class_sum[5] = {0};\n    for (int i = 0; i < 10; ++i) {\n        for (int j = 0; j < 5; ++j) {\n            class_sum[j] += stu[i][j];\n        }\n    }\n    for (int i = 0; i < 5; ++i) {\n        class_sum[i] /= 10;\n    }\n    printf(\"平均\\t\");\n    for (int i = 0; i < 5; ++i) {\n        printf(\"%.2lf\\t\", class_sum[i]);\n    }\n    printf(\"\\n\");\n}\n\nvoid func3(double stu[10][6]) {\n    //最高分\n    double max_num = -1;\n    int max_row, max_col;\n    for (int i = 0; i < 10; ++i) {\n        for (int j = 0; j < 5; ++j) {\n            if (stu[i][j] > max_num) {\n                max_num = stu[i][j];\n                max_row = i;\n                max_col = j;\n            }\n        }\n    }\n    printf(\"最高分数为：%.2lf,科目为：s%d,学生编号为：%d\\n\", max_num, max_col + 1, max_row + 1);\n}\n\nvoid func4(double stu[10][6]) {\n    //方差\n    double Dx, Sigma1 = 0, Sigma2 = 0;\n    for (int i = 0; i < 10; ++i) {\n        Sigma1 += stu[i][5];\n        Sigma2 += pow(stu[i][5], 2);\n    }\n    Dx = (Sigma2 / 10) - (pow(Sigma1 / 10, 2));\n    printf(\"平均分方差为：%.2lf\\n\", Dx);\n}\n\nint main() {\n    double stu[10][6] = {0};\n    for (int i = 0; i < 10; ++i) {\n        for (int j = 0; j < 5; ++j) {\n            stu[i][j] = (random() % 40) + 50;\n//            scanf(\"%lf\", &stu[i][j]);\n            stu[i][5] += stu[i][j];\n        }\n        stu[i][5] = stu[i][5] / 5;            //计算每个学生平均分\n    }\n\n    func1(stu);\n    func2(stu);\n    func3(stu);\n    func4(stu);\n}\n```","source":"_posts/C-学生成绩.md","raw":"---\ntitle: C++学生成绩\ndate: 2021-04-13 23:23:43\ntags:\n---\n\n\n### 代码\n\n<!-- more -->\n\n```c++\n#include <iostream>\n#include <math.h>\n\nvoid func1(double stu[10][6]) {\n    //计算各科平均分\n    for (int i = 0; i < 10; ++i) {\n        if (!i) {\n            printf(\"编号\\ts1\\t\\ts2\\t\\ts3\\t\\ts4\\t\\ts5\\t\\t平均成绩\\n\");\n        }\n        printf(\"%d\\t\", i + 1);\n        for (int j = 0; j < 6; ++j) {\n            printf(\"%.2lf\\t\", stu[i][j]);\n        }\n        printf(\"\\n\");\n    }\n}\n\nvoid func2(double stu[10][6]) {\n    //各科平均成绩\n    double class_sum[5] = {0};\n    for (int i = 0; i < 10; ++i) {\n        for (int j = 0; j < 5; ++j) {\n            class_sum[j] += stu[i][j];\n        }\n    }\n    for (int i = 0; i < 5; ++i) {\n        class_sum[i] /= 10;\n    }\n    printf(\"平均\\t\");\n    for (int i = 0; i < 5; ++i) {\n        printf(\"%.2lf\\t\", class_sum[i]);\n    }\n    printf(\"\\n\");\n}\n\nvoid func3(double stu[10][6]) {\n    //最高分\n    double max_num = -1;\n    int max_row, max_col;\n    for (int i = 0; i < 10; ++i) {\n        for (int j = 0; j < 5; ++j) {\n            if (stu[i][j] > max_num) {\n                max_num = stu[i][j];\n                max_row = i;\n                max_col = j;\n            }\n        }\n    }\n    printf(\"最高分数为：%.2lf,科目为：s%d,学生编号为：%d\\n\", max_num, max_col + 1, max_row + 1);\n}\n\nvoid func4(double stu[10][6]) {\n    //方差\n    double Dx, Sigma1 = 0, Sigma2 = 0;\n    for (int i = 0; i < 10; ++i) {\n        Sigma1 += stu[i][5];\n        Sigma2 += pow(stu[i][5], 2);\n    }\n    Dx = (Sigma2 / 10) - (pow(Sigma1 / 10, 2));\n    printf(\"平均分方差为：%.2lf\\n\", Dx);\n}\n\nint main() {\n    double stu[10][6] = {0};\n    for (int i = 0; i < 10; ++i) {\n        for (int j = 0; j < 5; ++j) {\n            stu[i][j] = (random() % 40) + 50;\n//            scanf(\"%lf\", &stu[i][j]);\n            stu[i][5] += stu[i][j];\n        }\n        stu[i][5] = stu[i][5] / 5;            //计算每个学生平均分\n    }\n\n    func1(stu);\n    func2(stu);\n    func3(stu);\n    func4(stu);\n}\n```","slug":"C-学生成绩","published":1,"updated":"2021-04-14T13:45:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckojvxers001sboe2eeqnc0k2","content":"<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><span id=\"more\"></span>\n\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;math.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">func1</span><span class=\"params\">(<span class=\"keyword\">double</span> stu[<span class=\"number\">10</span>][<span class=\"number\">6</span>])</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//计算各科平均分</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!i) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;编号\\ts1\\t\\ts2\\t\\ts3\\t\\ts4\\t\\ts5\\t\\t平均成绩\\n&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\t&quot;</span>, i + <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">6</span>; ++j) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%.2lf\\t&quot;</span>, stu[i][j]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">func2</span><span class=\"params\">(<span class=\"keyword\">double</span> stu[<span class=\"number\">10</span>][<span class=\"number\">6</span>])</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//各科平均成绩</span></span><br><span class=\"line\">    <span class=\"keyword\">double</span> class_sum[<span class=\"number\">5</span>] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">5</span>; ++j) &#123;</span><br><span class=\"line\">            class_sum[j] += stu[i][j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; ++i) &#123;</span><br><span class=\"line\">        class_sum[i] /= <span class=\"number\">10</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;平均\\t&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; ++i) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%.2lf\\t&quot;</span>, class_sum[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">func3</span><span class=\"params\">(<span class=\"keyword\">double</span> stu[<span class=\"number\">10</span>][<span class=\"number\">6</span>])</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//最高分</span></span><br><span class=\"line\">    <span class=\"keyword\">double</span> max_num = <span class=\"number\">-1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> max_row, max_col;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">5</span>; ++j) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (stu[i][j] &gt; max_num) &#123;</span><br><span class=\"line\">                max_num = stu[i][j];</span><br><span class=\"line\">                max_row = i;</span><br><span class=\"line\">                max_col = j;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;最高分数为：%.2lf,科目为：s%d,学生编号为：%d\\n&quot;</span>, max_num, max_col + <span class=\"number\">1</span>, max_row + <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">func4</span><span class=\"params\">(<span class=\"keyword\">double</span> stu[<span class=\"number\">10</span>][<span class=\"number\">6</span>])</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//方差</span></span><br><span class=\"line\">    <span class=\"keyword\">double</span> Dx, Sigma1 = <span class=\"number\">0</span>, Sigma2 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; ++i) &#123;</span><br><span class=\"line\">        Sigma1 += stu[i][<span class=\"number\">5</span>];</span><br><span class=\"line\">        Sigma2 += <span class=\"built_in\">pow</span>(stu[i][<span class=\"number\">5</span>], <span class=\"number\">2</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Dx = (Sigma2 / <span class=\"number\">10</span>) - (<span class=\"built_in\">pow</span>(Sigma1 / <span class=\"number\">10</span>, <span class=\"number\">2</span>));</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;平均分方差为：%.2lf\\n&quot;</span>, Dx);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">double</span> stu[<span class=\"number\">10</span>][<span class=\"number\">6</span>] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">5</span>; ++j) &#123;</span><br><span class=\"line\">            stu[i][j] = (random() % <span class=\"number\">40</span>) + <span class=\"number\">50</span>;</span><br><span class=\"line\"><span class=\"comment\">//            scanf(&quot;%lf&quot;, &amp;stu[i][j]);</span></span><br><span class=\"line\">            stu[i][<span class=\"number\">5</span>] += stu[i][j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        stu[i][<span class=\"number\">5</span>] = stu[i][<span class=\"number\">5</span>] / <span class=\"number\">5</span>;            <span class=\"comment\">//计算每个学生平均分</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    func1(stu);</span><br><span class=\"line\">    func2(stu);</span><br><span class=\"line\">    func3(stu);</span><br><span class=\"line\">    func4(stu);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","site":{"data":{}},"excerpt":"代码\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n\n\n#include <iostream>\n#include <math.h>\n\nvoid func1(double stu[10][6]) {","more":"<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;math.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">func1</span><span class=\"params\">(<span class=\"keyword\">double</span> stu[<span class=\"number\">10</span>][<span class=\"number\">6</span>])</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//计算各科平均分</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!i) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;编号\\ts1\\t\\ts2\\t\\ts3\\t\\ts4\\t\\ts5\\t\\t平均成绩\\n&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\t&quot;</span>, i + <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">6</span>; ++j) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%.2lf\\t&quot;</span>, stu[i][j]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">func2</span><span class=\"params\">(<span class=\"keyword\">double</span> stu[<span class=\"number\">10</span>][<span class=\"number\">6</span>])</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//各科平均成绩</span></span><br><span class=\"line\">    <span class=\"keyword\">double</span> class_sum[<span class=\"number\">5</span>] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">5</span>; ++j) &#123;</span><br><span class=\"line\">            class_sum[j] += stu[i][j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; ++i) &#123;</span><br><span class=\"line\">        class_sum[i] /= <span class=\"number\">10</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;平均\\t&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; ++i) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%.2lf\\t&quot;</span>, class_sum[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">func3</span><span class=\"params\">(<span class=\"keyword\">double</span> stu[<span class=\"number\">10</span>][<span class=\"number\">6</span>])</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//最高分</span></span><br><span class=\"line\">    <span class=\"keyword\">double</span> max_num = <span class=\"number\">-1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> max_row, max_col;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">5</span>; ++j) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (stu[i][j] &gt; max_num) &#123;</span><br><span class=\"line\">                max_num = stu[i][j];</span><br><span class=\"line\">                max_row = i;</span><br><span class=\"line\">                max_col = j;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;最高分数为：%.2lf,科目为：s%d,学生编号为：%d\\n&quot;</span>, max_num, max_col + <span class=\"number\">1</span>, max_row + <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">func4</span><span class=\"params\">(<span class=\"keyword\">double</span> stu[<span class=\"number\">10</span>][<span class=\"number\">6</span>])</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//方差</span></span><br><span class=\"line\">    <span class=\"keyword\">double</span> Dx, Sigma1 = <span class=\"number\">0</span>, Sigma2 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; ++i) &#123;</span><br><span class=\"line\">        Sigma1 += stu[i][<span class=\"number\">5</span>];</span><br><span class=\"line\">        Sigma2 += <span class=\"built_in\">pow</span>(stu[i][<span class=\"number\">5</span>], <span class=\"number\">2</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Dx = (Sigma2 / <span class=\"number\">10</span>) - (<span class=\"built_in\">pow</span>(Sigma1 / <span class=\"number\">10</span>, <span class=\"number\">2</span>));</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;平均分方差为：%.2lf\\n&quot;</span>, Dx);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">double</span> stu[<span class=\"number\">10</span>][<span class=\"number\">6</span>] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">5</span>; ++j) &#123;</span><br><span class=\"line\">            stu[i][j] = (random() % <span class=\"number\">40</span>) + <span class=\"number\">50</span>;</span><br><span class=\"line\"><span class=\"comment\">//            scanf(&quot;%lf&quot;, &amp;stu[i][j]);</span></span><br><span class=\"line\">            stu[i][<span class=\"number\">5</span>] += stu[i][j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        stu[i][<span class=\"number\">5</span>] = stu[i][<span class=\"number\">5</span>] / <span class=\"number\">5</span>;            <span class=\"comment\">//计算每个学生平均分</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    func1(stu);</span><br><span class=\"line\">    func2(stu);</span><br><span class=\"line\">    func3(stu);</span><br><span class=\"line\">    func4(stu);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"第四节 操作系统的特征","date":"2021-03-16T02:17:42.000Z","_content":"\n# 操作系统的特征\n\n## 操作系统的四大基本特征：\n1. ```并发```\n2. ```共享```\n3. 虚拟\n4. 异步\n\n---\n\n## 并发和并行的区别\n\n### 并行是一种物理的、微观的同时性概念并发是一种逻辑的、宏观的同时性概念\n<!-- more -->\n### 单处理机不可能实现并行，但可以实现并发。多处理机系统既可以实现并行，也可以实现并发\n\n### 并发，指的是多个事情，在同一时间段内同时发生了。并行，指的是多个事情，在同一时间点上同时发生了。 \n\n### 并发的多个任务之间是互相抢占资源的。 并行的多个任务之间是不互相抢占资源的、 只有在多cpu的情况中，才会发生并行。\n\n","source":"_posts/第四节-操作系统的特征.md","raw":"---\ntitle: 第四节 操作系统的特征\ndate: 2021-03-16 10:17:42\ntags: 操作系统\n---\n\n# 操作系统的特征\n\n## 操作系统的四大基本特征：\n1. ```并发```\n2. ```共享```\n3. 虚拟\n4. 异步\n\n---\n\n## 并发和并行的区别\n\n### 并行是一种物理的、微观的同时性概念并发是一种逻辑的、宏观的同时性概念\n<!-- more -->\n### 单处理机不可能实现并行，但可以实现并发。多处理机系统既可以实现并行，也可以实现并发\n\n### 并发，指的是多个事情，在同一时间段内同时发生了。并行，指的是多个事情，在同一时间点上同时发生了。 \n\n### 并发的多个任务之间是互相抢占资源的。 并行的多个任务之间是不互相抢占资源的、 只有在多cpu的情况中，才会发生并行。\n\n","slug":"第四节-操作系统的特征","published":1,"updated":"2021-04-13T03:31:50.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckojvxert001uboe24crtg4dz","content":"<h1 id=\"操作系统的特征\"><a href=\"#操作系统的特征\" class=\"headerlink\" title=\"操作系统的特征\"></a>操作系统的特征</h1><h2 id=\"操作系统的四大基本特征：\"><a href=\"#操作系统的四大基本特征：\" class=\"headerlink\" title=\"操作系统的四大基本特征：\"></a>操作系统的四大基本特征：</h2><ol>\n<li><code>并发</code></li>\n<li><code>共享</code></li>\n<li>虚拟</li>\n<li>异步</li>\n</ol>\n<hr>\n<h2 id=\"并发和并行的区别\"><a href=\"#并发和并行的区别\" class=\"headerlink\" title=\"并发和并行的区别\"></a>并发和并行的区别</h2><h3 id=\"并行是一种物理的、微观的同时性概念并发是一种逻辑的、宏观的同时性概念\"><a href=\"#并行是一种物理的、微观的同时性概念并发是一种逻辑的、宏观的同时性概念\" class=\"headerlink\" title=\"并行是一种物理的、微观的同时性概念并发是一种逻辑的、宏观的同时性概念\"></a>并行是一种物理的、微观的同时性概念并发是一种逻辑的、宏观的同时性概念</h3><span id=\"more\"></span>\n<h3 id=\"单处理机不可能实现并行，但可以实现并发。多处理机系统既可以实现并行，也可以实现并发\"><a href=\"#单处理机不可能实现并行，但可以实现并发。多处理机系统既可以实现并行，也可以实现并发\" class=\"headerlink\" title=\"单处理机不可能实现并行，但可以实现并发。多处理机系统既可以实现并行，也可以实现并发\"></a>单处理机不可能实现并行，但可以实现并发。多处理机系统既可以实现并行，也可以实现并发</h3><h3 id=\"并发，指的是多个事情，在同一时间段内同时发生了。并行，指的是多个事情，在同一时间点上同时发生了。\"><a href=\"#并发，指的是多个事情，在同一时间段内同时发生了。并行，指的是多个事情，在同一时间点上同时发生了。\" class=\"headerlink\" title=\"并发，指的是多个事情，在同一时间段内同时发生了。并行，指的是多个事情，在同一时间点上同时发生了。\"></a>并发，指的是多个事情，在同一时间段内同时发生了。并行，指的是多个事情，在同一时间点上同时发生了。</h3><h3 id=\"并发的多个任务之间是互相抢占资源的。-并行的多个任务之间是不互相抢占资源的、-只有在多cpu的情况中，才会发生并行。\"><a href=\"#并发的多个任务之间是互相抢占资源的。-并行的多个任务之间是不互相抢占资源的、-只有在多cpu的情况中，才会发生并行。\" class=\"headerlink\" title=\"并发的多个任务之间是互相抢占资源的。 并行的多个任务之间是不互相抢占资源的、 只有在多cpu的情况中，才会发生并行。\"></a>并发的多个任务之间是互相抢占资源的。 并行的多个任务之间是不互相抢占资源的、 只有在多cpu的情况中，才会发生并行。</h3><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","site":{"data":{}},"excerpt":"操作系统的特征\n操作系统的四大基本特征：\n 1. 并发\n 2. 共享\n 3. 虚拟\n 4. 异步\n\n\n\n\n并发和并行的区别\n并行是一种物理的、微观的同时性概念并发是一种逻辑的、宏观的同时性概念\n单处理机不可能实现并行，但可以实现并发。多处理机系统既可以实现并行，也可以实现并发\n并发，指的是多个事情，在同一时间段内同时发生了。并行，指的是多个事情，在同一时间点上同时发生了。\n并发的多个任务之间是互相抢占资源的。 并行的多个任务之间是不互相抢占资源的、 只有在多cpu的情况中，才会发生并行。","more":"<h3 id=\"单处理机不可能实现并行，但可以实现并发。多处理机系统既可以实现并行，也可以实现并发\"><a href=\"#单处理机不可能实现并行，但可以实现并发。多处理机系统既可以实现并行，也可以实现并发\" class=\"headerlink\" title=\"单处理机不可能实现并行，但可以实现并发。多处理机系统既可以实现并行，也可以实现并发\"></a>单处理机不可能实现并行，但可以实现并发。多处理机系统既可以实现并行，也可以实现并发</h3><h3 id=\"并发，指的是多个事情，在同一时间段内同时发生了。并行，指的是多个事情，在同一时间点上同时发生了。\"><a href=\"#并发，指的是多个事情，在同一时间段内同时发生了。并行，指的是多个事情，在同一时间点上同时发生了。\" class=\"headerlink\" title=\"并发，指的是多个事情，在同一时间段内同时发生了。并行，指的是多个事情，在同一时间点上同时发生了。\"></a>并发，指的是多个事情，在同一时间段内同时发生了。并行，指的是多个事情，在同一时间点上同时发生了。</h3><h3 id=\"并发的多个任务之间是互相抢占资源的。-并行的多个任务之间是不互相抢占资源的、-只有在多cpu的情况中，才会发生并行。\"><a href=\"#并发的多个任务之间是互相抢占资源的。-并行的多个任务之间是不互相抢占资源的、-只有在多cpu的情况中，才会发生并行。\" class=\"headerlink\" title=\"并发的多个任务之间是互相抢占资源的。 并行的多个任务之间是不互相抢占资源的、 只有在多cpu的情况中，才会发生并行。\"></a>并发的多个任务之间是互相抢占资源的。 并行的多个任务之间是不互相抢占资源的、 只有在多cpu的情况中，才会发生并行。</h3>"},{"title":"Matlab实验2-1","date":"2021-04-01T03:32:28.000Z","_content":"\n## Matlab实验2-1\n\n>Matlab图形操作实验\n\n---\n\n\n## 第4讲例题：4-1，4-2，4-5，4-6，4-7\n\n<!-- more -->\n### 4-1：画{% katex %}y=sin(x+3){% endkatex %}和{% katex %}y=exp(sin(x)){% endkatex %}的图像. \n\n```Matlab\nx = -2 * pi:0.1:2 * pi;\ny1 = sin(x + 3);\ny2 = exp(sin(x));\nplot(x, y1, '-*', x, y2, ':o')  %'-'表示实线，'*'表示以*标注；'：'表示点线，'o'表示用圆圈标出数据点\n```\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cM8hVJ.png\" width=\"50%\"></center>\n\n\n### 4-2：用不同标度在同一坐标绘制曲线{% katex %}y_{1}=200e^{-0.05x}sinx{% endkatex %}和{% katex %}y_{2}=0.8e^{-0.5x}sin10x{% endkatex %}\n\n```Matlab\nx = 0:0.1:20;\ny1 = 200 * exp(-0.05 * x) .* sin(x); %要用.*\ny2 = 0.8 * exp(-0.5 * x) .* sin(10 * x);\nplot(x, y1, x, y2); %plot只有一个坐标轴，plotyy则有两个坐标轴\n\nlegend('y_1=200e^{-0.05x}sinx', 'y_2=0.8e^{-0.5x}sin10x'); %LaTex\n```\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cM84a9.png\" width=\"50%\"></center>\n\n### 4-5：绘制{% katex %}r=sint*cost{% endkatex %}的极坐标图.\n\n```Matlab\nt = 0:pi / 50:2 * pi;\nr = sin(t) .* cos(t);\npolar(t, r, 'dc');      %d表示菱形，c表示青色\n```\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cM855R.png\" width=\"50%\"></center>\n\n### 4-6：subplot划分画图区域\n\n```Matlab\n%将一个绘图窗口分割成m*n个子区域，并按行从左至右依次编号.p表示第p个绘图子区域.\n%subplot('Position',[left,bottom,width,height])\nx = -2:0.2:2;\ny1 = x + sin(x);\ny2 = sin(x) ./ x;\ny3 = (x.^2);\nsubplot(2, 2, 1), plot(x, y1, 'm.'); %'m'表示洋红，'.'表示用点标出数据点\nsubplot(2, 2, 2), plot(x, y2, 'rp'); %'r'表示红色，'p'表示五角星\nsubplot('position', [0.2, 0.05, 0.6, 0.45]), plot(x, y3)\n```\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cM8Wb4.png\" width=\"50%\"></center>\n\n### 4-7：legend 添加图例 \n\n```Matlab\nx = 0:0.2:2 * pi;\nhold on\nplot(x, cos(x), 'r+:');\nplot(x, sin(x), 'bd-.');\nplot(x, 2 * cos(x), 'kh-');\nlegend('cos(x)', 'sin(x)', '2cos(x)')\nxlabel('x');\nylabel('y');\ntitle('几种三角函数图像比较')\ntext(0.7, 1.7, '\\leftarrow 2cos(x)');\ntext(2.7, 0.6, '\\leftarrow sin(x)');\ntext(2.2, -0.5, '\\leftarrow cos(x)')\nhold off\ngtext('真好!')\n```\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMJwhn.jpg\" width=\"50%\"></center>\n\n---\n\n\n### <center>Next⬇️</center>\n\n<center><a href=\"http://lhxone.top/2021/04/05/Matlab实验2-2/\">Matlab练习2-2 🍺</a></center>","source":"_posts/Matlab实验2-1.md","raw":"---\ntitle: Matlab实验2-1\ndate: 2021-04-01 11:32:28\ntags: Matlab\n---\n\n## Matlab实验2-1\n\n>Matlab图形操作实验\n\n---\n\n\n## 第4讲例题：4-1，4-2，4-5，4-6，4-7\n\n<!-- more -->\n### 4-1：画{% katex %}y=sin(x+3){% endkatex %}和{% katex %}y=exp(sin(x)){% endkatex %}的图像. \n\n```Matlab\nx = -2 * pi:0.1:2 * pi;\ny1 = sin(x + 3);\ny2 = exp(sin(x));\nplot(x, y1, '-*', x, y2, ':o')  %'-'表示实线，'*'表示以*标注；'：'表示点线，'o'表示用圆圈标出数据点\n```\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cM8hVJ.png\" width=\"50%\"></center>\n\n\n### 4-2：用不同标度在同一坐标绘制曲线{% katex %}y_{1}=200e^{-0.05x}sinx{% endkatex %}和{% katex %}y_{2}=0.8e^{-0.5x}sin10x{% endkatex %}\n\n```Matlab\nx = 0:0.1:20;\ny1 = 200 * exp(-0.05 * x) .* sin(x); %要用.*\ny2 = 0.8 * exp(-0.5 * x) .* sin(10 * x);\nplot(x, y1, x, y2); %plot只有一个坐标轴，plotyy则有两个坐标轴\n\nlegend('y_1=200e^{-0.05x}sinx', 'y_2=0.8e^{-0.5x}sin10x'); %LaTex\n```\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cM84a9.png\" width=\"50%\"></center>\n\n### 4-5：绘制{% katex %}r=sint*cost{% endkatex %}的极坐标图.\n\n```Matlab\nt = 0:pi / 50:2 * pi;\nr = sin(t) .* cos(t);\npolar(t, r, 'dc');      %d表示菱形，c表示青色\n```\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cM855R.png\" width=\"50%\"></center>\n\n### 4-6：subplot划分画图区域\n\n```Matlab\n%将一个绘图窗口分割成m*n个子区域，并按行从左至右依次编号.p表示第p个绘图子区域.\n%subplot('Position',[left,bottom,width,height])\nx = -2:0.2:2;\ny1 = x + sin(x);\ny2 = sin(x) ./ x;\ny3 = (x.^2);\nsubplot(2, 2, 1), plot(x, y1, 'm.'); %'m'表示洋红，'.'表示用点标出数据点\nsubplot(2, 2, 2), plot(x, y2, 'rp'); %'r'表示红色，'p'表示五角星\nsubplot('position', [0.2, 0.05, 0.6, 0.45]), plot(x, y3)\n```\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cM8Wb4.png\" width=\"50%\"></center>\n\n### 4-7：legend 添加图例 \n\n```Matlab\nx = 0:0.2:2 * pi;\nhold on\nplot(x, cos(x), 'r+:');\nplot(x, sin(x), 'bd-.');\nplot(x, 2 * cos(x), 'kh-');\nlegend('cos(x)', 'sin(x)', '2cos(x)')\nxlabel('x');\nylabel('y');\ntitle('几种三角函数图像比较')\ntext(0.7, 1.7, '\\leftarrow 2cos(x)');\ntext(2.7, 0.6, '\\leftarrow sin(x)');\ntext(2.2, -0.5, '\\leftarrow cos(x)')\nhold off\ngtext('真好!')\n```\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMJwhn.jpg\" width=\"50%\"></center>\n\n---\n\n\n### <center>Next⬇️</center>\n\n<center><a href=\"http://lhxone.top/2021/04/05/Matlab实验2-2/\">Matlab练习2-2 🍺</a></center>","slug":"Matlab实验2-1","published":1,"updated":"2021-04-13T03:30:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckojvxeru001wboe22d6j4tst","content":"<h2 id=\"Matlab实验2-1\"><a href=\"#Matlab实验2-1\" class=\"headerlink\" title=\"Matlab实验2-1\"></a>Matlab实验2-1</h2><blockquote>\n<p>Matlab图形操作实验</p>\n</blockquote>\n<hr>\n<h2 id=\"第4讲例题：4-1，4-2，4-5，4-6，4-7\"><a href=\"#第4讲例题：4-1，4-2，4-5，4-6，4-7\" class=\"headerlink\" title=\"第4讲例题：4-1，4-2，4-5，4-6，4-7\"></a>第4讲例题：4-1，4-2，4-5，4-6，4-7</h2><span id=\"more\"></span>\n<h3 id=\"4-1：画和的图像\"><a href=\"#4-1：画和的图像\" class=\"headerlink\" title=\"4-1：画和的图像.\"></a>4-1：画<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mo>=</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">y=sin(x+3)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">3</span><span class=\"mclose\">)</span></span></span></span>和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mo>=</mo><mi>e</mi><mi>x</mi><mi>p</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">y=exp(sin(x))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span></span></span></span>的图像.</h3><figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x = <span class=\"number\">-2</span> * <span class=\"built_in\">pi</span>:<span class=\"number\">0.1</span>:<span class=\"number\">2</span> * <span class=\"built_in\">pi</span>;</span><br><span class=\"line\">y1 = <span class=\"built_in\">sin</span>(x + <span class=\"number\">3</span>);</span><br><span class=\"line\">y2 = <span class=\"built_in\">exp</span>(<span class=\"built_in\">sin</span>(x));</span><br><span class=\"line\"><span class=\"built_in\">plot</span>(x, y1, <span class=\"string\">&#x27;-*&#x27;</span>, x, y2, <span class=\"string\">&#x27;:o&#x27;</span>)  <span class=\"comment\">%&#x27;-&#x27;表示实线，&#x27;*&#x27;表示以*标注；&#x27;：&#x27;表示点线，&#x27;o&#x27;表示用圆圈标出数据点</span></span><br></pre></td></tr></table></figure>\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cM8hVJ.png\" width=\"50%\"></center>\n\n\n<h3 id=\"4-2：用不同标度在同一坐标绘制曲线和\"><a href=\"#4-2：用不同标度在同一坐标绘制曲线和\" class=\"headerlink\" title=\"4-2：用不同标度在同一坐标绘制曲线和\"></a>4-2：用不同标度在同一坐标绘制曲线<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>y</mi><mn>1</mn></msub><mo>=</mo><mn>200</mn><msup><mi>e</mi><mrow><mo>−</mo><mn>0.05</mn><mi>x</mi></mrow></msup><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">y_{1}=200e^{-0.05x}sinx</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">0</span><span class=\"mord mtight\">.</span><span class=\"mord mtight\">0</span><span class=\"mord mtight\">5</span><span class=\"mord mathnormal mtight\">x</span></span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span></span></span></span>和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>y</mi><mn>2</mn></msub><mo>=</mo><mn>0.8</mn><msup><mi>e</mi><mrow><mo>−</mo><mn>0.5</mn><mi>x</mi></mrow></msup><mi>s</mi><mi>i</mi><mi>n</mi><mn>10</mn><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">y_{2}=0.8e^{-0.5x}sin10x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\">0</span><span class=\"mord\">.</span><span class=\"mord\">8</span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">0</span><span class=\"mord mtight\">.</span><span class=\"mord mtight\">5</span><span class=\"mord mathnormal mtight\">x</span></span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord mathnormal\">x</span></span></span></span></h3><figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x = <span class=\"number\">0</span>:<span class=\"number\">0.1</span>:<span class=\"number\">20</span>;</span><br><span class=\"line\">y1 = <span class=\"number\">200</span> * <span class=\"built_in\">exp</span>(<span class=\"number\">-0.05</span> * x) .* <span class=\"built_in\">sin</span>(x); <span class=\"comment\">%要用.*</span></span><br><span class=\"line\">y2 = <span class=\"number\">0.8</span> * <span class=\"built_in\">exp</span>(<span class=\"number\">-0.5</span> * x) .* <span class=\"built_in\">sin</span>(<span class=\"number\">10</span> * x);</span><br><span class=\"line\"><span class=\"built_in\">plot</span>(x, y1, x, y2); <span class=\"comment\">%plot只有一个坐标轴，plotyy则有两个坐标轴</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">legend</span>(<span class=\"string\">&#x27;y_1=200e^&#123;-0.05x&#125;sinx&#x27;</span>, <span class=\"string\">&#x27;y_2=0.8e^&#123;-0.5x&#125;sin10x&#x27;</span>); <span class=\"comment\">%LaTex</span></span><br></pre></td></tr></table></figure>\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cM84a9.png\" width=\"50%\"></center>\n\n<h3 id=\"4-5：绘制的极坐标图\"><a href=\"#4-5：绘制的极坐标图\" class=\"headerlink\" title=\"4-5：绘制的极坐标图.\"></a>4-5：绘制<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mo>=</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>t</mi><mo>∗</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">r=sint*cost</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span></span></span></span>的极坐标图.</h3><figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">t = <span class=\"number\">0</span>:<span class=\"built_in\">pi</span> / <span class=\"number\">50</span>:<span class=\"number\">2</span> * <span class=\"built_in\">pi</span>;</span><br><span class=\"line\">r = <span class=\"built_in\">sin</span>(t) .* <span class=\"built_in\">cos</span>(t);</span><br><span class=\"line\">polar(t, r, <span class=\"string\">&#x27;dc&#x27;</span>);      <span class=\"comment\">%d表示菱形，c表示青色</span></span><br></pre></td></tr></table></figure>\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cM855R.png\" width=\"50%\"></center>\n\n<h3 id=\"4-6：subplot划分画图区域\"><a href=\"#4-6：subplot划分画图区域\" class=\"headerlink\" title=\"4-6：subplot划分画图区域\"></a>4-6：subplot划分画图区域</h3><figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">%将一个绘图窗口分割成m*n个子区域，并按行从左至右依次编号.p表示第p个绘图子区域.</span></span><br><span class=\"line\"><span class=\"comment\">%subplot(&#x27;Position&#x27;,[left,bottom,width,height])</span></span><br><span class=\"line\">x = <span class=\"number\">-2</span>:<span class=\"number\">0.2</span>:<span class=\"number\">2</span>;</span><br><span class=\"line\">y1 = x + <span class=\"built_in\">sin</span>(x);</span><br><span class=\"line\">y2 = <span class=\"built_in\">sin</span>(x) ./ x;</span><br><span class=\"line\">y3 = (x.^<span class=\"number\">2</span>);</span><br><span class=\"line\">subplot(<span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>), <span class=\"built_in\">plot</span>(x, y1, <span class=\"string\">&#x27;m.&#x27;</span>); <span class=\"comment\">%&#x27;m&#x27;表示洋红，&#x27;.&#x27;表示用点标出数据点</span></span><br><span class=\"line\">subplot(<span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>), <span class=\"built_in\">plot</span>(x, y2, <span class=\"string\">&#x27;rp&#x27;</span>); <span class=\"comment\">%&#x27;r&#x27;表示红色，&#x27;p&#x27;表示五角星</span></span><br><span class=\"line\">subplot(<span class=\"string\">&#x27;position&#x27;</span>, [<span class=\"number\">0.2</span>, <span class=\"number\">0.05</span>, <span class=\"number\">0.6</span>, <span class=\"number\">0.45</span>]), <span class=\"built_in\">plot</span>(x, y3)</span><br></pre></td></tr></table></figure>\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cM8Wb4.png\" width=\"50%\"></center>\n\n<h3 id=\"4-7：legend-添加图例\"><a href=\"#4-7：legend-添加图例\" class=\"headerlink\" title=\"4-7：legend 添加图例\"></a>4-7：legend 添加图例</h3><figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x = <span class=\"number\">0</span>:<span class=\"number\">0.2</span>:<span class=\"number\">2</span> * <span class=\"built_in\">pi</span>;</span><br><span class=\"line\"><span class=\"built_in\">hold</span> on</span><br><span class=\"line\"><span class=\"built_in\">plot</span>(x, <span class=\"built_in\">cos</span>(x), <span class=\"string\">&#x27;r+:&#x27;</span>);</span><br><span class=\"line\"><span class=\"built_in\">plot</span>(x, <span class=\"built_in\">sin</span>(x), <span class=\"string\">&#x27;bd-.&#x27;</span>);</span><br><span class=\"line\"><span class=\"built_in\">plot</span>(x, <span class=\"number\">2</span> * <span class=\"built_in\">cos</span>(x), <span class=\"string\">&#x27;kh-&#x27;</span>);</span><br><span class=\"line\"><span class=\"built_in\">legend</span>(<span class=\"string\">&#x27;cos(x)&#x27;</span>, <span class=\"string\">&#x27;sin(x)&#x27;</span>, <span class=\"string\">&#x27;2cos(x)&#x27;</span>)</span><br><span class=\"line\">xlabel(<span class=\"string\">&#x27;x&#x27;</span>);</span><br><span class=\"line\">ylabel(<span class=\"string\">&#x27;y&#x27;</span>);</span><br><span class=\"line\">title(<span class=\"string\">&#x27;几种三角函数图像比较&#x27;</span>)</span><br><span class=\"line\">text(<span class=\"number\">0.7</span>, <span class=\"number\">1.7</span>, <span class=\"string\">&#x27;\\leftarrow 2cos(x)&#x27;</span>);</span><br><span class=\"line\">text(<span class=\"number\">2.7</span>, <span class=\"number\">0.6</span>, <span class=\"string\">&#x27;\\leftarrow sin(x)&#x27;</span>);</span><br><span class=\"line\">text(<span class=\"number\">2.2</span>, <span class=\"number\">-0.5</span>, <span class=\"string\">&#x27;\\leftarrow cos(x)&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">hold</span> off</span><br><span class=\"line\">gtext(<span class=\"string\">&#x27;真好!&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMJwhn.jpg\" width=\"50%\"></center>\n\n<hr>\n<h3 id=\"Next⬇️\"><a href=\"#Next⬇️\" class=\"headerlink\" title=\"Next⬇️\"></a><center>Next⬇️</center></h3><center><a href=\"http://lhxone.top/2021/04/05/Matlab实验2-2/\">Matlab练习2-2 🍺</a></center><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kity@2.0.4/dist/kity.min.js\"></script><script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/kityminder-core@1.4.50/dist/kityminder.core.min.js\"></script><script defer=\"true\" type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.js\"></script><link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/hexo-simple-mindmap@0.2.0/dist/mindmap.min.css\">","site":{"data":{}},"excerpt":"Matlab实验2-1\nMatlab图形操作实验\n\n\n\n\n第4讲例题：4-1，4-2，4-5，4-6，4-7\n4-1：画y=sin(x+3)y=sin(x+3)y=sin(x+3)和y=exp(sin(x))y=exp(sin(x))y=exp(sin(x))的图像.\n1\n2\n3\n4\n\n\nx = -2 * pi:0.1:2 * pi;\ny1 = sin(x + 3);\ny2 = exp(sin(x));\nplot(x, y1, '-*', x, y2, ':o')  %'-'表示实线，'*'表示以*标注；'：'表示点线，'o'表示用圆圈标出数据点\n\n\n4-2：用不同标度在同一坐标绘制曲线y1=","more":"<h3 id=\"4-1：画和的图像\"><a href=\"#4-1：画和的图像\" class=\"headerlink\" title=\"4-1：画和的图像.\"></a>4-1：画<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mo>=</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo>+</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">y=sin(x+3)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">3</span><span class=\"mclose\">)</span></span></span></span>和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mo>=</mo><mi>e</mi><mi>x</mi><mi>p</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">y=exp(sin(x))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span></span></span></span>的图像.</h3><figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x = <span class=\"number\">-2</span> * <span class=\"built_in\">pi</span>:<span class=\"number\">0.1</span>:<span class=\"number\">2</span> * <span class=\"built_in\">pi</span>;</span><br><span class=\"line\">y1 = <span class=\"built_in\">sin</span>(x + <span class=\"number\">3</span>);</span><br><span class=\"line\">y2 = <span class=\"built_in\">exp</span>(<span class=\"built_in\">sin</span>(x));</span><br><span class=\"line\"><span class=\"built_in\">plot</span>(x, y1, <span class=\"string\">&#x27;-*&#x27;</span>, x, y2, <span class=\"string\">&#x27;:o&#x27;</span>)  <span class=\"comment\">%&#x27;-&#x27;表示实线，&#x27;*&#x27;表示以*标注；&#x27;：&#x27;表示点线，&#x27;o&#x27;表示用圆圈标出数据点</span></span><br></pre></td></tr></table></figure>\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cM8hVJ.png\" width=\"50%\"></center>\n\n\n<h3 id=\"4-2：用不同标度在同一坐标绘制曲线和\"><a href=\"#4-2：用不同标度在同一坐标绘制曲线和\" class=\"headerlink\" title=\"4-2：用不同标度在同一坐标绘制曲线和\"></a>4-2：用不同标度在同一坐标绘制曲线<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>y</mi><mn>1</mn></msub><mo>=</mo><mn>200</mn><msup><mi>e</mi><mrow><mo>−</mo><mn>0.05</mn><mi>x</mi></mrow></msup><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">y_{1}=200e^{-0.05x}sinx</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">0</span><span class=\"mord mtight\">.</span><span class=\"mord mtight\">0</span><span class=\"mord mtight\">5</span><span class=\"mord mathnormal mtight\">x</span></span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span></span></span></span>和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>y</mi><mn>2</mn></msub><mo>=</mo><mn>0.8</mn><msup><mi>e</mi><mrow><mo>−</mo><mn>0.5</mn><mi>x</mi></mrow></msup><mi>s</mi><mi>i</mi><mi>n</mi><mn>10</mn><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">y_{2}=0.8e^{-0.5x}sin10x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\">0</span><span class=\"mord\">.</span><span class=\"mord\">8</span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">0</span><span class=\"mord mtight\">.</span><span class=\"mord mtight\">5</span><span class=\"mord mathnormal mtight\">x</span></span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord mathnormal\">x</span></span></span></span></h3><figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x = <span class=\"number\">0</span>:<span class=\"number\">0.1</span>:<span class=\"number\">20</span>;</span><br><span class=\"line\">y1 = <span class=\"number\">200</span> * <span class=\"built_in\">exp</span>(<span class=\"number\">-0.05</span> * x) .* <span class=\"built_in\">sin</span>(x); <span class=\"comment\">%要用.*</span></span><br><span class=\"line\">y2 = <span class=\"number\">0.8</span> * <span class=\"built_in\">exp</span>(<span class=\"number\">-0.5</span> * x) .* <span class=\"built_in\">sin</span>(<span class=\"number\">10</span> * x);</span><br><span class=\"line\"><span class=\"built_in\">plot</span>(x, y1, x, y2); <span class=\"comment\">%plot只有一个坐标轴，plotyy则有两个坐标轴</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">legend</span>(<span class=\"string\">&#x27;y_1=200e^&#123;-0.05x&#125;sinx&#x27;</span>, <span class=\"string\">&#x27;y_2=0.8e^&#123;-0.5x&#125;sin10x&#x27;</span>); <span class=\"comment\">%LaTex</span></span><br></pre></td></tr></table></figure>\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cM84a9.png\" width=\"50%\"></center>\n\n<h3 id=\"4-5：绘制的极坐标图\"><a href=\"#4-5：绘制的极坐标图\" class=\"headerlink\" title=\"4-5：绘制的极坐标图.\"></a>4-5：绘制<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mo>=</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>t</mi><mo>∗</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">r=sint*cost</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span></span></span></span>的极坐标图.</h3><figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">t = <span class=\"number\">0</span>:<span class=\"built_in\">pi</span> / <span class=\"number\">50</span>:<span class=\"number\">2</span> * <span class=\"built_in\">pi</span>;</span><br><span class=\"line\">r = <span class=\"built_in\">sin</span>(t) .* <span class=\"built_in\">cos</span>(t);</span><br><span class=\"line\">polar(t, r, <span class=\"string\">&#x27;dc&#x27;</span>);      <span class=\"comment\">%d表示菱形，c表示青色</span></span><br></pre></td></tr></table></figure>\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cM855R.png\" width=\"50%\"></center>\n\n<h3 id=\"4-6：subplot划分画图区域\"><a href=\"#4-6：subplot划分画图区域\" class=\"headerlink\" title=\"4-6：subplot划分画图区域\"></a>4-6：subplot划分画图区域</h3><figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">%将一个绘图窗口分割成m*n个子区域，并按行从左至右依次编号.p表示第p个绘图子区域.</span></span><br><span class=\"line\"><span class=\"comment\">%subplot(&#x27;Position&#x27;,[left,bottom,width,height])</span></span><br><span class=\"line\">x = <span class=\"number\">-2</span>:<span class=\"number\">0.2</span>:<span class=\"number\">2</span>;</span><br><span class=\"line\">y1 = x + <span class=\"built_in\">sin</span>(x);</span><br><span class=\"line\">y2 = <span class=\"built_in\">sin</span>(x) ./ x;</span><br><span class=\"line\">y3 = (x.^<span class=\"number\">2</span>);</span><br><span class=\"line\">subplot(<span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>), <span class=\"built_in\">plot</span>(x, y1, <span class=\"string\">&#x27;m.&#x27;</span>); <span class=\"comment\">%&#x27;m&#x27;表示洋红，&#x27;.&#x27;表示用点标出数据点</span></span><br><span class=\"line\">subplot(<span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>), <span class=\"built_in\">plot</span>(x, y2, <span class=\"string\">&#x27;rp&#x27;</span>); <span class=\"comment\">%&#x27;r&#x27;表示红色，&#x27;p&#x27;表示五角星</span></span><br><span class=\"line\">subplot(<span class=\"string\">&#x27;position&#x27;</span>, [<span class=\"number\">0.2</span>, <span class=\"number\">0.05</span>, <span class=\"number\">0.6</span>, <span class=\"number\">0.45</span>]), <span class=\"built_in\">plot</span>(x, y3)</span><br></pre></td></tr></table></figure>\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cM8Wb4.png\" width=\"50%\"></center>\n\n<h3 id=\"4-7：legend-添加图例\"><a href=\"#4-7：legend-添加图例\" class=\"headerlink\" title=\"4-7：legend 添加图例\"></a>4-7：legend 添加图例</h3><figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x = <span class=\"number\">0</span>:<span class=\"number\">0.2</span>:<span class=\"number\">2</span> * <span class=\"built_in\">pi</span>;</span><br><span class=\"line\"><span class=\"built_in\">hold</span> on</span><br><span class=\"line\"><span class=\"built_in\">plot</span>(x, <span class=\"built_in\">cos</span>(x), <span class=\"string\">&#x27;r+:&#x27;</span>);</span><br><span class=\"line\"><span class=\"built_in\">plot</span>(x, <span class=\"built_in\">sin</span>(x), <span class=\"string\">&#x27;bd-.&#x27;</span>);</span><br><span class=\"line\"><span class=\"built_in\">plot</span>(x, <span class=\"number\">2</span> * <span class=\"built_in\">cos</span>(x), <span class=\"string\">&#x27;kh-&#x27;</span>);</span><br><span class=\"line\"><span class=\"built_in\">legend</span>(<span class=\"string\">&#x27;cos(x)&#x27;</span>, <span class=\"string\">&#x27;sin(x)&#x27;</span>, <span class=\"string\">&#x27;2cos(x)&#x27;</span>)</span><br><span class=\"line\">xlabel(<span class=\"string\">&#x27;x&#x27;</span>);</span><br><span class=\"line\">ylabel(<span class=\"string\">&#x27;y&#x27;</span>);</span><br><span class=\"line\">title(<span class=\"string\">&#x27;几种三角函数图像比较&#x27;</span>)</span><br><span class=\"line\">text(<span class=\"number\">0.7</span>, <span class=\"number\">1.7</span>, <span class=\"string\">&#x27;\\leftarrow 2cos(x)&#x27;</span>);</span><br><span class=\"line\">text(<span class=\"number\">2.7</span>, <span class=\"number\">0.6</span>, <span class=\"string\">&#x27;\\leftarrow sin(x)&#x27;</span>);</span><br><span class=\"line\">text(<span class=\"number\">2.2</span>, <span class=\"number\">-0.5</span>, <span class=\"string\">&#x27;\\leftarrow cos(x)&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">hold</span> off</span><br><span class=\"line\">gtext(<span class=\"string\">&#x27;真好!&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<center><img src=\"https://z3.ax1x.com/2021/04/05/cMJwhn.jpg\" width=\"50%\"></center>\n\n<hr>\n<h3 id=\"Next⬇️\"><a href=\"#Next⬇️\" class=\"headerlink\" title=\"Next⬇️\"></a><center>Next⬇️</center></h3><center><a href=\"http://lhxone.top/2021/04/05/Matlab实验2-2/\">Matlab练习2-2 🍺</a></center>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ckojvxer00007boe24bu80bd4","tag_id":"ckojvxeqx0004boe2fwtqc1vn","_id":"ckojvxer1000aboe28hmnci9a"},{"post_id":"ckojvxer00008boe2bwr3ghn7","tag_id":"ckojvxeqx0004boe2fwtqc1vn","_id":"ckojvxer2000cboe2dzc61qj5"},{"post_id":"ckojvxer1000bboe26dzk2zle","tag_id":"ckojvxeqx0004boe2fwtqc1vn","_id":"ckojvxer4000fboe2efrw64oe"},{"post_id":"ckojvxeqs0001boe23gj46xmd","tag_id":"ckojvxeqx0004boe2fwtqc1vn","_id":"ckojvxer5000hboe25x30gudb"},{"post_id":"ckojvxeqs0001boe23gj46xmd","tag_id":"ckojvxer10009boe25rnb4gn0","_id":"ckojvxer6000kboe24o9h6wai"},{"post_id":"ckojvxer2000dboe29pdf17hb","tag_id":"ckojvxeqx0004boe2fwtqc1vn","_id":"ckojvxer7000mboe27s576ymv"},{"post_id":"ckojvxer4000gboe2db9s6p3c","tag_id":"ckojvxeqx0004boe2fwtqc1vn","_id":"ckojvxer8000pboe2ac7g1tnn"},{"post_id":"ckojvxeqw0003boe253dpdsag","tag_id":"ckojvxeqx0004boe2fwtqc1vn","_id":"ckojvxer9000rboe25x24dgbv"},{"post_id":"ckojvxeqz0006boe21mwh0ky5","tag_id":"ckojvxer6000jboe25b2k3x1w","_id":"ckojvxerd000tboe2c0dvch0s"},{"post_id":"ckojvxer5000iboe26af791sg","tag_id":"ckojvxer8000oboe2evcxc0q2","_id":"ckojvxere000wboe25w0i8nxk"},{"post_id":"ckojvxer6000lboe2177j8no5","tag_id":"ckojvxerd000uboe2005s90ep","_id":"ckojvxerf000yboe2dzf127y2"},{"post_id":"ckojvxer7000nboe285m8cu55","tag_id":"ckojvxerd000uboe2005s90ep","_id":"ckojvxerf0010boe2hqy37l82"},{"post_id":"ckojvxer8000qboe21hpg1yqg","tag_id":"ckojvxerd000uboe2005s90ep","_id":"ckojvxerg0012boe2hrnihevf"},{"post_id":"ckojvxer9000sboe2chyt2mqd","tag_id":"ckojvxerd000uboe2005s90ep","_id":"ckojvxerg0014boe24d052t2v"},{"post_id":"ckojvxerd000vboe2fyhmdpxz","tag_id":"ckojvxerd000uboe2005s90ep","_id":"ckojvxerg0015boe285jo3ctp"},{"post_id":"ckojvxerj0017boe241yqc1pc","tag_id":"ckojvxerd000uboe2005s90ep","_id":"ckojvxerk001aboe20meq50bl"},{"post_id":"ckojvxerk0019boe29wziepqr","tag_id":"ckojvxer10009boe25rnb4gn0","_id":"ckojvxerl001cboe2g9s0foms"},{"post_id":"ckojvxerj0016boe24jbw59w7","tag_id":"ckojvxerk0018boe222jj45f8","_id":"ckojvxerm001fboe2afh504q6"},{"post_id":"ckojvxerl001dboe282t30a0s","tag_id":"ckojvxerk0018boe222jj45f8","_id":"ckojvxern001hboe279pebneo"},{"post_id":"ckojvxerm001gboe25yf015fn","tag_id":"ckojvxerk0018boe222jj45f8","_id":"ckojvxerp001jboe2eqxkbo1s"},{"post_id":"ckojvxern001iboe277qfguak","tag_id":"ckojvxerm001eboe2dofk23lt","_id":"ckojvxerq001lboe2fyih92qf"},{"post_id":"ckojvxern001iboe277qfguak","tag_id":"ckojvxer6000jboe25b2k3x1w","_id":"ckojvxerq001nboe2arr40myu"},{"post_id":"ckojvxerl001bboe2gnwohu9j","tag_id":"ckojvxerm001eboe2dofk23lt","_id":"ckojvxerr001pboe2crx4dh3e"},{"post_id":"ckojvxerl001bboe2gnwohu9j","tag_id":"ckojvxer6000jboe25b2k3x1w","_id":"ckojvxers001rboe2f42chn6n"},{"post_id":"ckojvxerp001kboe22scabad6","tag_id":"ckojvxerm001eboe2dofk23lt","_id":"ckojvxert001tboe2g27x9ru6"},{"post_id":"ckojvxerp001kboe22scabad6","tag_id":"ckojvxer6000jboe25b2k3x1w","_id":"ckojvxeru001vboe2ei6ngsz1"},{"post_id":"ckojvxerq001mboe20km3fsrg","tag_id":"ckojvxeqx0004boe2fwtqc1vn","_id":"ckojvxeru001xboe2h0n7g5hs"},{"post_id":"ckojvxerq001oboe2gnatcoa8","tag_id":"ckojvxeqx0004boe2fwtqc1vn","_id":"ckojvxeru001yboe2bna45gwx"},{"post_id":"ckojvxerr001qboe2cpko2aq3","tag_id":"ckojvxerm001eboe2dofk23lt","_id":"ckojvxerv001zboe24aym0jcb"},{"post_id":"ckojvxerr001qboe2cpko2aq3","tag_id":"ckojvxer6000jboe25b2k3x1w","_id":"ckojvxerv0020boe230tt1jjk"},{"post_id":"ckojvxert001uboe24crtg4dz","tag_id":"ckojvxerk0018boe222jj45f8","_id":"ckojvxerv0021boe2dniwhuip"},{"post_id":"ckojvxeru001wboe22d6j4tst","tag_id":"ckojvxerd000uboe2005s90ep","_id":"ckojvxerv0022boe29yfh9rqw"}],"Tag":[{"name":"Java","_id":"ckojvxeqx0004boe2fwtqc1vn"},{"name":"demo","_id":"ckojvxer10009boe25rnb4gn0"},{"name":"C++","_id":"ckojvxer6000jboe25b2k3x1w"},{"name":"虚拟机","_id":"ckojvxer8000oboe2evcxc0q2"},{"name":"Matlab","_id":"ckojvxerd000uboe2005s90ep"},{"name":"操作系统","_id":"ckojvxerk0018boe222jj45f8"},{"name":"数据结构","_id":"ckojvxerm001eboe2dofk23lt"}]}}